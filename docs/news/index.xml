<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Data Visualization (Fall PMAP 8551/4551) News</title>
<link>https://aysps.github.io/Data-Visualization_2024/news/index.html</link>
<atom:link href="https://aysps.github.io/Data-Visualization_2024/news/index.xml" rel="self" type="application/rss+xml"/>
<description>Updates and FAQs for PMAP 8551/4551 at Georgia State University, Fall 2023</description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Wed, 13 Dec 2023 19:15:00 GMT</lastBuildDate>
<item>
  <title>What comes next?</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-12-13_what-next.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>I’ve finished grading all your final projects and have submitted your grades. I’m so proud of how much you all accomplished!</p>
<p>A bunch of you have asked me what other R-related classes you can take. If you’re a grad student, good news—there are a bunch!<sup>1</sup> The Andrew Young School has a whole <a href="https://aysps.gsu.edu/digital-landscape/courses-credentials/">policy analytics initiative</a> and <a href="https://aysps.gsu.edu/program/policy-analytics-graduate-cert/">online graduate certificate</a>, with classes like these:</p>
<ul>
<li>PMAP 8511: Big Data for Public Good</li>
<li>ECON 8720: Introduction to Data Management and Analysis</li>
<li>PMAP 8541: Coding in R for Policy Analytics</li>
<li>PMAP 8571: Machine Learning for Policy Analytics</li>
<li>PMAP 8561: GIS Applications</li>
</ul>
<p>I also teach a class called <a href="https://evalsp23.classes.andrewheiss.com/">Evaluation Research (PMAP 8521)</a> in the spring. It’s a really fun and useful class (I’ve had students get jobs because of it!). It’s basically a class in econometrics, or econ-flavored statistics focused on causation.</p>
<p>In the class you’ll learn all about causal inference, or how to legally claim causation with statistics. In your past classes you were always taught “correlation isn’t causation,” which is mostly true, except when it’s not. In PMAP 8521 you’ll get to legitimately make causal claims. We’ll cover fun tools like directed acyclic graphs (DAGs), randomized controlled trials, difference-in-differences analysis, regression discontinuity analysis, and instrumental variables.</p>
<p>It’s all in R, too, so you’ll learn how to do fancy stats in addition to making beautiful graphics. The R part is why former students have found jobs—tons of organizations are looking for R skills nowadays.</p>
<p>If you can interpret regression results and if you know what statistical significance means, you have the stats background for the class.</p>
<p>You can see <a href="https://evalsp23.classes.andrewheiss.com/">the website from the spring 2023 version of the class here</a> (the 2024 one will be roughly the same at evalsp24 dot classes dot…), and you can see that it’s full of videos and interactive code tutorials and other resources. It’s an in-person class, but because we’re still in a pandemic, I use a flipped-classroom approach and have students watch all the lecture videos before class, and we spend class time working on R stuff together in person.</p>
<p>Have a great break!</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>If you’re an undergrad, there’s not as much available; but you should consider graduate school at the Andrew Young School to get more policy analytics in the future!↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-12-13_what-next.html</guid>
  <pubDate>Wed, 13 Dec 2023 19:15:00 GMT</pubDate>
</item>
<item>
  <title>Final deadlines for things</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_final-deadlines.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Remember <a href="../syllabus.html#late-work">from the syllabus</a> that there aren’t really any official deadlines:</p>
<blockquote class="blockquote">
<p>With the exception of the mini projects and the final project, <strong>there’s no penalty for late work</strong>. There’s no such thing as late work. I would <strong>highly recommend</strong> staying caught up as much as possible, but if you need to turn something in late, that’s fine—there’s <strong>no penalty</strong>. I might not be able to give you good feedback if you turn something in late, but that’s really the only practical penalty—there’s no harm to your grade.</p>
</blockquote>
<p><strong>Two deadlines do matter though:</strong></p>
<ol type="1">
<li>Everything except the final project needs to be turned in by <strong>11:59 PM on Tuesday, December 5</strong> (that’s the day after the last day of classes)</li>
<li>The final project has to be submitted by <strong>11:59 PM on Monday, December 11</strong> (I have to submit grades shortly thereafter)</li>
</ol>



 ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_final-deadlines.html</guid>
  <pubDate>Wed, 29 Nov 2023 19:53:00 GMT</pubDate>
</item>
<item>
  <title>Weeks 11, 12, and 13 tips and FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Just a few quick tips from the past few weeks:</p>
<section id="can-i-use-geom_label_repel-with-maps" class="level3">
<h3 class="anchored" data-anchor-id="can-i-use-geom_label_repel-with-maps">Can I use <code>geom_label_repel()</code> with maps?</h3>
<p>You learned about the {ggrepel} package in <a href="../example/09-example.html">session 9</a>, with its <code>geom_text_repel()</code> and <code>geom_label_repel()</code> functions that make sure none of your labels overlap:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-4"></span>
<span id="cb1-5">small_mpg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only use the first 10 rows</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a label column</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fancy_label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(manufacturer, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, year, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>))</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(small_mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label_repel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> fancy_label), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/libraries-data-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>In <a href="../example/12-example.html">session 12</a>, you learned about <code>geom_sf_text()</code> and <code>geom_sf_label()</code> for adding text and labels to maps. But what if your map labels overlap, like this?</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download cb_2022_us_county_5m.zip under "County" from</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://www.census.gov/geographies/mapping-files/time-series/geo/cartographic-boundary.html</span></span>
<span id="cb2-3">ga_counties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_sf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/cb_2022_us_county_5m/cb_2022_us_county_5m.shp"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(STATEFP <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ga_places <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb3-2">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>city, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>lat, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>long,</span>
<span id="cb3-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Atlanta"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">33.748955</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">84.388099</span>,</span>
<span id="cb3-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alpharetta"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">34.075318</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">84.294105</span>,</span>
<span id="cb3-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Duluth"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">34.002262</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">84.143614</span></span>
<span id="cb3-6">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"long"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPSG:4326"</span>))</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_counties, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_places) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf_label</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_places, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> city)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/ga-places-label-overlap-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Unfortunately there’s no such thing as <code>geom_sf_label_repel()</code>. BUT there’s still a way to use <code>geom_label_repel()</code> and <code>geom_text_repel()</code> with maps, with a couple little tweaks:</p>
<ol type="1">
<li>You have to map the <code>geometry</code> column in the data to the <code>geometry</code> aesthetic in <code>geom_text/label_repel()</code></li>
<li>You have to tell <code>geom_text/label_repel()</code> to use the “sf_coordinates” stat so that it uses the latitude and longitude coordinates for x/y</li>
</ol>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_counties, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_places) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label_repel</span>(</span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ga_places,</span>
<span id="cb4-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> city, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry =</span> geometry),</span>
<span id="cb4-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf_coordinates"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span></span>
<span id="cb4-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/ga-places-label-fixed-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="i-tried-to-make-a-map-and-countries-are-missingwhy" class="level3">
<h3 class="anchored" data-anchor-id="i-tried-to-make-a-map-and-countries-are-missingwhy">I tried to make a map and countries are missing—why?</h3>
<p>Many of you were brave and made a map of refugee counts for mini project 2. That’s fantastic!</p>
<p>If you did, you likely ran into an issue with plotting the countries and getting an incomplete map. Here’s an example with our beloved gapminder data.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(countrycode)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For dealing with country names, abbreviations, and codes</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Global health and wealth</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add an ISO country code column to gapminder for joining</span></span>
<span id="cb5-5">gapminder_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ISO_A3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">countrycode</span>(country, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country.name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iso3c"</span>))</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the world map data from exercise 12</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download "Admin 0 – Countries" from</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://www.naturalearthdata.com/downloads/110m-cultural-vectors/</span></span>
<span id="cb5-11">world_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_sf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(ISO_A3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ATA"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bye penguins</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ISO3 =</span> ADM0_A3)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use ADM0_A3 as the main country code column</span></span></code></pre></div>
</div>
<p>Let’s take just 2007 from gapminder and map life expectancy. To do this we’ll need to combine or join the two datasets. One logical way to do this would be to take gapminder, join the world map data to it, and then plot it:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">gapminder_with_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(world_map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(ISO3))</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gapminder_with_map, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> lifeExp))</span>
<span id="cb6-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Error in `geom_sf()`:</span></span>
<span id="cb6-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ! Problem while computing stat.</span></span>
<span id="cb6-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ℹ Error occurred in the 1st layer.</span></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Caused by error in `compute_layer()`:</span></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ! `stat_sf()` requires the following missing aesthetics: geometry</span></span></code></pre></div>
</div>
<p>oh no there’s an error! When we joined the map data, the special attributes of the <code>geometry</code> column in <code>world_map</code> got lost. The column is still there, but it won’t automatically plot with <code>geom_sf()</code>. We can fix that by specifying that the column named “geometry” does indeed contain all the geographic data with <code>st_set_geometry()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">gapminder_with_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(world_map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(ISO3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix the geometry column</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_geometry</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geometry"</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gapminder_with_map, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/gapminder-2007-missing-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>We have a… map? It’s missing a bunch of countries (Russia is the most glaringly obvious hole!). That’s because those countries aren’t in gapminder, so their corresponding maps didn’t come over when using <code>left_join()</code>. We can confirm by counting rows. The original map data has maps for 176 countries. Gapminder has 142 countries in 2007. The combined <code>gapminder_with_map</code> dataset only has 142 rows—we’re not plotting 34 countries, since they’re not in gapminder.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(world_map)</span>
<span id="cb8-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 176</span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gapminder_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>))</span>
<span id="cb8-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 142</span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gapminder_with_map)</span>
<span id="cb8-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 142</span></span></code></pre></div>
</div>
<p>One quick and easy way to fix this is to use two <code>geom_sf()</code> layers: one with the whole world and one with the partial gapminder-only map:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world_map) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gapminder_with_map, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/two-geom-sf-layers-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>The <em>better</em> way to fix this is to join the two datasets in a different order—start with the full map data and then add gapminder to it. This maintains the specialness of the geometry column and keeps all the original rows in <code>world_map</code>. For countries that are in the map data but not in gapminder, they’ll still be in the final <code>map_with_gapminder</code> data, but they’ll have NA for life expectancy:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">map_with_gapminder <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> world_map <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(gapminder_clean, year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(ISO3))</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> map_with_gapminder, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the countries with missing data a different color</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/gapminder-2007-good-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>What if we want to facet though? This is just one year—what if we want to show panels for multiple years? This gets a little tricky. The gapminder data has rows for different country/year combinations (Afghanistan 1952, Afghanistan 1957, Albania 1952, etc.), but the world map data only has rows for countries. If we join the gapminder data to the world map data and gapminder has multiple rows for years, there’s no clear place for the gapminder rows to connect with the world map rows. R will try to make it work and repeat world_map rows for each of the repeated years, but it can be unpredictable.</p>
<p>The best approach I’ve found for doing this is to create what I call a “skeleton” data frame that has all the possible combinations of (1) unique countries in the map data and (2) unique years in gapminder (or the refugee data if you’re using that). The <code>expand_grid()</code> function does this automatically. Like, look what happens if we tell it to make rows for every combination of A, B, C and 1, 2, 3—we get A1, A2, A3, B1, B2, and so on:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">column_1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>),</span>
<span id="cb11-2">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">column_2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb11-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 9 × 2</span></span>
<span id="cb11-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   column_1 column_2</span></span>
<span id="cb11-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;       &lt;dbl&gt;</span></span>
<span id="cb11-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 A               1</span></span>
<span id="cb11-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 A               2</span></span>
<span id="cb11-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 A               3</span></span>
<span id="cb11-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 B               1</span></span>
<span id="cb11-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 B               2</span></span>
<span id="cb11-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 6 B               3</span></span>
<span id="cb11-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 7 C               1</span></span>
<span id="cb11-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 8 C               2</span></span>
<span id="cb11-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 9 C               3</span></span></code></pre></div>
</div>
<p>We’ll make a similar skeleton with all the countries in the map and all the years we care about in gapminder. We’ll just show two panels—1952 and 2007—so we’ll make a little filtered dataset first. Then we’ll use <code>expand_grid()</code> to make a dataset with all those combinations: Afghanistan 1952, Afghanistan 2007, Albania 1952, Albania 2007, and so on:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">gapminder_smaller <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1952</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>))</span>
<span id="cb12-3"></span>
<span id="cb12-4">skeleton <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ISO3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(world_map<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ISO3),</span>
<span id="cb12-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(gapminder_smaller<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>year))</span>
<span id="cb12-6">skeleton</span>
<span id="cb12-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 352 × 2</span></span>
<span id="cb12-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    ISO3   year</span></span>
<span id="cb12-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt; &lt;int&gt;</span></span>
<span id="cb12-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 FJI    1952</span></span>
<span id="cb12-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 FJI    2007</span></span>
<span id="cb12-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 TZA    1952</span></span>
<span id="cb12-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 TZA    2007</span></span>
<span id="cb12-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 SAH    1952</span></span>
<span id="cb12-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 SAH    2007</span></span>
<span id="cb12-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 CAN    1952</span></span>
<span id="cb12-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 CAN    2007</span></span>
<span id="cb12-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 USA    1952</span></span>
<span id="cb12-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 USA    2007</span></span>
<span id="cb12-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 342 more rows</span></span></code></pre></div>
</div>
<p>Neat, that works. There’s Fiji in 1952 and 2007, Tanzania in 1952 and 2007, and so on. Those are all the possible countries in <code>world_map</code> with all the possible years in <code>gapminder_smaller</code>.</p>
<p>Next we can join in the gapminder data for each country and year, and join in the map data for each country. Notice how it has the same number of rows as <code>skeleton</code> (352). If a country doesn’t have gapminder data (like Fiji here), it gets an NA for <code>lifeExp</code> and <code>pop</code> and <code>gdpPercap</code>. But it still has map data for both 1952 and 2007, so it’ll show up in a plot.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">full_gapminder_map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> skeleton <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(gapminder_smaller, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(ISO3, year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(world_map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(ISO3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The geometry column lost its magic powers after joining, so add it back</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_geometry</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geometry"</span>)</span>
<span id="cb13-6">full_gapminder_map</span>
<span id="cb13-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Simple feature collection with 352 features and 175 fields</span></span>
<span id="cb13-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Geometry type: MULTIPOLYGON</span></span>
<span id="cb13-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Dimension:     XY</span></span>
<span id="cb13-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Bounding box:  xmin: -180 ymin: -55.61183 xmax: 180 ymax: 83.64513</span></span>
<span id="cb13-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Geodetic CRS:  WGS 84</span></span>
<span id="cb13-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 352 × 176</span></span>
<span id="cb13-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    ISO3   year country  continent lifeExp     pop gdpPercap featurecla scalerank</span></span>
<span id="cb13-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt; &lt;int&gt; &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;   &lt;int&gt;     &lt;dbl&gt; &lt;chr&gt;          &lt;int&gt;</span></span>
<span id="cb13-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 FJI    1952 &lt;NA&gt;     &lt;NA&gt;         NA   NA            NA  Admin-0 c…         1</span></span>
<span id="cb13-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 FJI    2007 &lt;NA&gt;     &lt;NA&gt;         NA   NA            NA  Admin-0 c…         1</span></span>
<span id="cb13-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 TZA    1952 Tanzania Africa       41.2  8.32e6      717. Admin-0 c…         1</span></span>
<span id="cb13-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 TZA    2007 Tanzania Africa       52.5  3.81e7     1107. Admin-0 c…         1</span></span>
<span id="cb13-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 SAH    1952 &lt;NA&gt;     &lt;NA&gt;         NA   NA            NA  Admin-0 c…         1</span></span>
<span id="cb13-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 SAH    2007 &lt;NA&gt;     &lt;NA&gt;         NA   NA            NA  Admin-0 c…         1</span></span>
<span id="cb13-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 CAN    1952 Canada   Americas     68.8  1.48e7    11367. Admin-0 c…         1</span></span>
<span id="cb13-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 CAN    2007 Canada   Americas     80.7  3.34e7    36319. Admin-0 c…         1</span></span>
<span id="cb13-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 USA    1952 United … Americas     68.4  1.58e8    13990. Admin-0 c…         1</span></span>
<span id="cb13-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 USA    2007 United … Americas     78.2  3.01e8    42952. Admin-0 c…         1</span></span>
<span id="cb13-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 342 more rows</span></span>
<span id="cb13-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 167 more variables: LABELRANK &lt;int&gt;, SOVEREIGNT &lt;chr&gt;, SOV_A3 &lt;chr&gt;,</span></span>
<span id="cb13-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## #   ADM0_DIF &lt;int&gt;, LEVEL &lt;int&gt;, TYPE &lt;chr&gt;, TLC &lt;chr&gt;, ADMIN &lt;chr&gt;,</span></span>
<span id="cb13-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## #   ADM0_A3 &lt;chr&gt;, GEOU_DIF &lt;int&gt;, GEOUNIT &lt;chr&gt;, GU_A3 &lt;chr&gt;, SU_DIF &lt;int&gt;,</span></span>
<span id="cb13-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## #   SUBUNIT &lt;chr&gt;, SU_A3 &lt;chr&gt;, BRK_DIFF &lt;int&gt;, NAME &lt;chr&gt;, NAME_LONG &lt;chr&gt;,</span></span>
<span id="cb13-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## #   BRK_A3 &lt;chr&gt;, BRK_NAME &lt;chr&gt;, BRK_GROUP &lt;chr&gt;, ABBREV &lt;chr&gt;, POSTAL &lt;chr&gt;,</span></span>
<span id="cb13-31"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## #   FORMAL_EN &lt;chr&gt;, FORMAL_FR &lt;chr&gt;, NAME_CIAWF &lt;chr&gt;, NOTE_ADM0 &lt;chr&gt;, …</span></span></code></pre></div>
</div>
<p>Now we can plot it and we’ll have consistent countries in each panel:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> full_gapminder_map, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/gapminder-map-fixed-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Perfect!</p>
</section>
<section id="some-of-the-words-in-my-word-frequencytf-idf-plot-were-out-of-orderhow-can-i-fix-that" class="level3">
<h3 class="anchored" data-anchor-id="some-of-the-words-in-my-word-frequencytf-idf-plot-were-out-of-orderhow-can-i-fix-that">Some of the words in my word frequency/tf-idf plot were out of order—how can I fix that?</h3>
<p>In the <a href="../example/13-example.html#tokens-and-word-counts">example for week 13</a>, I showed the 15 most frequent words in Hamlet, Macbeth, Romeo and Juliet, and King Lear, faceted by play. Only Romeo and Juliet, though, has the words in the correct order. The other plays have strange ordering. Note how “lord” and “king” are weirdly misplaced in Macbeth and Hamlet and how “love” is weirdly misplaced in Hamlet:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/plot-top-words-tragedies-annotated.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Words in the wrong order across panels</figcaption>
</figure>
</div>
<p>The word “lord” is the second most common word in Hamlet, so R thinks it is the second most common word across all the plays. It doesn’t know that there’s a difference between “lord” in Hamlet and “lord” in Macbeth. As a result, any common words that are shared across the plays will appear out of order.</p>
<p>This is fixable though! <a href="https://juliasilge.com/blog/reorder-within/">See this blog post by Julia Silge</a>, one of the authors of {tidytext}. Basically, you need to use <code>reorder_within()</code> to sort the words correctly inside each play, then add <code>scale_y_reordered()</code> to make them display correctly.</p>
<p>Here’s what that looks like with the Shakespeare words.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gutenbergr)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For getting books from Project Gutenberg</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidytext)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For working with text</span></span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">tragedies_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gutenberg_download</span>(</span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb16-3">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1524</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hamlet</span></span>
<span id="cb16-4">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1532</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># King Lear</span></span>
<span id="cb16-5">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1533</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Macbeth</span></span>
<span id="cb16-6">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1513</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Romeo and Juliet</span></span>
<span id="cb16-7">  ),</span>
<span id="cb16-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_fields =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span></span>
<span id="cb16-9">)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean up the tragedies text</span></span>
<span id="cb17-2">top_words_tragedies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tragedies_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_tokens</span>(word, text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove stop words</span></span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(stop_words) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get rid of old timey words and stage directions</span></span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(word <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thou"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thee"</span>, </span>
<span id="cb17-9">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thine"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exeunt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exit"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count all the words in each play</span></span>
<span id="cb17-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(title, word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep top 15 in each play</span></span>
<span id="cb17-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(title) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">top_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb17-16">top_words_tragedies</span>
<span id="cb17-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 62 × 3</span></span>
<span id="cb17-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    title                     word           n</span></span>
<span id="cb17-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt;                     &lt;chr&gt;      &lt;int&gt;</span></span>
<span id="cb17-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 Hamlet, Prince of Denmark hamlet       461</span></span>
<span id="cb17-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 Romeo and Juliet          romeo        300</span></span>
<span id="cb17-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 Macbeth                   macbeth      282</span></span>
<span id="cb17-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 The Tragedy of King Lear  lear         229</span></span>
<span id="cb17-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 Hamlet, Prince of Denmark lord         223</span></span>
<span id="cb17-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 Hamlet, Prince of Denmark king         196</span></span>
<span id="cb17-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 Romeo and Juliet          juliet       178</span></span>
<span id="cb17-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 The Tragedy of King Lear  kent         170</span></span>
<span id="cb17-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 The Tragedy of King Lear  gloucester   169</span></span>
<span id="cb17-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 Hamlet, Prince of Denmark horatio      156</span></span>
<span id="cb17-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 52 more rows</span></span></code></pre></div>
</div>
<p>Because we used <code>top_n()</code>, these words are already sorted in order of frequency (with “hamlet” appearing the most at 461 times). In example 13, we locked in that order by making the <code>word</code> column an ordered factor, like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">top_words_tragedies_order_wrong <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> top_words_tragedies <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the words an ordered factor so they plot in order</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(word)) </span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(top_words_tragedies_order_wrong, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(word), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> title)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb18-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15 most frequent words in four Shakespearean tragedies"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(title), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/plot-top-words-tragedies-wrong-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>But that’s wrong!</p>
<p>Instead of using <code>fct_inorder()</code>, we need to use <code>reorder_within()</code> and tell it to sort the words by count within each play:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">top_words_tragedies_order_right <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> top_words_tragedies <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the words an ordered factor so they plot in order</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder_within</span>(word, n, title)) </span>
<span id="cb19-4"></span>
<span id="cb19-5">top_words_tragedies_order_right</span>
<span id="cb19-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 62 × 3</span></span>
<span id="cb19-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    title                     word                                      n</span></span>
<span id="cb19-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt;                     &lt;fct&gt;                                 &lt;int&gt;</span></span>
<span id="cb19-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 Hamlet, Prince of Denmark hamlet___Hamlet, Prince of Denmark      461</span></span>
<span id="cb19-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 Romeo and Juliet          romeo___Romeo and Juliet                300</span></span>
<span id="cb19-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 Macbeth                   macbeth___Macbeth                       282</span></span>
<span id="cb19-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 The Tragedy of King Lear  lear___The Tragedy of King Lear         229</span></span>
<span id="cb19-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 Hamlet, Prince of Denmark lord___Hamlet, Prince of Denmark        223</span></span>
<span id="cb19-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 Hamlet, Prince of Denmark king___Hamlet, Prince of Denmark        196</span></span>
<span id="cb19-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 Romeo and Juliet          juliet___Romeo and Juliet               178</span></span>
<span id="cb19-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 The Tragedy of King Lear  kent___The Tragedy of King Lear         170</span></span>
<span id="cb19-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 The Tragedy of King Lear  gloucester___The Tragedy of King Lear   169</span></span>
<span id="cb19-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 Hamlet, Prince of Denmark horatio___Hamlet, Prince of Denmark     156</span></span>
<span id="cb19-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 52 more rows</span></span></code></pre></div>
</div>
<p>Notice how the <code>word</code> column looks a little weird now. It added the play name to the end of each word, like <code>macbeth___Macbeth</code>. That’s actually a creative hack for fixing the ordering. Remember that the main reason the ordering is messed up across facets is because R doesn’t know that the word “love” in Hamlet is different from the word “love” in Romeo and Juliet. By changing the words to <code>love___Romeo and Juliet</code> and <code>love___Hamlet</code>, R can now recognize the different versions of “love” and sort them correctly. Let’s plot this version:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(top_words_tragedies_order_right, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> title)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb20-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15 most frequent words in four Shakespearean tragedies"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(title), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/plot-top-words-tragedies-right-but-wrong-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>oh no.</p>
<p>The order is right (yay!) but the y-axis is horrible since it’s including the hacky <code>___play name</code> at the end of each of the words.</p>
<p>To fix that, we can use <code>scale_y_reordered()</code>, which cleans up those word labels by removing the three underscores and any text that follows them:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(top_words_tragedies_order_right, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> title)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_reordered</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb21-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"15 most frequent words in four Shakespearean tragedies"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(title), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13_files/figure-html/plot-top-words-tragedies-right-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Perfect!</p>
</section>
<section id="cleaning-up-text-is-always-specific-and-specialized" class="level3">
<h3 class="anchored" data-anchor-id="cleaning-up-text-is-always-specific-and-specialized">Cleaning up text is <em>always</em> specific and specialized</h3>
<p>In the Shakespeare example, we removed common stop words like “the” and “a” with <code>anti_join()</code> and then manually removed some other more specific words like “thou” and “thee” and “exit”:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean up the tragedies text</span></span>
<span id="cb22-2">top_words_tragedies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tragedies_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_tokens</span>(word, text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove stop words</span></span>
<span id="cb22-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(stop_words) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get rid of old timey words and stage directions</span></span>
<span id="cb22-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(word <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thou"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thee"</span>, </span>
<span id="cb22-9">                       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thine"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exeunt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exit"</span>)))</span></code></pre></div>
</div>
<p>That’s because in these specific plays, those are common words that we want to ignore—they’re basically our own custom stop words. We should also probably get rid of words like “act” and “scene” too, but we didn’t here.</p>
<p>Many of you kept that exact code in exercise 13, removing “thou”, “thy”, “exeunt”, and those other words from your own text. But that’s not necessary or helpful. If you’re working with something like Harry Potter or Jane Austen or Ernest Hemmingway or anything more modern than Shakespeare, those words aren’t really in there. In the Shakespeare example, we removed “enter” and “exit” because those are stage directions, but in other books those are regular actual words and probably shouldn’t be removed.</p>
<p>There’s no one universal set of stop words that you can use—every text is unique and has its own quirks that you need to take care of.</p>
<p>For example, one of you looked at four books by W. E. B. Du Bois and did this to clean up the stop words:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">dubois_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(stop_words) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(word <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cong"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sess"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"act"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_ibid"</span>,</span>
<span id="cb23-4">                       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_house"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"doc"</span>)))</span></code></pre></div>
</div>
<p>That’s awesome. Those are all words that are specific to those four books and that were likely appearing in the frequency plot. One (or more) of the books probably mentioned lots of congressional activity, like congressional sessions, acts of congress, stuff happening in the House of Representatives, and so on. There were probably also a lot of citations, with things like “pp.” (the abbreviation for “pages”, like “pp.&nbsp;125-127”) and “ibid” (the abbreviation for “see the previous citation”). That list of words is specific to those four books and <em>should not</em> be applied to other books—like, there’s no reason to remove those words from the Shakespeare tragedies or from Little Women or from Harry Potter because none of those mention congressional sessions or use “ibid”.</p>
<p>Data cleaning is <em>always</em> context specific.</p>
</section>
<section id="saving-data-that-takes-a-long-time-to-make" class="level3">
<h3 class="anchored" data-anchor-id="saving-data-that-takes-a-long-time-to-make">Saving data that takes a long time to make</h3>
<p>In these later sessions, I’ve had you do things with data from different places on the internet. In <a href="../example/13-example.html">exercise 13</a> you grabbed books from Project Gutenberg. Some of you used <a href="https://www.andrewheiss.com/blog/2023/06/01/geocoding-routing-openstreetmap-r/#routing"><code>osrmRoute()</code></a> in exercise 12 to create a mapped route between cities. Some of you used <a href="../example/12-example.html#automatic-geocoding-by-address">{tidygeocoder}</a> to geocode addresses in exercise 12. In past sessions you’ve used <code>WDI()</code> to download data from the World Bank.</p>
<p>When you knit a document, R starts with a brand new empty session without any packages or data loaded, and then it runs all your chunks to load packages, load data, and run all your other code. If you have code that grabs data from the internet, <strong>it will run every time you knit your document</strong>. <a href="../news/2023-10-03_cleaner-nicer-rmd-output.html#knit-often">Remember my suggestion to knit often</a>? You’ll re-download the data, re-create routes, re-geocode addresses, and so on every time you keep re-knitting. This is excessive, slow, and—most especially—bad R etiquette. You don’t want to keep accessing those servers and recalculate things and redownload things you don’t need to update.</p>
<p>BUT at the same time, you should care about reproducibility. You want others—and future you—to be able to run your code and create the same plots and tables and get the same data. But you don’t want to do all that excessively and impolitely.</p>
<p>The solution is to be a little tricky with your R Markdown file. If you have code that needs to grab something from the internet, put it in a chunk that doesn’t run—use <code>eval=FALSE</code> in its chunk options. Then, in an invisible chunk (with <code>include=FALSE</code>) load the pre-downloaded data manually. I showed this in <a href="../example/08-example.html#load-and-clean-data">example 8</a> (with {WDI}) and <a href="../example/11-example.html#get-data">example 11</a> (with {tidyquant}) and <a href="../example/13-example.html#get-data">example 13</a> (with {gutenberger})</p>
<p>Here’s a quick basic example with Project Gutenberg book data. There are two chunks: <code>get-book-fake</code> and <code>load-book-real</code>:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb24-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r get-book-fake, eval=FALSE}</span></span>
<span id="cb24-2">little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gutenberg_download</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">514</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_fields =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb24-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r load-book-data-real, include=FALSE}</span></span>
<span id="cb24-6">little_women_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/little_women_raw.csv"</span></span>
<span id="cb24-7"></span>
<span id="cb24-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(little_women_file)) {</span>
<span id="cb24-9">  little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(little_women_file)</span>
<span id="cb24-10">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb24-11">  little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gutenberg_download</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">514</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_fields =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb24-12">  </span>
<span id="cb24-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_csv</span>(little_women_raw, little_women_file)</span>
<span id="cb24-14">}</span>
<span id="cb24-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<ol type="1">
<li>The first chunk (<code>get-book-fake</code>) contains the code for downloading data with <code>gutenberg_download()</code>. It will appear in the document, but <strong>it will not run</strong> since it has <code>eval=FALSE</code> on. It will not try to grab anything from the internet. If someone were to follow along with the code in your document, they could run that code and get the book (good!), and it won’t run repeatedly on your end (also good!).</li>
<li>The second chunk (<code>load-book-data-real</code>) does a neat little trick. It first checks to see if a CSV file named <code>data/little_women_raw.csv</code> exists. If it does, it’ll just load it with <code>read_csv()</code>. If it doesn’t, it’ll grab data from the internet with <code>gutenberg_download()</code> and then it will save that as <code>data/little_women_raw.csv</code>. This is really neat stuff. If you’re knitting your document for the first time, you won’t have the Little Women data yet, so the code will connect to Project Gutenberg and get it. The code will then save that data to your computer as a CSV file. The next time you knit, R won’t need to connect to the internet again—it’ll load the CSV file instead of grabbing it from Project Gutenberg. You can knit as many times as you want—you won’t need to reconnect to any remote servers again.</li>
</ol>
<p>Again, the general pattern for this is to create two chunks: (1) a fake one that people will see in the document but won’t run, and (2) a real one that will run and load data locally if it exists, but that people won’t see.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
How should you save your intermediate data?
</div>
</div>
<div class="callout-body-container callout-body">
<p>In the example above, I saved the Little Women data from Project Gutenberg as a CSV file. This is fine—a CSV file is plain text, so it can store any kind of text-based data like numbers and text without any problems.</p>
<p>But sometimes you’ll work with slightly more complex types of data. For instance, with geographic data, the magical <code>geometry</code> column contains a whole host of extra metadata, like projection details and multiple points (if it’s something like country boundaries). If you save a data frame with a <code>geometry</code> column as a CSV file you’ll lose all that data—CSVs can’t store that extra nested metadata.</p>
<p>Similarly, if you have a factor or categorical variable (i.e.&nbsp;something like “Strongly disagree”, “Disagree”, “Agree”, “Strongly agree”), behind the scenes R stores those as numbers (i.e.&nbsp;1, 2, 3, 4) with labels attached to the numbers (1 = “Strongly disagree”, 2 = “Disagree”, etc.). If you save a data frame with a categorical column like that as a CSV, by default R will only store the numbers and you’ll lose the labels. You <em>could</em> convert the categorical column to text before saving as CSV and then the text labels would get stored, but if the variable is ordered (i.e.&nbsp;“Strongly disagree” is lower than “disagree”, etc.), you’ll lose that ordering when saving as CSV.</p>
<p>The safest way to save intermediate files like this is to actually not use CSV, but instead use a special kind of file called .rds, which lets you take an entire object from your Environment panel and save it as a file. The .rds file will keep all the extra metadata and attributes (i.e.&nbsp;the projection details and nested points inside a <code>geometry</code> column; factor labels and ordering for categorical variables, and so on).</p>
<p>So instead of saving that Little Women book as a CSV file, the better approach is to use <code>saveRDS()</code> and <code>readRDS()</code> to store it and load it as an .rds file, like this:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb25-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r get-book-fake, eval=FALSE}</span></span>
<span id="cb25-2">little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gutenberg_download</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">514</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_fields =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb25-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb25-4"></span>
<span id="cb25-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r load-book-data-real, include=FALSE}</span></span>
<span id="cb25-6">little_women_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/little_women_raw.rds"</span></span>
<span id="cb25-7"></span>
<span id="cb25-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(little_women_file)) {</span>
<span id="cb25-9">  little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(little_women_file)</span>
<span id="cb25-10">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb25-11">  little_women_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gutenberg_download</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">514</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_fields =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb25-12">  </span>
<span id="cb25-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saveRDS</span>(little_women_raw, little_women_file)</span>
<span id="cb25-14">}</span>
<span id="cb25-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
The fancy pro version of all this
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you want to be super cool, check out <a href="https://books.ropensci.org/targets/">the {targets} package</a>, which is like the professional version of this approach to caching data. {targets} lets you keep track of all your different objects and it will only re-run stuff if absolutely necessary.</p>
<p>For instance, imagine that in a document you load data, clean it, and plot it. Standard stuff. There’s a linear relationship between all this—the raw data leads to the clean data, which leads to a plot. If you change code in your plot, the data cleaning and loading code didn’t change, so there’s no real reason to need to re-run it. If you change your data cleaning code, your downstream plot will be affected and its code would need to be re-run.</p>
<p>{targets} keeps track of all these dependencies and re-runs code only when there are upstream changes. It’s great for plots and models that take a long time to run, or for grabbing data from the internet.</p>
<p>The best way to learn {targets} is to play with <a href="https://books.ropensci.org/targets/walkthrough.html">their short little walkthrough tutorial here</a>, which has you make a simple document that loads data, builds a regression model, and makes a plot.</p>
<p>I use {targets} for all my projects (<a href="https://github.com/andrewheiss/datavizf23.classes.andrewheiss.com#targets-pipeline">including this course website!</a>) and it makes life a ton easier for any kind of project that involves more than one .Rmd file or R script (<a href="https://stats.andrewheiss.com/mountainous-mackerel/analysis/targets.html">see this for an example</a>). I <em>highly</em> recommend checking it out.</p>
</div>
</div>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-29_faqs_week-11-12-13.html</guid>
  <pubDate>Wed, 29 Nov 2023 19:34:00 GMT</pubDate>
</item>
<item>
  <title>No more answer keys</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_no-more-answer-keys.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>One last little comment. You may have noticed that iCollege doesn’t have answer keys for some of the more recent exercises. <strong>That’s by design</strong>.</p>
<p>After week 8, there are no more answer keys.</p>
<p>That’s because starting with the annotations assignment, all the way until the end, your assignments are a lot more open ended. There are no official final correct plots. Most of these assignments go something like “find some data you like and visualize it some way.” For the week on annotations, you made some sort of plot and put annotations on it. For the week on interactivity, you made some sort of plot and fed it to <code>ggplotly()</code>. For the week on time, you’ll make a plot that visualizes time. For the week on space, you’ll make some sort of map.</p>
<p><strong>There are no right answers.</strong></p>
<p>Do whatever you want with whatever data you want. Do whatever is most useful and interesting for you.</p>



 ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_no-more-answer-keys.html</guid>
  <pubDate>Tue, 07 Nov 2023 04:09:00 GMT</pubDate>
</item>
<item>
  <title>Graphics editors</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_graphics-editors.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>For <a href="../assignment/14-exercise.html">exercise 14</a>, <a href="../assignment/02-mini-project.html">mini-project 2</a>, and your <a href="../assignment/final-project.html">final project</a>, you’ll create plots in R, export them as PDFs, and then edit, enhance, and lay out those PDFs using some sort of graphics editor.</p>
<p>In the past, I’ve had students use Adobe Illustrator for this, since GSU used to provide free student access to <a href="https://www.adobe.com/creativecloud.html">Adobe Creative Cloud</a>, which includes Illustrator. The most common Creative Cloud programs people use for data visualization-related work are:</p>
<ul>
<li><a href="https://www.adobe.com/products/photoshop.html">Photoshop</a>: edit photos and other bitmap images</li>
<li><a href="https://www.adobe.com/products/illustrator.html">Illustrator</a>: edit vector images</li>
<li><a href="https://www.adobe.com/products/indesign.html">InDesign</a>: lay out text and images for books, magazines, brochures, posters, and all other printed things</li>
</ul>
<p>However, <em>GSU no longer provides off-campus access to Adobe software.</em> If you’re faculty or staff, <a href="https://technology.gsu.edu/technology-services/productivity-collaboration/adobe-creative-cloud/">you can still access Creative Cloud for free</a>; if you’re a student <a href="https://technology.gsu.edu/technology-services/productivity-collaboration/adobe-creative-cloud/">you have to use an on-campus computer lab</a>.</p>
<p>This is sad because knowing how to use programs like Illustrator is <em>incredibly</em> valuable. Even if you never touch R again after this class, the graphic design programs included in Creative Cloud are industry-standard and used literally everywhere, and knowing how to use them is an important skill!</p>
<p>There are some alternative options though.</p>
<section id="creative-cloud-as-a-student" class="level3">
<h3 class="anchored" data-anchor-id="creative-cloud-as-a-student">Creative Cloud as a student</h3>
<p>You can use the whole Creative Cloud Suite for <a href="https://www.adobe.com/creativecloud/buy/students.html">$20/month as a student</a>, and they have a 14-day free trial. Creative Cloud is a subscription service, so you can subscribe on and off as often as you want.</p>
</section>
<section id="affinity-suite" class="level3">
<h3 class="anchored" data-anchor-id="affinity-suite">Affinity Suite</h3>
<p><a href="https://affinity.serif.com/en-us/">Affinity</a> is a smaller rival to Adobe and they have their own set of three programs for graphic design-related tasks. Unlike Creative Cloud, the programs in the Affinity Suite are not subscription-based. You buy them and then you own them forever.</p>
<p>There are three programs that are general equivalents of the core Adobe programs:</p>
<ul>
<li><a href="https://affinity.serif.com/en-us/photo/">Affinity Photo</a> = Photoshop</li>
<li><a href="https://affinity.serif.com/en-us/designer/">Affinity Designer</a> = Illustrator</li>
<li><a href="https://affinity.serif.com/en-us/publisher/">Affinity Publisher</a> = InDesign</li>
</ul>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Caveat!
</div>
</div>
<div class="callout-body-container callout-body">
<p>Big caveat here: I’ve never actually used any of these Affinity programs. I use Adobe stuff for all my work. But I’ve heard fantastic things about them and have seen them in action—they’re as good as Adobe’s stuff.</p>
</div>
</div>
</section>
<section id="open-source-alternatives" class="level3">
<h3 class="anchored" data-anchor-id="open-source-alternatives">Open source alternatives</h3>
<p>The open source community has created <strong>free</strong> programs that are rough equivalents of these core Adobe programs too:</p>
<ul>
<li><a href="https://www.gimp.org/">GIMP</a> = Photoshop</li>
<li><a href="https://inkscape.org/">Inkscape</a> = Illustrator</li>
<li><a href="https://www.scribus.net/">Scribus</a> = InDesign</li>
</ul>
<p>These are all free and they work on macOS and Windows (and Linux if you’re into that), but they can be a <del>little</del> lot rough around the edges and tricky to work with. Adobe, Affinity, and other companies have full time developers focused on making good user interfaces and experiences; these open source clones do not. You can make the same kind of output with GIMP, Inkscape, and Scribus that you can with Adobe Creative Cloud and the Affinity Suite, but there’s a bit of an extra learning curve (and a lot of bumps along the way).</p>
<p>But you can’t beat free.</p>
</section>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<div class="cell">
<div class="cell-output-display">

<div id="knyptwzqys" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#knyptwzqys table {
  font-family: Barlow, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#knyptwzqys thead, #knyptwzqys tbody, #knyptwzqys tfoot, #knyptwzqys tr, #knyptwzqys td, #knyptwzqys th {
  border-style: none;
}

#knyptwzqys p {
  margin: 0;
  padding: 0;
}

#knyptwzqys .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 19px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#knyptwzqys .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#knyptwzqys .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#knyptwzqys .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#knyptwzqys .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#knyptwzqys .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#knyptwzqys .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#knyptwzqys .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#knyptwzqys .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#knyptwzqys .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#knyptwzqys .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#knyptwzqys .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#knyptwzqys .gt_spanner_row {
  border-bottom-style: hidden;
}

#knyptwzqys .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#knyptwzqys .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#knyptwzqys .gt_from_md > :first-child {
  margin-top: 0;
}

#knyptwzqys .gt_from_md > :last-child {
  margin-bottom: 0;
}

#knyptwzqys .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#knyptwzqys .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#knyptwzqys .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#knyptwzqys .gt_row_group_first td {
  border-top-width: 2px;
}

#knyptwzqys .gt_row_group_first th {
  border-top-width: 2px;
}

#knyptwzqys .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#knyptwzqys .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#knyptwzqys .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#knyptwzqys .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#knyptwzqys .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#knyptwzqys .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#knyptwzqys .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#knyptwzqys .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#knyptwzqys .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#knyptwzqys .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#knyptwzqys .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#knyptwzqys .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#knyptwzqys .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#knyptwzqys .gt_left {
  text-align: left;
}

#knyptwzqys .gt_center {
  text-align: center;
}

#knyptwzqys .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#knyptwzqys .gt_font_normal {
  font-weight: normal;
}

#knyptwzqys .gt_font_bold {
  font-weight: bold;
}

#knyptwzqys .gt_font_italic {
  font-style: italic;
}

#knyptwzqys .gt_super {
  font-size: 65%;
}

#knyptwzqys .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#knyptwzqys .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#knyptwzqys .gt_indent_1 {
  text-indent: 5px;
}

#knyptwzqys .gt_indent_2 {
  text-indent: 10px;
}

#knyptwzqys .gt_indent_3 {
  text-indent: 15px;
}

#knyptwzqys .gt_indent_4 {
  text-indent: 20px;
}

#knyptwzqys .gt_indent_5 {
  text-indent: 25px;
}

.smaller-note {
  font-size: 0.7em;
}
</style>
<table class="gt_table" style="table-layout: fixed;; width: 100%" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <colgroup>
    <col style="width:15%;">
    <col style="width:28.3333333333333%;">
    <col style="width:28.3333333333333%;">
    <col style="width:28.3333333333333%;">
  </colgroup>
  <thead>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" style="font-weight: bold;" scope="col" id="File type">File type</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_center" rowspan="1" colspan="1" style="font-weight: bold;" scope="col" id="Adobe">Adobe</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_center" rowspan="1" colspan="1" style="font-weight: bold;" scope="col" id="Affinity">Affinity</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_center" rowspan="1" colspan="1" style="font-weight: bold;" scope="col" id="Open source">Open source</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="file" class="gt_row gt_left" style="vertical-align:top;"><div data-qmd="Bitmaps"><div class="gt_from_md"><p>Bitmaps</p>
</div></div></td>
<td headers="Adobe" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Photoshop](https://www.adobe.com/products/photoshop.html)"><div class="gt_from_md"><p><a href="https://www.adobe.com/products/photoshop.html">Photoshop</a></p>
</div></div></td>
<td headers="Affinity" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Photo](https://affinity.serif.com/en-us/photo/)"><div class="gt_from_md"><p><a href="https://affinity.serif.com/en-us/photo/">Photo</a></p>
</div></div></td>
<td headers="foss" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[GIMP](https://www.gimp.org/)"><div class="gt_from_md"><p><a href="https://www.gimp.org/">GIMP</a></p>
</div></div></td></tr>
    <tr><td headers="file" class="gt_row gt_left" style="vertical-align:top;"><div data-qmd="Vectors"><div class="gt_from_md"><p>Vectors</p>
</div></div></td>
<td headers="Adobe" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Illustrator](https://www.adobe.com/products/illustrator.html)"><div class="gt_from_md"><p><a href="https://www.adobe.com/products/illustrator.html">Illustrator</a></p>
</div></div></td>
<td headers="Affinity" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Designer](https://affinity.serif.com/en-us/designer/)"><div class="gt_from_md"><p><a href="https://affinity.serif.com/en-us/designer/">Designer</a></p>
</div></div></td>
<td headers="foss" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Inkscape](https://inkscape.org/)"><div class="gt_from_md"><p><a href="https://inkscape.org/">Inkscape</a></p>
</div></div></td></tr>
    <tr><td headers="file" class="gt_row gt_left" style="vertical-align:top;"><div data-qmd="Layout"><div class="gt_from_md"><p>Layout</p>
</div></div></td>
<td headers="Adobe" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[InDesign](https://www.adobe.com/products/indesign.html)"><div class="gt_from_md"><p><a href="https://www.adobe.com/products/indesign.html">InDesign</a></p>
</div></div></td>
<td headers="Affinity" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Publisher](https://affinity.serif.com/en-us/publisher/)"><div class="gt_from_md"><p><a href="https://affinity.serif.com/en-us/publisher/">Publisher</a></p>
</div></div></td>
<td headers="foss" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="[Scribus](https://www.scribus.net/)"><div class="gt_from_md"><p><a href="https://www.scribus.net/">Scribus</a></p>
</div></div></td></tr>
    <tr><td headers="file" class="gt_row gt_left" style="vertical-align:top; border-top-width: 3px; border-top-style: solid; border-top-color: #D3D3D3;"><div data-qmd="Cost"><div class="gt_from_md"><p>Cost</p>
</div></div></td>
<td headers="Adobe" class="gt_row gt_center" style="vertical-align:top; border-top-width: 3px; border-top-style: solid; border-top-color: #D3D3D3;"><div data-qmd="$$$<br><span class='smaller-note'>Monthly Creative Cloud subscription</span>"><div class="gt_from_md"><p>$$$<br><span class="smaller-note">Monthly Creative Cloud subscription</span></p>
</div></div></td>
<td headers="Affinity" class="gt_row gt_center" style="vertical-align:top; border-top-width: 3px; border-top-style: solid; border-top-color: #D3D3D3;"><div data-qmd="$<br><span class='smaller-note'>One-time purchase</span>"><div class="gt_from_md"><p>$<br><span class="smaller-note">One-time purchase</span></p>
</div></div></td>
<td headers="foss" class="gt_row gt_center" style="vertical-align:top; border-top-width: 3px; border-top-style: solid; border-top-color: #D3D3D3;"><div data-qmd="Free"><div class="gt_from_md"><p>Free</p>
</div></div></td></tr>
    <tr><td headers="file" class="gt_row gt_left" style="vertical-align:top;"><div data-qmd="Notes"><div class="gt_from_md"><p>Notes</p>
</div></div></td>
<td headers="Adobe" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="Industry standard"><div class="gt_from_md"><p>Industry standard</p>
</div></div></td>
<td headers="Affinity" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd=""><div class="gt_from_md"></div></div></td>
<td headers="foss" class="gt_row gt_center" style="vertical-align:top;"><div data-qmd="Free, but rough learning curve"><div class="gt_from_md"><p>Free, but rough learning curve</p>
</div></div></td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_graphics-editors.html</guid>
  <pubDate>Tue, 07 Nov 2023 04:04:00 GMT</pubDate>
</item>
<item>
  <title>Mini project 1 feedback</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Great work with your first mini projects! You successfully took real world data, cleaned it up, made a plot with it, and told a story about rats in New York!</p>
<p>I left some similar comments for a lot of you, so I figured I’d compile those here along with examples of how to address them.</p>
<p>First, I’ll load and clean the data so I can illustrate stuff below:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">rats_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(</span>
<span id="cb1-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://datavizf23.classes.andrewheiss.com/files/data/external_data/Rat_Sightings.csv"</span>, </span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N/A"</span>)</span>
<span id="cb1-6">)</span>
<span id="cb1-7"></span>
<span id="cb1-8">rats_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rats_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">created_date =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Created Date</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb1-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Location Type</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb1-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borough =</span> Borough) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">created_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mdy_hms</span>(created_date)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sighting_year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(created_date),</span>
<span id="cb1-14">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sighting_month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(created_date),</span>
<span id="cb1-15">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sighting_day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">day</span>(created_date),</span>
<span id="cb1-16">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sighting_weekday =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wday</span>(created_date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">abbr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(borough <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unspecified"</span>)</span></code></pre></div>
</div>
<section id="warnings-and-messages" class="level3">
<h3 class="anchored" data-anchor-id="warnings-and-messages">Warnings and messages</h3>
<blockquote class="blockquote">
<p>Your knitted document has warnings and package loading messages.</p>
</blockquote>
<p>You should turn off those warnings and messages. See <a href="../news/2023-09-12_faqs_week-03.html#how-can-i-hide-warnings-and-messages">this</a> and <a href="../news/2023-10-03_cleaner-nicer-rmd-output.html#clean-up-warnings-and-messages">this</a> for more about how.</p>
</section>
<section id="all-caps" class="level3">
<h3 class="anchored" data-anchor-id="all-caps">ALL CAPS</h3>
<blockquote class="blockquote">
<p>Consider converting the borough names to NOT ALL CAPS, since you don’t repeat all caps anywhere else</p>
</blockquote>
<p>In the data, the borough names are all spelled with ALL CAPS:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(created_date, borough)</span>
<span id="cb2-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 101,913 × 2</span></span>
<span id="cb2-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    created_date        borough      </span></span>
<span id="cb2-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;dttm&gt;              &lt;chr&gt;        </span></span>
<span id="cb2-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 2015-09-04 00:00:00 MANHATTAN    </span></span>
<span id="cb2-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 2015-09-04 00:00:00 STATEN ISLAND</span></span>
<span id="cb2-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 2015-09-04 00:00:00 STATEN ISLAND</span></span>
<span id="cb2-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 2015-09-04 00:00:00 BROOKLYN     </span></span>
<span id="cb2-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 2015-09-04 00:00:00 BRONX        </span></span>
<span id="cb2-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 2015-09-04 00:00:00 BROOKLYN     </span></span>
<span id="cb2-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 2015-09-04 00:00:00 QUEENS       </span></span>
<span id="cb2-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 2015-09-04 00:00:00 BROOKLYN     </span></span>
<span id="cb2-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 2015-09-04 00:00:00 MANHATTAN    </span></span>
<span id="cb2-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 2015-09-04 00:00:00 STATEN ISLAND</span></span>
<span id="cb2-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 101,903 more rows</span></span></code></pre></div>
</div>
<p>You can convert that to not all caps with one of two functions from the {stringr} package (which is one of the nine that R loads when you run <code>library(tidyverse)</code>): <code>str_to_title()</code> changes text to title case (where each word is capitalized) while <code>str_to_sentence()</code> changes text to sentence case (where the first letter in a sentence is capitalized):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OH NO! RATS IN NEW YORK"</span>)</span>
<span id="cb3-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] "Oh No! Rats In New York"</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_sentence</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OH NO! RATS IN NEW YORK"</span>)</span>
<span id="cb3-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] "Oh no! Rats in new york"</span></span></code></pre></div>
</div>
<p>You can use it with <code>mutate()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">rats_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borough =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>(borough))</span>
<span id="cb4-3"></span>
<span id="cb4-4">rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(created_date, borough)</span>
<span id="cb4-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 101,913 × 2</span></span>
<span id="cb4-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    created_date        borough      </span></span>
<span id="cb4-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;dttm&gt;              &lt;chr&gt;        </span></span>
<span id="cb4-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 2015-09-04 00:00:00 Manhattan    </span></span>
<span id="cb4-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 2015-09-04 00:00:00 Staten Island</span></span>
<span id="cb4-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 2015-09-04 00:00:00 Staten Island</span></span>
<span id="cb4-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 2015-09-04 00:00:00 Brooklyn     </span></span>
<span id="cb4-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 2015-09-04 00:00:00 Bronx        </span></span>
<span id="cb4-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 2015-09-04 00:00:00 Brooklyn     </span></span>
<span id="cb4-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 2015-09-04 00:00:00 Queens       </span></span>
<span id="cb4-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 2015-09-04 00:00:00 Brooklyn     </span></span>
<span id="cb4-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 2015-09-04 00:00:00 Manhattan    </span></span>
<span id="cb4-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 2015-09-04 00:00:00 Staten Island</span></span>
<span id="cb4-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 101,903 more rows</span></span></code></pre></div>
</div>
<p>(I’d use <code>str_to_title()</code> here since Staten Island is two words; if you use <code>str_to_sentence()</code> it’ll turn into “Staten island”.)</p>
<p>Now your plots will have nicer borough names:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">rats_summarized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(borough) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_summarized, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/plot-with-better-capitalization-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="sorting-and-ordering" class="level3">
<h3 class="anchored" data-anchor-id="sorting-and-ordering">Sorting and ordering</h3>
<blockquote class="blockquote">
<p>Consider sorting the locations by number of sightings instead of alphabetically</p>
</blockquote>
<p>In the plot above, the boroughs on the x-axis are in alphabetic order. If we want to tell a better story, though, it’s helpful to reorder them so that we can more easily see which boroughs have the most and least rats. <a href="../news/2023-10-10_faqs-week-07.html#i-want-my-bars-to-be-sorted-in-my-plot.-how-can-i-control-their-order">See here for more about reordering categories</a>. We can sort the data and then use <code>fct_inorder()</code> from the {forcats} package (also one of the nine that gets loaded with <code>library(tidyverse)</code>) to lock these borough names in the right order:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">rats_summarized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(borough) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort by total in descending order</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lock bhe borough names in place</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borough =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(borough))</span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_summarized, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/plot-better-order-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="unbalanced-facets" class="level3">
<h3 class="anchored" data-anchor-id="unbalanced-facets">Unbalanced facets</h3>
<blockquote class="blockquote">
<p>The facets are a little unbalanced given that there are 8 panels. Consider adding… something?… to that empty panel, like explanatory text or information about the data source. Or make it use 4 columns and 2 rows, or 2 columns and 4 rows so there’s no empty space</p>
</blockquote>
<p>Lots of you used facets to show trends over time. By default R tries to make the grid as square as possible, so here there are 3 rows and 3 columns, but that leaves an empty panel in the bottom right corner.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">rats_by_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rats_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(borough, sighting_year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb7-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `summarise()` has grouped output by 'borough'. You can override using the</span></span>
<span id="cb7-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `.groups` argument.</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/plot-facets-unbalanced-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>For the sake of balance, you can get rid of that panel by changing the layout. There are 8 panels here, so we could make a rectangle that’s 4 wide and 2 tall (or 2 wide and 4 tall if you want a tall rectangle instead) using the <code>nrow</code> or <code>ncol</code> arguments to <code>facet_wrap()</code>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">4 columns</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">4 rows</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/facet-4-cols-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/facet-4-rows-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Alternatively you can stick something in that empty panel like your legend (though in this example it’s better to not even have a legend because <a href="../news/2023-09-27_faqs_week-05.html#double-encoding-and-excessive-legends">it’s redundant with the x-axis</a>). The <code>reposition_legend()</code> function from the {lemon} package makes this really easy:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lemon)</span>
<span id="cb10-2"></span>
<span id="cb10-3">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> borough)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>))</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reposition_legend</span>(p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"panel-3-3"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/plot-legend-corner-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>You can even be fancy and add some explanatory text to that corner. It takes a big of extra work—you essentially have to create a fake text-only plot using <code>grid::textGrob()</code> and then use <code>inset_element()</code> from the {patchwork} to place it on top of the main plot:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(grid)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For making custom grid grobs</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb11-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'patchwork' was built under R version 4.2.3</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a little text-only plot</span></span>
<span id="cb11-6">extra_note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's some text</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">about rats. Neato."</span>, </span>
<span id="cb11-7">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gpar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>))</span>
<span id="cb11-8"></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run this if you want to see it by itself:</span></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grid.draw(extra_note)</span></span>
<span id="cb11-11"></span>
<span id="cb11-12">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year))</span>
<span id="cb11-15"></span>
<span id="cb11-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the text-only plot as an inset plot with patchwork</span></span>
<span id="cb11-17">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inset_element</span>(extra_note, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bottom =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/plot-note-corner-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="overlapping-text" class="level3">
<h3 class="anchored" data-anchor-id="overlapping-text">Overlapping text</h3>
<blockquote class="blockquote">
<p>The labels along the x-axis are unreadable and overlapping.</p>
</blockquote>
<p>There are lots of ways to fix this—<a href="https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/">see this whole blog post for some different options</a>. Here are some quick examples (none of these are fabulous, but they’re a start):</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Swap x- and y-axes</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Rotate labels</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">Dodge labels</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> total, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> borough)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/overlap-swap-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/overlap-rotate-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_by_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sighting_year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_axis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.dodge =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/overlap-dodge-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="commas" class="level3">
<h3 class="anchored" data-anchor-id="commas">Commas</h3>
<blockquote class="blockquote">
<p>Consider adding automatic commas to the x-axis by including <code>library(scales)</code> and adding <code>scale_x_continuous(labels = label_comma())</code></p>
</blockquote>
<p>You can make nicer labels by formatting them with <code>label_comma()</code> (or any of the other <code>label_*()</code> functions) from the {scales} package. <a href="../news/2023-09-19_faqs_week-04.html#i-have-numbers-like-20000-and-want-them-formatted-with-commas-like-20000.-can-i-do-that-automatically">See here for a lot more details</a>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(rats_summarized, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> borough, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>())</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01_files/figure-html/comma-example-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>faq</category>
  <category>feedback</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_feedback-mini-project-01.html</guid>
  <pubDate>Tue, 07 Nov 2023 04:02:00 GMT</pubDate>
</item>
<item>
  <title>Weeks 8, 9, and 10 tips and FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Apologies for the delay on FAQ posts! I’ve got some extra good tips here, though, to make up for the past couple weeks!</p>
<section id="in-my-coefficient-plot-the-coefficient-for-per_capita_income-didnt-have-error-bars-around-it.-why" class="level3">
<h3 class="anchored" data-anchor-id="in-my-coefficient-plot-the-coefficient-for-per_capita_income-didnt-have-error-bars-around-it.-why">In my coefficient plot, the coefficient for <code>per_capita_income</code> didn’t have error bars around it. Why?</h3>
<p>(Technically this was from week 7, but I got a lot of questions about it after I posted the FAQs for week 7, so here it is.)</p>
<p>In <a href="../assignment/07-exercise.html">exercise 7</a> you created a coefficient plot for a regression model predicting Democratic vote share in the 2016 presidential election based on a bunch of county-level characteristics:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2">results_2016 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://datavizf23.classes.andrewheiss.com/files/data/external_data/results_2016.csv"</span>)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb2-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'broom' was built under R version 4.2.3</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(percent_dem <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> median_age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> percent_white <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-5">              per_capita_income <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> median_rent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> state,</span>
<span id="cb2-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_2016)</span>
<span id="cb2-7"></span>
<span id="cb2-8">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(term, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>))</span>
<span id="cb2-10"></span>
<span id="cb2-11">results</span>
<span id="cb2-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 5 × 7</span></span>
<span id="cb2-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   term               estimate std.error statistic   p.value  conf.low conf.high</span></span>
<span id="cb2-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;</span></span>
<span id="cb2-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 (Intercept)       58.5      1.66          35.3  5.73e-229 55.2      61.8     </span></span>
<span id="cb2-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 median_age         0.166    0.0368         4.52 6.33e-  6  0.0942    0.238   </span></span>
<span id="cb2-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 percent_white     -0.682    0.0110       -61.9  0         -0.704    -0.661   </span></span>
<span id="cb2-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 per_capita_income  0.000271 0.0000497      5.46 5.18e-  8  0.000174  0.000369</span></span>
<span id="cb2-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 median_rent        0.0200   0.00163       12.3  6.23e- 34  0.0168    0.0232</span></span></code></pre></div>
</div>
<p>The point ranges in the plot show the coefficient and the confidence interval around the coefficient. Median rent and per capita income here are just dots, though. Did something go wrong? Why is there no confidence interval?</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(results, term <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(Intercept)"</span>), </span>
<span id="cb3-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> term)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> conf.high))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-model-original-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>There is a confidence interval, it’s just really tiny! That’s because of how these variables are measured in the data. Each county has a dollar amount recorded for rent and income:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">results_2016 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(state, county, per_capita_income, median_rent)</span>
<span id="cb4-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 3,158 × 4</span></span>
<span id="cb4-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    state   county   per_capita_income median_rent</span></span>
<span id="cb4-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt;   &lt;chr&gt;                &lt;dbl&gt;       &lt;dbl&gt;</span></span>
<span id="cb4-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 Alabama Autauga              24571         668</span></span>
<span id="cb4-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 Alabama Baldwin              26766         693</span></span>
<span id="cb4-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 Alabama Barbour              16829         382</span></span>
<span id="cb4-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 Alabama Bibb                 17427         351</span></span>
<span id="cb4-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 Alabama Blount               20730         403</span></span>
<span id="cb4-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 Alabama Bullock              18628         276</span></span>
<span id="cb4-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 Alabama Butler               17403         331</span></span>
<span id="cb4-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 Alabama Calhoun              20828         422</span></span>
<span id="cb4-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 Alabama Chambers             19291         374</span></span>
<span id="cb4-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 Alabama Cherokee             22030         375</span></span>
<span id="cb4-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 3,148 more rows</span></span></code></pre></div>
</div>
<p>When looking at the regression coefficient, we interpret then using single dollars. We’d say something like “A $1 increase in per capita income is associated with a 0.00027 percentage point increase in Democratic vote share, on average.”</p>
<p>Talking about $1 changes, though, is weird because that kind of change in income really isn’t detectable. That’d be like looking at what happens to voting patterns if income in a county goes from $30,000 to $30,001 or $65,000 to $65,001. Nothing’s going to happen to voting patterns! If the original democratic vote share was 60%, a $1 increase in income would increase that by 0.00027 percentage points to 60.00027%.</p>
<p>To make that coefficient more interpretable we can scale down the income column and think of it as hundreds or thousands of dollars instead. We can do that by making a new column in the data…</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">results_2016 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results_2016 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">per_capita_income_1000 =</span> per_capita_income <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4">results_2016 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(state, county, per_capita_income_1000, per_capita_income)</span>
<span id="cb5-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 3,158 × 4</span></span>
<span id="cb5-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    state   county   per_capita_income_1000 per_capita_income</span></span>
<span id="cb5-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt;   &lt;chr&gt;                     &lt;dbl&gt;             &lt;dbl&gt;</span></span>
<span id="cb5-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 Alabama Autauga                    24.6             24571</span></span>
<span id="cb5-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 Alabama Baldwin                    26.8             26766</span></span>
<span id="cb5-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 Alabama Barbour                    16.8             16829</span></span>
<span id="cb5-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 Alabama Bibb                       17.4             17427</span></span>
<span id="cb5-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 Alabama Blount                     20.7             20730</span></span>
<span id="cb5-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 Alabama Bullock                    18.6             18628</span></span>
<span id="cb5-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 Alabama Butler                     17.4             17403</span></span>
<span id="cb5-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 Alabama Calhoun                    20.8             20828</span></span>
<span id="cb5-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 Alabama Chambers                   19.3             19291</span></span>
<span id="cb5-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 Alabama Cherokee                   22.0             22030</span></span>
<span id="cb5-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 3,148 more rows</span></span></code></pre></div>
</div>
<p>…and then using that new <code>per_capita_income_1000</code> in the model instead:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(percent_dem <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> median_age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> percent_white <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-2">              per_capita_income_1000 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> median_rent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> state,</span>
<span id="cb6-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_2016)</span>
<span id="cb6-4"></span>
<span id="cb6-5">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(term, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>))</span>
<span id="cb6-7"></span>
<span id="cb6-8">results</span>
<span id="cb6-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 5 × 7</span></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   term                 estimate std.error statistic   p.value conf.low conf.high</span></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;                   &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;</span></span>
<span id="cb6-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 (Intercept)           58.5      1.66        35.3  5.73e-229  55.2      61.8   </span></span>
<span id="cb6-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 median_age             0.166    0.0368       4.52 6.33e-  6   0.0942    0.238 </span></span>
<span id="cb6-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 percent_white         -0.682    0.0110     -61.9  0          -0.704    -0.661 </span></span>
<span id="cb6-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 per_capita_income_1…   0.271    0.0497       5.46 5.18e-  8   0.174     0.369 </span></span>
<span id="cb6-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 median_rent            0.0200   0.00163     12.3  6.23e- 34   0.0168    0.0232</span></span></code></pre></div>
</div>
<p>Now the coefficient is bigger and we have a more visible confidence interval:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(results, term <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(Intercept)"</span>), </span>
<span id="cb7-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> term)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> conf.high))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-model-new-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Now we can say something like “A $1,000 increase in per capita income is associated with a 0.27 percentage point increase in Democratic vote share, on average” (or going from something like 60% to 60.27%)</p>
</section>
<section id="the-importance-of-layer-order" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-layer-order">The importance of layer order</h3>
<p>So far this semester, most of your plots have involved one or two <code>geom_*</code> layers. At one point in some video (I think), I mentioned that layer order doesn’t matter with ggplot. These two chunks of code create identical plots:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_c</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(...)</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(...) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_c</span>(...)</span></code></pre></div>
<p>All those functions can happen in whatever order you want, <strong>with one exception</strong>. The order of the geom layers matters. The first geom layer you specify will be plotted first, the second will go on top of it, and so on.</p>
<p>Let’s say you want to have a violin plot with jittered points on top. If you put <code>geom_point()</code> first, the points will be hidden by the violins:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb9-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'palmerpenguins' was built under R version 4.2.3</span></span>
<span id="cb9-3">penguins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(sex)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> species))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-violin-top-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>To fix it, make sure <code>geom_violin()</code> comes first:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-violin-bottom-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>You saw this back in exercise 7 too when you plotted the predicted values of your regression model with <code>geom_line()</code> and a confidence interval with <code>geom_ribbon()</code>. If you put the line first, then the ribbon, the ribbon covers up the line—here that line should be bright red, but the grey of the ribbon makes it darker:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(marginaleffects)</span>
<span id="cb11-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'marginaleffects' was built under R version 4.2.3</span></span>
<span id="cb11-3"></span>
<span id="cb11-4">my_predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predictions</span>(</span>
<span id="cb11-5">  model,</span>
<span id="cb11-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datagrid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb11-7">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Georgia"</span>))</span>
<span id="cb11-8"></span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(my_predictions, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> median_age, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf.high), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-ribbon-top-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>If you put the ribbon first and then the line, the line is the correct shade of red:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(my_predictions, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> median_age, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf.high), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-ribbon-bottom-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>This layer order applies to annotation layers too. If you want to highlight an area of the plot (or highlight a recession, like in session 11), adding a rectangle after the geom layers will cover things up, like this ugly yellow rectangle here:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6100</span>,</span>
<span id="cb13-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-rect-top-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>To fix that, put that <code>annotate()</code> layer first, then add other geoms on top:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6100</span>,</span>
<span id="cb14-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-rect-bottom-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>This doesn’t mean <em>all</em> <code>annotate()</code> layers should come first—if you want an extra label on top of a geom, make sure it comes after:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Yellow rectangle behind everything</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6100</span>,</span>
<span id="cb15-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Points</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Label on top of the points and the rectangle</span></span>
<span id="cb15-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chonky birds"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/plot-rect-bottom-label-top-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
My personal preferred general layer order
</div>
</div>
<div class="callout-body-container callout-body">
<p>When I make my plots, I try to keep my layers in logical groups. I’ll do my geoms and annotations first, then scale adjustments, then guide adjustments, then labels, then facets (if any), and end with theme adjustments, like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotations and geoms</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6100</span>,</span>
<span id="cb16-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chonky birds"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale adjustments</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_cut =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_si</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mm"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_cut =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_si</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Guide adjustments</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Labels</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Body mass"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species:"</span>,</span>
<span id="cb16-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Some title"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguins!"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blah"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Facets</span></span>
<span id="cb16-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(sex)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Theme stuff</span></span>
<span id="cb16-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>)),</span>
<span id="cb16-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.caption =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey50"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb16-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb16-25">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb16-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb16-27">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb16-28">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.justification =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb16-29">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10_files/figure-html/example-ordering-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>This is totally arbitrary though! All that really matters is that the geoms and annotations are in the right order and that any theme adjustments you make with <code>theme()</code> come after a more general theme like <code>theme_grey()</code> or <code>theme_minimal()</code>, etc.. I’d recommend you figure out your own preferred style and try to stay consistent—it’ll make your life easier and more predictable.</p>
</div>
</div>
</section>
<section id="my-plot-didnt-translate-perfectly-to-ggplotlywhy" class="level3">
<h3 class="anchored" data-anchor-id="my-plot-didnt-translate-perfectly-to-ggplotlywhy">My plot didn’t translate perfectly to ggplotly—why?</h3>
<p>In session 10 you used <code>ggplotly()</code> to convert a ggplot object into an interactive plot, which I think is magical:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb17-2"></span>
<span id="cb17-3">basic_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>(basic_plot)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-c446dc5279051cc07b10" style="width:90%;height:355.968px;"></div>
<script type="application/json" data-for="htmlwidget-c446dc5279051cc07b10">{"x":{"data":[{"x":[39.100000000000001,39.5,40.299999999999997,36.700000000000003,39.299999999999997,38.899999999999999,39.200000000000003,41.100000000000001,38.600000000000001,34.600000000000001,36.600000000000001,38.700000000000003,42.5,34.399999999999999,46,37.799999999999997,37.700000000000003,35.899999999999999,38.200000000000003,38.799999999999997,35.299999999999997,40.600000000000001,40.5,37.899999999999999,40.5,39.5,37.200000000000003,39.5,40.899999999999999,36.399999999999999,39.200000000000003,38.799999999999997,42.200000000000003,37.600000000000001,39.799999999999997,36.5,40.799999999999997,36,44.100000000000001,37,39.600000000000001,41.100000000000001,36,42.299999999999997,39.600000000000001,40.100000000000001,35,42,34.5,41.399999999999999,39,40.600000000000001,36.5,37.600000000000001,35.700000000000003,41.299999999999997,37.600000000000001,41.100000000000001,36.399999999999999,41.600000000000001,35.5,41.100000000000001,35.899999999999999,41.799999999999997,33.5,39.700000000000003,39.600000000000001,45.799999999999997,35.5,42.799999999999997,40.899999999999999,37.200000000000003,36.200000000000003,42.100000000000001,34.600000000000001,42.899999999999999,36.700000000000003,35.100000000000001,37.299999999999997,41.299999999999997,36.299999999999997,36.899999999999999,38.299999999999997,38.899999999999999,35.700000000000003,41.100000000000001,34,39.600000000000001,36.200000000000003,40.799999999999997,38.100000000000001,40.299999999999997,33.100000000000001,43.200000000000003,35,41,37.700000000000003,37.799999999999997,37.899999999999999,39.700000000000003,38.600000000000001,38.200000000000003,38.100000000000001,43.200000000000003,38.100000000000001,45.600000000000001,39.700000000000003,42.200000000000003,39.600000000000001,42.700000000000003,38.600000000000001,37.299999999999997,35.700000000000003,41.100000000000001,36.200000000000003,37.700000000000003,40.200000000000003,41.399999999999999,35.200000000000003,40.600000000000001,38.799999999999997,41.5,39,44.100000000000001,38.5,43.100000000000001,36.799999999999997,37.5,38.100000000000001,41.100000000000001,35.600000000000001,40.200000000000003,37,39.700000000000003,40.200000000000003,40.600000000000001,32.100000000000001,40.700000000000003,37.299999999999997,39,39.200000000000003,36.600000000000001,36,37.799999999999997,36,41.5],"y":[3750,3800,3250,3450,3650,3625,4675,3200,3800,4400,3700,3450,4500,3325,4200,3400,3600,3800,3950,3800,3800,3550,3200,3150,3950,3250,3900,3300,3900,3325,4150,3950,3550,3300,4650,3150,3900,3100,4400,3000,4600,3425,3450,4150,3500,4300,3450,4050,2900,3700,3550,3800,2850,3750,3150,4400,3600,4050,2850,3950,3350,4100,3050,4450,3600,3900,3550,4150,3700,4250,3700,3900,3550,4000,3200,4700,3800,4200,3350,3550,3800,3500,3950,3600,3550,4300,3400,4450,3300,4300,3700,4350,2900,4100,3725,4725,3075,4250,2925,3550,3750,3900,3175,4775,3825,4600,3200,4275,3900,4075,2900,3775,3350,3325,3150,3500,3450,3875,3050,4000,3275,4300,3050,4000,3325,3500,3500,4475,3425,3900,3175,3975,3400,4250,3400,3475,3050,3725,3000,3650,4250,3475,3450,3750,3700,4000],"text":["bill_length_mm: 39.1<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 40.3<br />body_mass_g: 3250<br />species: Adelie","bill_length_mm: 36.7<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 39.3<br />body_mass_g: 3650<br />species: Adelie","bill_length_mm: 38.9<br />body_mass_g: 3625<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4675<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 34.6<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 36.6<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 38.7<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.5<br />body_mass_g: 4500<br />species: Adelie","bill_length_mm: 34.4<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 46.0<br />body_mass_g: 4200<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 35.9<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 38.2<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 35.3<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 40.5<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 37.9<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 40.5<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3250<br />species: Adelie","bill_length_mm: 37.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 40.9<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.4<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 42.2<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 39.8<br />body_mass_g: 4650<br />species: Adelie","bill_length_mm: 36.5<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 40.8<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3100<br />species: Adelie","bill_length_mm: 44.1<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 37.0<br />body_mass_g: 3000<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 4600<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3425<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.3<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 40.1<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 35.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.0<br />body_mass_g: 4050<br />species: Adelie","bill_length_mm: 34.5<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 41.4<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 36.5<br />body_mass_g: 2850<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 41.3<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4050<br />species: Adelie","bill_length_mm: 36.4<br />body_mass_g: 2850<br />species: Adelie","bill_length_mm: 41.6<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 35.5<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4100<br />species: Adelie","bill_length_mm: 35.9<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 41.8<br />body_mass_g: 4450<br />species: Adelie","bill_length_mm: 33.5<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 45.8<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 35.5<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 42.8<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 40.9<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 37.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 42.1<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 34.6<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 42.9<br />body_mass_g: 4700<br />species: Adelie","bill_length_mm: 36.7<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 35.1<br />body_mass_g: 4200<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.3<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 36.3<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 36.9<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 38.3<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 38.9<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 34.0<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 4450<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 40.8<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 40.3<br />body_mass_g: 4350<br />species: Adelie","bill_length_mm: 33.1<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 43.2<br />body_mass_g: 4100<br />species: Adelie","bill_length_mm: 35.0<br />body_mass_g: 3725<br />species: Adelie","bill_length_mm: 41.0<br />body_mass_g: 4725<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3075<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 37.9<br />body_mass_g: 2925<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 38.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3175<br />species: Adelie","bill_length_mm: 43.2<br />body_mass_g: 4775<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3825<br />species: Adelie","bill_length_mm: 45.6<br />body_mass_g: 4600<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 42.2<br />body_mass_g: 4275<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 42.7<br />body_mass_g: 4075<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3775<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 41.4<br />body_mass_g: 3875<br />species: Adelie","bill_length_mm: 35.2<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3275<br />species: Adelie","bill_length_mm: 41.5<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 44.1<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 38.5<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 43.1<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 36.8<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 37.5<br />body_mass_g: 4475<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3425<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 35.6<br />body_mass_g: 3175<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3975<br />species: Adelie","bill_length_mm: 37.0<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3475<br />species: Adelie","bill_length_mm: 32.1<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 40.7<br />body_mass_g: 3725<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3000<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3650<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 36.6<br />body_mass_g: 3475<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 41.5<br />body_mass_g: 4000<br />species: Adelie"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"Adelie","legendgroup":"Adelie","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[46.5,50,51.299999999999997,45.399999999999999,52.700000000000003,45.200000000000003,46.100000000000001,51.299999999999997,46,51.299999999999997,46.600000000000001,51.700000000000003,47,52,45.899999999999999,50.5,50.299999999999997,58,46.399999999999999,49.200000000000003,42.399999999999999,48.5,43.200000000000003,50.600000000000001,46.700000000000003,52,50.5,49.5,46.399999999999999,52.799999999999997,40.899999999999999,54.200000000000003,42.5,51,49.700000000000003,47.5,47.600000000000001,52,46.899999999999999,53.5,49,46.200000000000003,50.899999999999999,45.5,50.899999999999999,50.799999999999997,50.100000000000001,49,51.5,49.799999999999997,48.100000000000001,51.399999999999999,45.700000000000003,50.700000000000003,42.5,52.200000000000003,45.200000000000003,49.299999999999997,50.200000000000003,45.600000000000001,51.899999999999999,46.799999999999997,45.700000000000003,55.799999999999997,43.5,49.600000000000001,50.799999999999997,50.200000000000003],"y":[3500,3900,3650,3525,3725,3950,3250,3750,4150,3700,3800,3775,3700,4050,3575,4050,3300,3700,3450,4400,3600,3400,2900,3800,3300,4150,3400,3800,3700,4550,3200,4300,3350,4100,3600,3900,3850,4800,2700,4500,3950,3650,3550,3500,3675,4450,3400,4300,3250,3675,3325,3950,3600,4050,3350,3450,3250,4050,3800,3525,3950,3650,3650,4000,3400,3775,4100,3775],"text":["bill_length_mm: 46.5<br />body_mass_g: 3500<br />species: Chinstrap","bill_length_mm: 50.0<br />body_mass_g: 3900<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 45.4<br />body_mass_g: 3525<br />species: Chinstrap","bill_length_mm: 52.7<br />body_mass_g: 3725<br />species: Chinstrap","bill_length_mm: 45.2<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.1<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3750<br />species: Chinstrap","bill_length_mm: 46.0<br />body_mass_g: 4150<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 46.6<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 51.7<br />body_mass_g: 3775<br />species: Chinstrap","bill_length_mm: 47.0<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 45.9<br />body_mass_g: 3575<br />species: Chinstrap","bill_length_mm: 50.5<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 50.3<br />body_mass_g: 3300<br />species: Chinstrap","bill_length_mm: 58.0<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 46.4<br />body_mass_g: 3450<br />species: Chinstrap","bill_length_mm: 49.2<br />body_mass_g: 4400<br />species: Chinstrap","bill_length_mm: 42.4<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 48.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 43.2<br />body_mass_g: 2900<br />species: Chinstrap","bill_length_mm: 50.6<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 46.7<br />body_mass_g: 3300<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4150<br />species: Chinstrap","bill_length_mm: 50.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.5<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 46.4<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 52.8<br />body_mass_g: 4550<br />species: Chinstrap","bill_length_mm: 40.9<br />body_mass_g: 3200<br />species: Chinstrap","bill_length_mm: 54.2<br />body_mass_g: 4300<br />species: Chinstrap","bill_length_mm: 42.5<br />body_mass_g: 3350<br />species: Chinstrap","bill_length_mm: 51.0<br />body_mass_g: 4100<br />species: Chinstrap","bill_length_mm: 49.7<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 47.5<br />body_mass_g: 3900<br />species: Chinstrap","bill_length_mm: 47.6<br />body_mass_g: 3850<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4800<br />species: Chinstrap","bill_length_mm: 46.9<br />body_mass_g: 2700<br />species: Chinstrap","bill_length_mm: 53.5<br />body_mass_g: 4500<br />species: Chinstrap","bill_length_mm: 49.0<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.2<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 50.9<br />body_mass_g: 3550<br />species: Chinstrap","bill_length_mm: 45.5<br />body_mass_g: 3500<br />species: Chinstrap","bill_length_mm: 50.9<br />body_mass_g: 3675<br />species: Chinstrap","bill_length_mm: 50.8<br />body_mass_g: 4450<br />species: Chinstrap","bill_length_mm: 50.1<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.0<br />body_mass_g: 4300<br />species: Chinstrap","bill_length_mm: 51.5<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 49.8<br />body_mass_g: 3675<br />species: Chinstrap","bill_length_mm: 48.1<br />body_mass_g: 3325<br />species: Chinstrap","bill_length_mm: 51.4<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 45.7<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 50.7<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 42.5<br />body_mass_g: 3350<br />species: Chinstrap","bill_length_mm: 52.2<br />body_mass_g: 3450<br />species: Chinstrap","bill_length_mm: 45.2<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 49.3<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 50.2<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 45.6<br />body_mass_g: 3525<br />species: Chinstrap","bill_length_mm: 51.9<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.8<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 45.7<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 55.8<br />body_mass_g: 4000<br />species: Chinstrap","bill_length_mm: 43.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.6<br />body_mass_g: 3775<br />species: Chinstrap","bill_length_mm: 50.8<br />body_mass_g: 4100<br />species: Chinstrap","bill_length_mm: 50.2<br />body_mass_g: 3775<br />species: Chinstrap"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,186,56,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,186,56,1)"}},"hoveron":"points","name":"Chinstrap","legendgroup":"Chinstrap","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[46.100000000000001,50,48.700000000000003,50,47.600000000000001,46.5,45.399999999999999,46.700000000000003,43.299999999999997,46.799999999999997,40.899999999999999,49,45.5,48.399999999999999,45.799999999999997,49.299999999999997,42,49.200000000000003,46.200000000000003,48.700000000000003,50.200000000000003,45.100000000000001,46.5,46.299999999999997,42.899999999999999,46.100000000000001,47.799999999999997,48.200000000000003,50,47.299999999999997,42.799999999999997,45.100000000000001,59.600000000000001,49.100000000000001,48.399999999999999,42.600000000000001,44.399999999999999,44,48.700000000000003,42.700000000000003,49.600000000000001,45.299999999999997,49.600000000000001,50.5,43.600000000000001,45.5,50.5,44.899999999999999,45.200000000000003,46.600000000000001,48.5,45.100000000000001,50.100000000000001,46.5,45,43.799999999999997,45.5,43.200000000000003,50.399999999999999,45.299999999999997,46.200000000000003,45.700000000000003,54.299999999999997,45.799999999999997,49.799999999999997,49.5,43.5,50.700000000000003,47.700000000000003,46.399999999999999,48.200000000000003,46.5,46.399999999999999,48.600000000000001,47.5,51.100000000000001,45.200000000000003,45.200000000000003,49.100000000000001,52.5,47.399999999999999,50,44.899999999999999,50.799999999999997,43.399999999999999,51.299999999999997,47.5,52.100000000000001,47.5,52.200000000000003,45.5,49.5,44.5,50.799999999999997,49.399999999999999,46.899999999999999,48.399999999999999,51.100000000000001,48.5,55.899999999999999,47.200000000000003,49.100000000000001,46.799999999999997,41.700000000000003,53.399999999999999,43.299999999999997,48.100000000000001,50.5,49.799999999999997,43.5,51.5,46.200000000000003,55.100000000000001,48.799999999999997,47.200000000000003,46.799999999999997,50.399999999999999,45.200000000000003,49.899999999999999],"y":[4500,5700,4450,5700,5400,4550,4800,5200,4400,5150,4650,5550,4650,5850,4200,5850,4150,6300,4800,5350,5700,5000,4400,5050,5000,5100,5650,4600,5550,5250,4700,5050,6050,5150,5400,4950,5250,4350,5350,3950,5700,4300,4750,5550,4900,4200,5400,5100,5300,4850,5300,4400,5000,4900,5050,4300,5000,4450,5550,4200,5300,4400,5650,4700,5700,5800,4700,5550,4750,5000,5100,5200,4700,5800,4600,6000,4750,5950,4625,5450,4725,5350,4750,5600,4600,5300,4875,5550,4950,5400,4750,5650,4850,5200,4925,4875,4625,5250,4850,5600,4975,5500,5500,4700,5500,4575,5500,5000,5950,4650,5500,4375,5850,6000,4925,4850,5750,5200,5400],"text":["bill_length_mm: 46.1<br />body_mass_g: 4500<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 4450<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 47.6<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4550<br />species: Gentoo","bill_length_mm: 45.4<br />body_mass_g: 4800<br />species: Gentoo","bill_length_mm: 46.7<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 43.3<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 5150<br />species: Gentoo","bill_length_mm: 40.9<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 49.0<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 45.8<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 49.3<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 42.0<br />body_mass_g: 4150<br />species: Gentoo","bill_length_mm: 49.2<br />body_mass_g: 6300<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 4800<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 50.2<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 46.3<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 42.9<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.1<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 47.8<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 48.2<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.3<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 42.8<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 59.6<br />body_mass_g: 6050<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 5150<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 42.6<br />body_mass_g: 4950<br />species: Gentoo","bill_length_mm: 44.4<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 44.0<br />body_mass_g: 4350<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 42.7<br />body_mass_g: 3950<br />species: Gentoo","bill_length_mm: 49.6<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 45.3<br />body_mass_g: 4300<br />species: Gentoo","bill_length_mm: 49.6<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 43.6<br />body_mass_g: 4900<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 44.9<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 46.6<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 48.5<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 50.1<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4900<br />species: Gentoo","bill_length_mm: 45.0<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 43.8<br />body_mass_g: 4300<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 43.2<br />body_mass_g: 4450<br />species: Gentoo","bill_length_mm: 50.4<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 45.3<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 45.7<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 54.3<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 45.8<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 49.8<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 49.5<br />body_mass_g: 5800<br />species: Gentoo","bill_length_mm: 43.5<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 50.7<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.7<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 46.4<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 48.2<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 46.4<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 48.6<br />body_mass_g: 5800<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 51.1<br />body_mass_g: 6000<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5950<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 4625<br />species: Gentoo","bill_length_mm: 52.5<br />body_mass_g: 5450<br />species: Gentoo","bill_length_mm: 47.4<br />body_mass_g: 4725<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 44.9<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 50.8<br />body_mass_g: 5600<br />species: Gentoo","bill_length_mm: 43.4<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 51.3<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4875<br />species: Gentoo","bill_length_mm: 52.1<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4950<br />species: Gentoo","bill_length_mm: 52.2<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 49.5<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 44.5<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 50.8<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 49.4<br />body_mass_g: 4925<br />species: Gentoo","bill_length_mm: 46.9<br />body_mass_g: 4875<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 4625<br />species: Gentoo","bill_length_mm: 51.1<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 48.5<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 55.9<br />body_mass_g: 5600<br />species: Gentoo","bill_length_mm: 47.2<br />body_mass_g: 4975<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 41.7<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 53.4<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 43.3<br />body_mass_g: 4575<br />species: Gentoo","bill_length_mm: 48.1<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 49.8<br />body_mass_g: 5950<br />species: Gentoo","bill_length_mm: 43.5<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 51.5<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 4375<br />species: Gentoo","bill_length_mm: 55.1<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 48.8<br />body_mass_g: 6000<br />species: Gentoo","bill_length_mm: 47.2<br />body_mass_g: 4925<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 50.4<br />body_mass_g: 5750<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 49.9<br />body_mass_g: 5400<br />species: Gentoo"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(97,156,255,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(97,156,255,1)"}},"hoveron":"points","name":"Gentoo","legendgroup":"Gentoo","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":27.837466042425298,"r":7.3059360730593621,"b":41.791803941968681,"l":48.949771689497723},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[30.725000000000001,60.975000000000001],"tickmode":"array","ticktext":["40","50","60"],"tickvals":[40,50,60],"categoryorder":"array","categoryarray":["40","50","60"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.6529680365296811,"tickwidth":0.66417600664176002,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"bill_length_mm","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[2520,6480],"tickmode":"array","ticktext":["3000","4000","5000","6000"],"tickvals":[3000,4000,5000,6000],"categoryorder":"array","categoryarray":["3000","4000","5000","6000"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.6529680365296811,"tickwidth":0.66417600664176002,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"body_mass_g","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.8897637795275593,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"title":{"text":"species","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4da4d476f38":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"4da4d476f38","visdat":{"4da4d476f38":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>&nbsp;</p>
<p>However, lots of you discovered that Plotly does not translate everything perfectly. Plotly is a separate Javascript library and it doesn’t support every option ggplot does. <code>ggplotly()</code> tries its best to translate between R and Javascript, but it can’t get everything. For instance, subtitles, captions, and labels disappear:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">fancy_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chonky birds"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin bill length and weight"</span>,</span>
<span id="cb18-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neato"</span>, </span>
<span id="cb18-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a caption"</span>)</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>(fancy_plot)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-38130e0844f616d521df" style="width:90%;height:355.968px;"></div>
<script type="application/json" data-for="htmlwidget-38130e0844f616d521df">{"x":{"data":[{"x":[39.100000000000001,39.5,40.299999999999997,36.700000000000003,39.299999999999997,38.899999999999999,39.200000000000003,41.100000000000001,38.600000000000001,34.600000000000001,36.600000000000001,38.700000000000003,42.5,34.399999999999999,46,37.799999999999997,37.700000000000003,35.899999999999999,38.200000000000003,38.799999999999997,35.299999999999997,40.600000000000001,40.5,37.899999999999999,40.5,39.5,37.200000000000003,39.5,40.899999999999999,36.399999999999999,39.200000000000003,38.799999999999997,42.200000000000003,37.600000000000001,39.799999999999997,36.5,40.799999999999997,36,44.100000000000001,37,39.600000000000001,41.100000000000001,36,42.299999999999997,39.600000000000001,40.100000000000001,35,42,34.5,41.399999999999999,39,40.600000000000001,36.5,37.600000000000001,35.700000000000003,41.299999999999997,37.600000000000001,41.100000000000001,36.399999999999999,41.600000000000001,35.5,41.100000000000001,35.899999999999999,41.799999999999997,33.5,39.700000000000003,39.600000000000001,45.799999999999997,35.5,42.799999999999997,40.899999999999999,37.200000000000003,36.200000000000003,42.100000000000001,34.600000000000001,42.899999999999999,36.700000000000003,35.100000000000001,37.299999999999997,41.299999999999997,36.299999999999997,36.899999999999999,38.299999999999997,38.899999999999999,35.700000000000003,41.100000000000001,34,39.600000000000001,36.200000000000003,40.799999999999997,38.100000000000001,40.299999999999997,33.100000000000001,43.200000000000003,35,41,37.700000000000003,37.799999999999997,37.899999999999999,39.700000000000003,38.600000000000001,38.200000000000003,38.100000000000001,43.200000000000003,38.100000000000001,45.600000000000001,39.700000000000003,42.200000000000003,39.600000000000001,42.700000000000003,38.600000000000001,37.299999999999997,35.700000000000003,41.100000000000001,36.200000000000003,37.700000000000003,40.200000000000003,41.399999999999999,35.200000000000003,40.600000000000001,38.799999999999997,41.5,39,44.100000000000001,38.5,43.100000000000001,36.799999999999997,37.5,38.100000000000001,41.100000000000001,35.600000000000001,40.200000000000003,37,39.700000000000003,40.200000000000003,40.600000000000001,32.100000000000001,40.700000000000003,37.299999999999997,39,39.200000000000003,36.600000000000001,36,37.799999999999997,36,41.5],"y":[3750,3800,3250,3450,3650,3625,4675,3200,3800,4400,3700,3450,4500,3325,4200,3400,3600,3800,3950,3800,3800,3550,3200,3150,3950,3250,3900,3300,3900,3325,4150,3950,3550,3300,4650,3150,3900,3100,4400,3000,4600,3425,3450,4150,3500,4300,3450,4050,2900,3700,3550,3800,2850,3750,3150,4400,3600,4050,2850,3950,3350,4100,3050,4450,3600,3900,3550,4150,3700,4250,3700,3900,3550,4000,3200,4700,3800,4200,3350,3550,3800,3500,3950,3600,3550,4300,3400,4450,3300,4300,3700,4350,2900,4100,3725,4725,3075,4250,2925,3550,3750,3900,3175,4775,3825,4600,3200,4275,3900,4075,2900,3775,3350,3325,3150,3500,3450,3875,3050,4000,3275,4300,3050,4000,3325,3500,3500,4475,3425,3900,3175,3975,3400,4250,3400,3475,3050,3725,3000,3650,4250,3475,3450,3750,3700,4000],"text":["bill_length_mm: 39.1<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 40.3<br />body_mass_g: 3250<br />species: Adelie","bill_length_mm: 36.7<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 39.3<br />body_mass_g: 3650<br />species: Adelie","bill_length_mm: 38.9<br />body_mass_g: 3625<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4675<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 34.6<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 36.6<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 38.7<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.5<br />body_mass_g: 4500<br />species: Adelie","bill_length_mm: 34.4<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 46.0<br />body_mass_g: 4200<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 35.9<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 38.2<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 35.3<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 40.5<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 37.9<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 40.5<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3250<br />species: Adelie","bill_length_mm: 37.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 39.5<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 40.9<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.4<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 42.2<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 39.8<br />body_mass_g: 4650<br />species: Adelie","bill_length_mm: 36.5<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 40.8<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3100<br />species: Adelie","bill_length_mm: 44.1<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 37.0<br />body_mass_g: 3000<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 4600<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3425<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.3<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 40.1<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 35.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 42.0<br />body_mass_g: 4050<br />species: Adelie","bill_length_mm: 34.5<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 41.4<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 36.5<br />body_mass_g: 2850<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 41.3<br />body_mass_g: 4400<br />species: Adelie","bill_length_mm: 37.6<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4050<br />species: Adelie","bill_length_mm: 36.4<br />body_mass_g: 2850<br />species: Adelie","bill_length_mm: 41.6<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 35.5<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4100<br />species: Adelie","bill_length_mm: 35.9<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 41.8<br />body_mass_g: 4450<br />species: Adelie","bill_length_mm: 33.5<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 45.8<br />body_mass_g: 4150<br />species: Adelie","bill_length_mm: 35.5<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 42.8<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 40.9<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 37.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 42.1<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 34.6<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 42.9<br />body_mass_g: 4700<br />species: Adelie","bill_length_mm: 36.7<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 35.1<br />body_mass_g: 4200<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.3<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 36.3<br />body_mass_g: 3800<br />species: Adelie","bill_length_mm: 36.9<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 38.3<br />body_mass_g: 3950<br />species: Adelie","bill_length_mm: 38.9<br />body_mass_g: 3600<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 34.0<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 4450<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3300<br />species: Adelie","bill_length_mm: 40.8<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 40.3<br />body_mass_g: 4350<br />species: Adelie","bill_length_mm: 33.1<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 43.2<br />body_mass_g: 4100<br />species: Adelie","bill_length_mm: 35.0<br />body_mass_g: 3725<br />species: Adelie","bill_length_mm: 41.0<br />body_mass_g: 4725<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3075<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 37.9<br />body_mass_g: 2925<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3550<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 38.2<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3175<br />species: Adelie","bill_length_mm: 43.2<br />body_mass_g: 4775<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3825<br />species: Adelie","bill_length_mm: 45.6<br />body_mass_g: 4600<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 3200<br />species: Adelie","bill_length_mm: 42.2<br />body_mass_g: 4275<br />species: Adelie","bill_length_mm: 39.6<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 42.7<br />body_mass_g: 4075<br />species: Adelie","bill_length_mm: 38.6<br />body_mass_g: 2900<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3775<br />species: Adelie","bill_length_mm: 35.7<br />body_mass_g: 3350<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 36.2<br />body_mass_g: 3150<br />species: Adelie","bill_length_mm: 37.7<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 41.4<br />body_mass_g: 3875<br />species: Adelie","bill_length_mm: 35.2<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 38.8<br />body_mass_g: 3275<br />species: Adelie","bill_length_mm: 41.5<br />body_mass_g: 4300<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 44.1<br />body_mass_g: 4000<br />species: Adelie","bill_length_mm: 38.5<br />body_mass_g: 3325<br />species: Adelie","bill_length_mm: 43.1<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 36.8<br />body_mass_g: 3500<br />species: Adelie","bill_length_mm: 37.5<br />body_mass_g: 4475<br />species: Adelie","bill_length_mm: 38.1<br />body_mass_g: 3425<br />species: Adelie","bill_length_mm: 41.1<br />body_mass_g: 3900<br />species: Adelie","bill_length_mm: 35.6<br />body_mass_g: 3175<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3975<br />species: Adelie","bill_length_mm: 37.0<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 39.7<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 40.2<br />body_mass_g: 3400<br />species: Adelie","bill_length_mm: 40.6<br />body_mass_g: 3475<br />species: Adelie","bill_length_mm: 32.1<br />body_mass_g: 3050<br />species: Adelie","bill_length_mm: 40.7<br />body_mass_g: 3725<br />species: Adelie","bill_length_mm: 37.3<br />body_mass_g: 3000<br />species: Adelie","bill_length_mm: 39.0<br />body_mass_g: 3650<br />species: Adelie","bill_length_mm: 39.2<br />body_mass_g: 4250<br />species: Adelie","bill_length_mm: 36.6<br />body_mass_g: 3475<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3450<br />species: Adelie","bill_length_mm: 37.8<br />body_mass_g: 3750<br />species: Adelie","bill_length_mm: 36.0<br />body_mass_g: 3700<br />species: Adelie","bill_length_mm: 41.5<br />body_mass_g: 4000<br />species: Adelie"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"Adelie","legendgroup":"Adelie","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[46.5,50,51.299999999999997,45.399999999999999,52.700000000000003,45.200000000000003,46.100000000000001,51.299999999999997,46,51.299999999999997,46.600000000000001,51.700000000000003,47,52,45.899999999999999,50.5,50.299999999999997,58,46.399999999999999,49.200000000000003,42.399999999999999,48.5,43.200000000000003,50.600000000000001,46.700000000000003,52,50.5,49.5,46.399999999999999,52.799999999999997,40.899999999999999,54.200000000000003,42.5,51,49.700000000000003,47.5,47.600000000000001,52,46.899999999999999,53.5,49,46.200000000000003,50.899999999999999,45.5,50.899999999999999,50.799999999999997,50.100000000000001,49,51.5,49.799999999999997,48.100000000000001,51.399999999999999,45.700000000000003,50.700000000000003,42.5,52.200000000000003,45.200000000000003,49.299999999999997,50.200000000000003,45.600000000000001,51.899999999999999,46.799999999999997,45.700000000000003,55.799999999999997,43.5,49.600000000000001,50.799999999999997,50.200000000000003],"y":[3500,3900,3650,3525,3725,3950,3250,3750,4150,3700,3800,3775,3700,4050,3575,4050,3300,3700,3450,4400,3600,3400,2900,3800,3300,4150,3400,3800,3700,4550,3200,4300,3350,4100,3600,3900,3850,4800,2700,4500,3950,3650,3550,3500,3675,4450,3400,4300,3250,3675,3325,3950,3600,4050,3350,3450,3250,4050,3800,3525,3950,3650,3650,4000,3400,3775,4100,3775],"text":["bill_length_mm: 46.5<br />body_mass_g: 3500<br />species: Chinstrap","bill_length_mm: 50.0<br />body_mass_g: 3900<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 45.4<br />body_mass_g: 3525<br />species: Chinstrap","bill_length_mm: 52.7<br />body_mass_g: 3725<br />species: Chinstrap","bill_length_mm: 45.2<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.1<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3750<br />species: Chinstrap","bill_length_mm: 46.0<br />body_mass_g: 4150<br />species: Chinstrap","bill_length_mm: 51.3<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 46.6<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 51.7<br />body_mass_g: 3775<br />species: Chinstrap","bill_length_mm: 47.0<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 45.9<br />body_mass_g: 3575<br />species: Chinstrap","bill_length_mm: 50.5<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 50.3<br />body_mass_g: 3300<br />species: Chinstrap","bill_length_mm: 58.0<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 46.4<br />body_mass_g: 3450<br />species: Chinstrap","bill_length_mm: 49.2<br />body_mass_g: 4400<br />species: Chinstrap","bill_length_mm: 42.4<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 48.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 43.2<br />body_mass_g: 2900<br />species: Chinstrap","bill_length_mm: 50.6<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 46.7<br />body_mass_g: 3300<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4150<br />species: Chinstrap","bill_length_mm: 50.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.5<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 46.4<br />body_mass_g: 3700<br />species: Chinstrap","bill_length_mm: 52.8<br />body_mass_g: 4550<br />species: Chinstrap","bill_length_mm: 40.9<br />body_mass_g: 3200<br />species: Chinstrap","bill_length_mm: 54.2<br />body_mass_g: 4300<br />species: Chinstrap","bill_length_mm: 42.5<br />body_mass_g: 3350<br />species: Chinstrap","bill_length_mm: 51.0<br />body_mass_g: 4100<br />species: Chinstrap","bill_length_mm: 49.7<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 47.5<br />body_mass_g: 3900<br />species: Chinstrap","bill_length_mm: 47.6<br />body_mass_g: 3850<br />species: Chinstrap","bill_length_mm: 52.0<br />body_mass_g: 4800<br />species: Chinstrap","bill_length_mm: 46.9<br />body_mass_g: 2700<br />species: Chinstrap","bill_length_mm: 53.5<br />body_mass_g: 4500<br />species: Chinstrap","bill_length_mm: 49.0<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.2<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 50.9<br />body_mass_g: 3550<br />species: Chinstrap","bill_length_mm: 45.5<br />body_mass_g: 3500<br />species: Chinstrap","bill_length_mm: 50.9<br />body_mass_g: 3675<br />species: Chinstrap","bill_length_mm: 50.8<br />body_mass_g: 4450<br />species: Chinstrap","bill_length_mm: 50.1<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.0<br />body_mass_g: 4300<br />species: Chinstrap","bill_length_mm: 51.5<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 49.8<br />body_mass_g: 3675<br />species: Chinstrap","bill_length_mm: 48.1<br />body_mass_g: 3325<br />species: Chinstrap","bill_length_mm: 51.4<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 45.7<br />body_mass_g: 3600<br />species: Chinstrap","bill_length_mm: 50.7<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 42.5<br />body_mass_g: 3350<br />species: Chinstrap","bill_length_mm: 52.2<br />body_mass_g: 3450<br />species: Chinstrap","bill_length_mm: 45.2<br />body_mass_g: 3250<br />species: Chinstrap","bill_length_mm: 49.3<br />body_mass_g: 4050<br />species: Chinstrap","bill_length_mm: 50.2<br />body_mass_g: 3800<br />species: Chinstrap","bill_length_mm: 45.6<br />body_mass_g: 3525<br />species: Chinstrap","bill_length_mm: 51.9<br />body_mass_g: 3950<br />species: Chinstrap","bill_length_mm: 46.8<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 45.7<br />body_mass_g: 3650<br />species: Chinstrap","bill_length_mm: 55.8<br />body_mass_g: 4000<br />species: Chinstrap","bill_length_mm: 43.5<br />body_mass_g: 3400<br />species: Chinstrap","bill_length_mm: 49.6<br />body_mass_g: 3775<br />species: Chinstrap","bill_length_mm: 50.8<br />body_mass_g: 4100<br />species: Chinstrap","bill_length_mm: 50.2<br />body_mass_g: 3775<br />species: Chinstrap"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,186,56,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,186,56,1)"}},"hoveron":"points","name":"Chinstrap","legendgroup":"Chinstrap","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[46.100000000000001,50,48.700000000000003,50,47.600000000000001,46.5,45.399999999999999,46.700000000000003,43.299999999999997,46.799999999999997,40.899999999999999,49,45.5,48.399999999999999,45.799999999999997,49.299999999999997,42,49.200000000000003,46.200000000000003,48.700000000000003,50.200000000000003,45.100000000000001,46.5,46.299999999999997,42.899999999999999,46.100000000000001,47.799999999999997,48.200000000000003,50,47.299999999999997,42.799999999999997,45.100000000000001,59.600000000000001,49.100000000000001,48.399999999999999,42.600000000000001,44.399999999999999,44,48.700000000000003,42.700000000000003,49.600000000000001,45.299999999999997,49.600000000000001,50.5,43.600000000000001,45.5,50.5,44.899999999999999,45.200000000000003,46.600000000000001,48.5,45.100000000000001,50.100000000000001,46.5,45,43.799999999999997,45.5,43.200000000000003,50.399999999999999,45.299999999999997,46.200000000000003,45.700000000000003,54.299999999999997,45.799999999999997,49.799999999999997,49.5,43.5,50.700000000000003,47.700000000000003,46.399999999999999,48.200000000000003,46.5,46.399999999999999,48.600000000000001,47.5,51.100000000000001,45.200000000000003,45.200000000000003,49.100000000000001,52.5,47.399999999999999,50,44.899999999999999,50.799999999999997,43.399999999999999,51.299999999999997,47.5,52.100000000000001,47.5,52.200000000000003,45.5,49.5,44.5,50.799999999999997,49.399999999999999,46.899999999999999,48.399999999999999,51.100000000000001,48.5,55.899999999999999,47.200000000000003,49.100000000000001,46.799999999999997,41.700000000000003,53.399999999999999,43.299999999999997,48.100000000000001,50.5,49.799999999999997,43.5,51.5,46.200000000000003,55.100000000000001,48.799999999999997,47.200000000000003,46.799999999999997,50.399999999999999,45.200000000000003,49.899999999999999],"y":[4500,5700,4450,5700,5400,4550,4800,5200,4400,5150,4650,5550,4650,5850,4200,5850,4150,6300,4800,5350,5700,5000,4400,5050,5000,5100,5650,4600,5550,5250,4700,5050,6050,5150,5400,4950,5250,4350,5350,3950,5700,4300,4750,5550,4900,4200,5400,5100,5300,4850,5300,4400,5000,4900,5050,4300,5000,4450,5550,4200,5300,4400,5650,4700,5700,5800,4700,5550,4750,5000,5100,5200,4700,5800,4600,6000,4750,5950,4625,5450,4725,5350,4750,5600,4600,5300,4875,5550,4950,5400,4750,5650,4850,5200,4925,4875,4625,5250,4850,5600,4975,5500,5500,4700,5500,4575,5500,5000,5950,4650,5500,4375,5850,6000,4925,4850,5750,5200,5400],"text":["bill_length_mm: 46.1<br />body_mass_g: 4500<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 4450<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 47.6<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4550<br />species: Gentoo","bill_length_mm: 45.4<br />body_mass_g: 4800<br />species: Gentoo","bill_length_mm: 46.7<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 43.3<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 5150<br />species: Gentoo","bill_length_mm: 40.9<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 49.0<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 45.8<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 49.3<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 42.0<br />body_mass_g: 4150<br />species: Gentoo","bill_length_mm: 49.2<br />body_mass_g: 6300<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 4800<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 50.2<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 46.3<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 42.9<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.1<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 47.8<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 48.2<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.3<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 42.8<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 59.6<br />body_mass_g: 6050<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 5150<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 42.6<br />body_mass_g: 4950<br />species: Gentoo","bill_length_mm: 44.4<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 44.0<br />body_mass_g: 4350<br />species: Gentoo","bill_length_mm: 48.7<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 42.7<br />body_mass_g: 3950<br />species: Gentoo","bill_length_mm: 49.6<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 45.3<br />body_mass_g: 4300<br />species: Gentoo","bill_length_mm: 49.6<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 43.6<br />body_mass_g: 4900<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 44.9<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 46.6<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 48.5<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 45.1<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 50.1<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 4900<br />species: Gentoo","bill_length_mm: 45.0<br />body_mass_g: 5050<br />species: Gentoo","bill_length_mm: 43.8<br />body_mass_g: 4300<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 43.2<br />body_mass_g: 4450<br />species: Gentoo","bill_length_mm: 50.4<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 45.3<br />body_mass_g: 4200<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 45.7<br />body_mass_g: 4400<br />species: Gentoo","bill_length_mm: 54.3<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 45.8<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 49.8<br />body_mass_g: 5700<br />species: Gentoo","bill_length_mm: 49.5<br />body_mass_g: 5800<br />species: Gentoo","bill_length_mm: 43.5<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 50.7<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.7<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 46.4<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 48.2<br />body_mass_g: 5100<br />species: Gentoo","bill_length_mm: 46.5<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 46.4<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 48.6<br />body_mass_g: 5800<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 51.1<br />body_mass_g: 6000<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5950<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 4625<br />species: Gentoo","bill_length_mm: 52.5<br />body_mass_g: 5450<br />species: Gentoo","bill_length_mm: 47.4<br />body_mass_g: 4725<br />species: Gentoo","bill_length_mm: 50.0<br />body_mass_g: 5350<br />species: Gentoo","bill_length_mm: 44.9<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 50.8<br />body_mass_g: 5600<br />species: Gentoo","bill_length_mm: 43.4<br />body_mass_g: 4600<br />species: Gentoo","bill_length_mm: 51.3<br />body_mass_g: 5300<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4875<br />species: Gentoo","bill_length_mm: 52.1<br />body_mass_g: 5550<br />species: Gentoo","bill_length_mm: 47.5<br />body_mass_g: 4950<br />species: Gentoo","bill_length_mm: 52.2<br />body_mass_g: 5400<br />species: Gentoo","bill_length_mm: 45.5<br />body_mass_g: 4750<br />species: Gentoo","bill_length_mm: 49.5<br />body_mass_g: 5650<br />species: Gentoo","bill_length_mm: 44.5<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 50.8<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 49.4<br />body_mass_g: 4925<br />species: Gentoo","bill_length_mm: 46.9<br />body_mass_g: 4875<br />species: Gentoo","bill_length_mm: 48.4<br />body_mass_g: 4625<br />species: Gentoo","bill_length_mm: 51.1<br />body_mass_g: 5250<br />species: Gentoo","bill_length_mm: 48.5<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 55.9<br />body_mass_g: 5600<br />species: Gentoo","bill_length_mm: 47.2<br />body_mass_g: 4975<br />species: Gentoo","bill_length_mm: 49.1<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 41.7<br />body_mass_g: 4700<br />species: Gentoo","bill_length_mm: 53.4<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 43.3<br />body_mass_g: 4575<br />species: Gentoo","bill_length_mm: 48.1<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 50.5<br />body_mass_g: 5000<br />species: Gentoo","bill_length_mm: 49.8<br />body_mass_g: 5950<br />species: Gentoo","bill_length_mm: 43.5<br />body_mass_g: 4650<br />species: Gentoo","bill_length_mm: 51.5<br />body_mass_g: 5500<br />species: Gentoo","bill_length_mm: 46.2<br />body_mass_g: 4375<br />species: Gentoo","bill_length_mm: 55.1<br />body_mass_g: 5850<br />species: Gentoo","bill_length_mm: 48.8<br />body_mass_g: 6000<br />species: Gentoo","bill_length_mm: 47.2<br />body_mass_g: 4925<br />species: Gentoo","bill_length_mm: 46.8<br />body_mass_g: 4850<br />species: Gentoo","bill_length_mm: 50.4<br />body_mass_g: 5750<br />species: Gentoo","bill_length_mm: 45.2<br />body_mass_g: 5200<br />species: Gentoo","bill_length_mm: 49.9<br />body_mass_g: 5400<br />species: Gentoo"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(97,156,255,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(97,156,255,1)"}},"hoveron":"points","name":"Gentoo","legendgroup":"Gentoo","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":45.371712617767763,"r":7.3059360730593621,"b":41.791803941968681,"l":48.949771689497723},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"title":{"text":"Penguin bill length and weight","font":{"color":"rgba(0,0,0,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[30.725000000000001,60.975000000000001],"tickmode":"array","ticktext":["40","50","60"],"tickvals":[40,50,60],"categoryorder":"array","categoryarray":["40","50","60"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.6529680365296811,"tickwidth":0.66417600664176002,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"bill_length_mm","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[2520,6480],"tickmode":"array","ticktext":["3000","4000","5000","6000"],"tickvals":[3000,4000,5000,6000],"categoryorder":"array","categoryarray":["3000","4000","5000","6000"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.6529680365296811,"tickwidth":0.66417600664176002,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"body_mass_g","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.8897637795275593,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"title":{"text":"species","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4da4243a1b28":{"x":{},"y":{},"colour":{},"type":"scatter"},"4da475c64022":{"x":{},"y":{}}},"cur_data":"4da4243a1b28","visdat":{"4da4243a1b28":["function (y) ","x"],"4da475c64022":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>&nbsp;</p>
<p>That’s just a limitation with ggplot and plotly. If you want a perfect translation, you’ll need to hack into the guts of the translated Javascript and HTML and edit it manually to add those things.</p>
<p>Alternatively, you can check out other interactive plot packages. <a href="https://davidgohel.github.io/ggiraph/">{ggiraph}</a> makes really great and customizable interactive plots (and it supports things like subtitles and captions and labels and other annotations ggplotly can’t), but with slightly different syntax:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggiraph)</span>
<span id="cb19-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'ggiraph' was built under R version 4.2.3</span></span>
<span id="cb19-3"></span>
<span id="cb19-4">plot_thing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> penguins) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point_interactive</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species,</span>
<span id="cb19-6">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tooltip =</span> species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_id =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chonky birds"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Penguin bill length and weight"</span>,</span>
<span id="cb19-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neato"</span>, </span>
<span id="cb19-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a caption"</span>)</span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">girafe</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ggobj =</span> plot_thing)</span></code></pre></div>
<div class="cell-output-display">
<div class="girafe html-widget html-fill-item" id="htmlwidget-a34ea1cf328ea19acddb" style="width:90%;height:355.968px;"></div>
<script type="application/json" data-for="htmlwidget-a34ea1cf328ea19acddb">{"x":{"html":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='img' id='svg_49f6ca36_41ba_4a17_a372_719146742733' viewBox='0 0 432 266.98'>\n <defs id='svg_49f6ca36_41ba_4a17_a372_719146742733_defs'>\n  <clipPath id='svg_49f6ca36_41ba_4a17_a372_719146742733_c1'>\n   <rect x='0' y='0' width='432' height='266.98'/>\n  <\/clipPath>\n  <clipPath id='svg_49f6ca36_41ba_4a17_a372_719146742733_c2'>\n   <rect x='42.93' y='38.85' width='301.25' height='183'/>\n  <\/clipPath>\n <\/defs>\n <g id='svg_49f6ca36_41ba_4a17_a372_719146742733_rootg' class='ggiraph-svg-rootg'>\n  <g clip-path='url(#svg_49f6ca36_41ba_4a17_a372_719146742733_c1)'>\n   <rect x='0' y='0' width='432' height='266.98' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\n   <rect x='0' y='-0' width='432' height='266.98' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='round'/>\n  <\/g>\n  <g clip-path='url(#svg_49f6ca36_41ba_4a17_a372_719146742733_c2)'>\n   <rect x='42.93' y='38.85' width='301.25' height='183' fill='#EBEBEB' fill-opacity='1' stroke='none'/>\n   <polyline points='42.93,176.56 344.18,176.56' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,130.35 344.18,130.35' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,84.14 344.18,84.14' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='85.50,221.85 85.50,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='185.09,221.85 185.09,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='284.68,221.85 284.68,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,199.67 344.18,199.67' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,153.46 344.18,153.46' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,107.25 344.18,107.25' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='42.93,61.03 344.18,61.03' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='135.30,221.85 135.30,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='234.88,221.85 234.88,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='334.47,221.85 334.47,38.85' fill='none' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e1' cx='126.33' cy='165.01' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e2' cx='130.32' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e3' cx='138.28' cy='188.12' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e4' cx='102.43' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e5' cx='128.33' cy='169.63' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e6' cx='124.34' cy='170.79' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e7' cx='127.33' cy='122.26' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e8' cx='146.25' cy='190.43' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e9' cx='121.35' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e10' cx='81.52' cy='134.97' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e11' cx='101.44' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e12' cx='122.35' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e13' cx='160.19' cy='130.35' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e14' cx='79.53' cy='184.65' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e15' cx='195.05' cy='144.21' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e16' cx='113.39' cy='181.18' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e17' cx='112.39' cy='171.94' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e18' cx='94.47' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e19' cx='117.37' cy='155.77' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e20' cx='123.35' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e21' cx='88.49' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e22' cx='141.27' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e23' cx='140.28' cy='190.43' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e24' cx='114.38' cy='192.74' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e25' cx='140.28' cy='155.77' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e26' cx='130.32' cy='188.12' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e27' cx='107.41' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e28' cx='130.32' cy='185.8' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e29' cx='144.26' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e30' cx='99.45' cy='184.65' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e31' cx='127.33' cy='146.52' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e32' cx='123.35' cy='155.77' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e33' cx='157.21' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e34' cx='111.4' cy='185.8' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e35' cx='133.3' cy='123.42' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e36' cx='100.44' cy='192.74' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e37' cx='143.26' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e38' cx='95.46' cy='195.05' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e39' cx='176.13' cy='134.97' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e40' cx='105.42' cy='199.67' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e41' cx='131.31' cy='125.73' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e42' cx='146.25' cy='180.03' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e43' cx='95.46' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e44' cx='158.2' cy='146.52' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e45' cx='131.31' cy='176.56' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e46' cx='136.29' cy='139.59' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e47' cx='85.5' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e48' cx='155.21' cy='151.15' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e49' cx='80.52' cy='204.29' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e50' cx='149.24' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e51' cx='125.34' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e52' cx='141.27' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e53' cx='100.44' cy='206.6' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e54' cx='111.4' cy='165.01' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e55' cx='92.47' cy='192.74' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e56' cx='148.24' cy='134.97' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e57' cx='111.4' cy='171.94' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e58' cx='146.25' cy='151.15' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e59' cx='99.45' cy='206.6' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e60' cx='151.23' cy='155.77' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e61' cx='90.48' cy='183.49' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e62' cx='146.25' cy='148.84' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e63' cx='94.47' cy='197.36' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e64' cx='153.22' cy='132.66' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e65' cx='70.57' cy='171.94' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e66' cx='132.31' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e67' cx='131.31' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e68' cx='193.06' cy='146.52' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e69' cx='90.48' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e70' cx='163.18' cy='141.9' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e71' cx='144.26' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e72' cx='107.41' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e73' cx='97.45' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e74' cx='156.21' cy='153.46' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e75' cx='81.52' cy='190.43' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e76' cx='164.18' cy='121.11' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e77' cx='102.43' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e78' cx='86.5' cy='144.21' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e79' cx='108.41' cy='183.49' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e80' cx='148.24' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e81' cx='98.45' cy='162.7' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e82' cx='104.42' cy='176.56' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e83' cx='118.37' cy='155.77' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e84' cx='124.34' cy='171.94' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e85' cx='92.47' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e86' cx='146.25' cy='139.59' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e87' cx='75.54' cy='181.18' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e88' cx='131.31' cy='132.66' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e89' cx='97.45' cy='185.8' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e90' cx='143.26' cy='139.59' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e91' cx='116.38' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e92' cx='138.28' cy='137.28' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e93' cx='66.58' cy='204.29' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e94' cx='167.16' cy='148.84' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e95' cx='85.5' cy='166.16' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e96' cx='145.26' cy='119.95' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e97' cx='112.39' cy='196.2' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e98' cx='113.39' cy='141.9' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e99' cx='114.38' cy='203.13' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e100' cx='132.31' cy='174.25' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e101' cx='121.35' cy='165.01' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e102' cx='117.37' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e103' cx='116.38' cy='191.58' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e104' cx='167.16' cy='117.64' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e105' cx='116.38' cy='161.54' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e106' cx='191.07' cy='125.73' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e107' cx='132.31' cy='190.43' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e108' cx='157.21' cy='140.75' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e109' cx='131.31' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e110' cx='162.19' cy='149.99' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e111' cx='121.35' cy='204.29' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e112' cx='108.41' cy='163.85' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e113' cx='92.47' cy='183.49' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e114' cx='146.25' cy='184.65' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e115' cx='97.45' cy='192.74' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e116' cx='112.39' cy='176.56' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e117' cx='137.29' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e118' cx='149.24' cy='159.23' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e119' cx='87.49' cy='197.36' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e120' cx='141.27' cy='153.46' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e121' cx='123.35' cy='186.96' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e122' cx='150.23' cy='139.59' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e123' cx='125.34' cy='197.36' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e124' cx='176.13' cy='153.46' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e125' cx='120.36' cy='184.65' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e126' cx='166.17' cy='176.56' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e127' cx='103.43' cy='176.56' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e128' cx='110.4' cy='131.51' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e129' cx='116.38' cy='180.03' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e130' cx='146.25' cy='158.08' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e131' cx='91.48' cy='191.58' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e132' cx='137.29' cy='154.61' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e133' cx='105.42' cy='181.18' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e134' cx='132.31' cy='141.9' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e135' cx='137.29' cy='181.18' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e136' cx='141.27' cy='177.72' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e137' cx='56.62' cy='197.36' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e138' cx='142.27' cy='166.16' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e139' cx='108.41' cy='199.67' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e140' cx='125.34' cy='169.63' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e141' cx='127.33' cy='141.9' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e142' cx='101.44' cy='177.72' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e143' cx='95.46' cy='178.87' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e144' cx='113.39' cy='165.01' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e145' cx='95.46' cy='167.32' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e146' cx='150.23' cy='153.46' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Adelie' data-id='Adelie'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e147' cx='196.04' cy='130.35' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e148' cx='234.88' cy='74.9' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e149' cx='221.94' cy='132.66' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e150' cx='234.88' cy='74.9' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e151' cx='210.98' cy='88.76' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e152' cx='200.03' cy='128.04' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e153' cx='189.07' cy='116.49' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e154' cx='202.02' cy='98' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e155' cx='168.16' cy='134.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e156' cx='203.02' cy='100.31' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e157' cx='144.26' cy='123.42' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e158' cx='224.92' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e159' cx='190.07' cy='123.42' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e160' cx='218.95' cy='67.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e161' cx='193.06' cy='144.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e162' cx='227.91' cy='67.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e163' cx='155.21' cy='146.52' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e164' cx='226.92' cy='47.17' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e165' cx='197.04' cy='116.49' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e166' cx='221.94' cy='91.07' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e167' cx='236.88' cy='74.9' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e168' cx='186.09' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e169' cx='200.03' cy='134.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e170' cx='198.04' cy='104.93' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e171' cx='164.18' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e172' cx='196.04' cy='102.62' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e173' cx='212.97' cy='77.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e174' cx='216.96' cy='125.73' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e175' cx='234.88' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e176' cx='208' cy='95.69' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e177' cx='163.18' cy='121.11' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e178' cx='186.09' cy='104.93' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e179' cx='330.49' cy='58.72' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e180' cx='225.92' cy='100.31' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e181' cx='218.95' cy='88.76' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e182' cx='161.19' cy='109.56' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e183' cx='179.11' cy='95.69' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e184' cx='175.13' cy='137.28' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e185' cx='221.94' cy='91.07' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e186' cx='162.19' cy='155.77' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e187' cx='230.9' cy='74.9' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e188' cx='188.08' cy='139.59' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e189' cx='230.9' cy='118.8' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e190' cx='239.86' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e191' cx='171.15' cy='111.87' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e192' cx='190.07' cy='144.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e193' cx='239.86' cy='88.76' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e194' cx='184.09' cy='102.62' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e195' cx='187.08' cy='93.38' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e196' cx='201.02' cy='114.18' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e197' cx='219.95' cy='93.38' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e198' cx='186.09' cy='134.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e199' cx='235.88' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e200' cx='200.03' cy='111.87' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e201' cx='185.09' cy='104.93' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e202' cx='173.14' cy='139.59' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e203' cx='190.07' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e204' cx='167.16' cy='132.66' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e205' cx='238.87' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e206' cx='188.08' cy='144.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e207' cx='197.04' cy='93.38' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e208' cx='192.06' cy='134.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e209' cx='277.71' cy='77.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e210' cx='193.06' cy='121.11' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e211' cx='232.89' cy='74.9' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e212' cx='229.9' cy='70.28' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e213' cx='170.15' cy='121.11' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e214' cx='241.85' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e215' cx='211.98' cy='118.8' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e216' cx='199.03' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e217' cx='216.96' cy='102.62' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e218' cx='200.03' cy='98' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e219' cx='199.03' cy='121.11' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e220' cx='220.94' cy='70.28' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e221' cx='209.99' cy='125.73' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e222' cx='245.84' cy='61.03' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e223' cx='187.08' cy='118.8' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e224' cx='187.08' cy='63.34' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e225' cx='225.92' cy='124.57' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e226' cx='259.78' cy='86.45' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e227' cx='208.99' cy='119.95' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e228' cx='234.88' cy='91.07' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e229' cx='184.09' cy='118.8' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e230' cx='242.85' cy='79.52' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e231' cx='169.16' cy='125.73' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e232' cx='247.83' cy='93.38' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e233' cx='209.99' cy='113.02' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e234' cx='255.8' cy='81.83' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e235' cx='209.99' cy='109.56' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e236' cx='256.79' cy='88.76' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e237' cx='190.07' cy='118.8' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e238' cx='229.9' cy='77.21' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e239' cx='180.11' cy='114.18' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e240' cx='242.85' cy='98' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e241' cx='228.91' cy='110.71' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e242' cx='204.01' cy='113.02' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e243' cx='218.95' cy='124.57' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e244' cx='245.84' cy='95.69' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e245' cx='219.95' cy='114.18' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e246' cx='293.64' cy='79.52' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e247' cx='207' cy='108.4' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e248' cx='225.92' cy='84.14' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e249' cx='203.02' cy='84.14' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e250' cx='152.23' cy='121.11' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e251' cx='268.74' cy='84.14' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e252' cx='168.16' cy='126.89' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e253' cx='215.96' cy='84.14' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e254' cx='239.86' cy='107.25' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e255' cx='232.89' cy='63.34' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e256' cx='170.15' cy='123.42' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e257' cx='249.82' cy='84.14' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e258' cx='197.04' cy='136.13' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e259' cx='285.67' cy='67.97' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e260' cx='222.93' cy='61.03' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e261' cx='207' cy='110.71' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e262' cx='203.02' cy='114.18' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e263' cx='238.87' cy='72.59' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e264' cx='187.08' cy='98' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e265' cx='233.89' cy='88.76' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gentoo' data-id='Gentoo'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e266' cx='200.03' cy='176.56' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e267' cx='234.88' cy='158.08' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e268' cx='247.83' cy='169.63' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e269' cx='189.07' cy='175.41' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e270' cx='261.77' cy='166.16' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e271' cx='187.08' cy='155.77' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e272' cx='196.04' cy='188.12' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e273' cx='247.83' cy='165.01' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e274' cx='195.05' cy='146.52' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e275' cx='247.83' cy='167.32' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e276' cx='201.02' cy='162.7' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e277' cx='251.81' cy='163.85' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e278' cx='205.01' cy='167.32' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e279' cx='254.8' cy='151.15' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e280' cx='194.05' cy='173.1' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e281' cx='239.86' cy='151.15' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e282' cx='237.87' cy='185.8' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e283' cx='314.55' cy='167.32' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e284' cx='199.03' cy='178.87' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e285' cx='226.92' cy='134.97' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e286' cx='159.2' cy='171.94' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e287' cx='219.95' cy='181.18' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e288' cx='167.16' cy='204.29' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e289' cx='240.86' cy='162.7' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e290' cx='202.02' cy='185.8' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e291' cx='254.8' cy='146.52' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e292' cx='239.86' cy='181.18' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e293' cx='229.9' cy='162.7' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e294' cx='199.03' cy='167.32' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e295' cx='262.77' cy='128.04' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e296' cx='144.26' cy='190.43' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e297' cx='276.71' cy='139.59' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e298' cx='160.19' cy='183.49' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e299' cx='244.84' cy='148.84' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e300' cx='231.9' cy='171.94' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e301' cx='209.99' cy='158.08' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e302' cx='210.98' cy='160.39' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e303' cx='254.8' cy='116.49' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e304' cx='204.01' cy='213.53' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e305' cx='269.74' cy='130.35' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e306' cx='224.92' cy='155.77' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e307' cx='197.04' cy='169.63' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e308' cx='243.85' cy='174.25' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e309' cx='190.07' cy='176.56' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e310' cx='243.85' cy='168.48' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e311' cx='242.85' cy='132.66' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e312' cx='235.88' cy='181.18' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e313' cx='224.92' cy='139.59' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e314' cx='249.82' cy='188.12' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e315' cx='232.89' cy='168.48' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e316' cx='215.96' cy='184.65' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e317' cx='248.83' cy='155.77' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e318' cx='192.06' cy='171.94' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e319' cx='241.85' cy='151.15' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e320' cx='160.19' cy='183.49' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e321' cx='256.79' cy='178.87' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e322' cx='187.08' cy='188.12' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e323' cx='227.91' cy='151.15' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e324' cx='236.88' cy='162.7' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e325' cx='191.07' cy='175.41' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e326' cx='253.81' cy='155.77' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e327' cx='203.02' cy='169.63' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e328' cx='192.06' cy='169.63' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e329' cx='292.64' cy='153.46' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e330' cx='170.15' cy='181.18' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e331' cx='230.9' cy='163.85' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e332' cx='242.85' cy='148.84' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <circle id='svg_49f6ca36_41ba_4a17_a372_719146742733_e333' cx='236.88' cy='163.85' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Chinstrap' data-id='Chinstrap'/>\n   <polygon points='202.48,91.69 267.28,91.69 267.20,91.69 267.54,91.67 267.88,91.60 268.21,91.48 268.51,91.31 268.78,91.09 269.01,90.83 269.20,90.53 269.33,90.21 269.42,89.88 269.44,89.53 269.44,89.53 269.44,78.75 269.44,78.75 269.42,78.40 269.33,78.07 269.20,77.75 269.01,77.45 268.78,77.19 268.51,76.97 268.21,76.80 267.88,76.68 267.54,76.61 267.28,76.59 202.48,76.59 202.74,76.61 202.40,76.59 202.05,76.63 201.72,76.73 201.40,76.88 201.12,77.08 200.87,77.32 200.66,77.60 200.50,77.90 200.39,78.23 200.33,78.58 200.32,78.75 200.32,89.53 200.33,89.35 200.33,89.70 200.39,90.05 200.50,90.38 200.66,90.68 200.87,90.96 201.12,91.20 201.40,91.40 201.72,91.55 202.05,91.64 202.40,91.69' fill='#FFFFFF' fill-opacity='1' stroke='#000000' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='round'/>\n   <text x='203.92' y='88.09' font-size='8.28pt' font-family='Arial'>chonky birds<\/text>\n  <\/g>\n  <g clip-path='url(#svg_49f6ca36_41ba_4a17_a372_719146742733_c1)'>\n   <text x='18.41' y='202.82' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>3000<\/text>\n   <text x='18.41' y='156.61' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>4000<\/text>\n   <text x='18.41' y='110.4' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>5000<\/text>\n   <text x='18.41' y='64.18' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>6000<\/text>\n   <polyline points='40.19,199.67 42.93,199.67' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='40.19,153.46 42.93,153.46' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='40.19,107.25 42.93,107.25' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='40.19,61.03 42.93,61.03' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='135.30,224.59 135.30,221.85' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='234.88,224.59 234.88,221.85' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <polyline points='334.47,224.59 334.47,221.85' fill='none' stroke='#333333' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\n   <text x='130.4' y='233.08' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>40<\/text>\n   <text x='229.99' y='233.08' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>50<\/text>\n   <text x='329.57' y='233.08' font-size='6.6pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>60<\/text>\n   <text x='156.56' y='245.55' font-size='8.25pt' font-family='Arial'>bill_length_mm<\/text>\n   <text transform='translate(13.36,164.60) rotate(-90.00)' font-size='8.25pt' font-family='Arial'>body_mass_g<\/text>\n   <rect x='355.14' y='91.11' width='71.38' height='78.47' fill='#FFFFFF' fill-opacity='1' stroke='none'/>\n   <text x='360.62' y='105.63' font-size='8.25pt' font-family='Arial'>species<\/text>\n   <rect x='360.62' y='112.27' width='17.28' height='17.28' fill='#F2F2F2' fill-opacity='1' stroke='none'/>\n   <circle cx='369.26' cy='120.91' r='1.47pt' fill='#F8766D' fill-opacity='1' stroke='#F8766D' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round'/>\n   <rect x='360.62' y='129.55' width='17.28' height='17.28' fill='#F2F2F2' fill-opacity='1' stroke='none'/>\n   <circle cx='369.26' cy='138.19' r='1.47pt' fill='#00BA38' fill-opacity='1' stroke='#00BA38' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round'/>\n   <rect x='360.62' y='146.83' width='17.28' height='17.28' fill='#F2F2F2' fill-opacity='1' stroke='none'/>\n   <circle cx='369.26' cy='155.47' r='1.47pt' fill='#619CFF' fill-opacity='1' stroke='#619CFF' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round'/>\n   <text x='383.38' y='124.06' font-size='6.6pt' font-family='Arial'>Adelie<\/text>\n   <text x='383.38' y='141.34' font-size='6.6pt' font-family='Arial'>Chinstrap<\/text>\n   <text x='383.38' y='158.62' font-size='6.6pt' font-family='Arial'>Gentoo<\/text>\n   <text x='42.93' y='31.05' font-size='8.25pt' font-family='Arial'>Neato<\/text>\n   <text x='42.93' y='14.93' font-size='9.9pt' font-family='Arial'>Penguin bill length and weight<\/text>\n   <text x='280.86' y='259.65' font-size='6.6pt' font-family='Arial'>Here's a caption<\/text>\n  <\/g>\n <\/g>\n<\/svg>","js":null,"uid":"svg_49f6ca36_41ba_4a17_a372_719146742733","ratio":1.618122977346278,"settings":{"tooltip":{"css":".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}","placement":"doc","opacity":0.9,"offx":10,"offy":10,"use_cursor_pos":true,"use_fill":false,"use_stroke":false,"delay_over":200,"delay_out":500},"hover":{"css":".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\nimage.hover_data_SVGID_ { stroke:orange; }","reactive":true,"nearest_distance":null},"hover_inv":{"css":""},"hover_key":{"css":".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\nimage.hover_key_SVGID_ { stroke:orange; }","reactive":true},"hover_theme":{"css":".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\nimage.hover_theme_SVGID_ { stroke:orange; }","reactive":true},"select":{"css":".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\ntext.select_data_SVGID_ { stroke:none;fill:red; }\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\nimage.select_data_SVGID_ { stroke:red; }","type":"multiple","only_shiny":true,"selected":[]},"select_inv":{"css":""},"select_key":{"css":".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\ntext.select_key_SVGID_ { stroke:none;fill:red; }\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\nimage.select_key_SVGID_ { stroke:red; }","type":"single","only_shiny":true,"selected":[]},"select_theme":{"css":".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\nimage.select_theme_SVGID_ { stroke:red; }","type":"single","only_shiny":true,"selected":[]},"zoom":{"min":1,"max":1,"duration":300},"toolbar":{"position":"topright","pngname":"diagram","tooltips":null,"hidden":[],"delay_over":200,"delay_out":500},"sizing":{"rescale":true,"width":1}}},"evals":[],"jsHooks":[]}</script>
</div>
</div>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-11-06_faqs-weeks-08-09-10.html</guid>
  <pubDate>Tue, 07 Nov 2023 03:54:00 GMT</pubDate>
</item>
<item>
  <title>Slow down, simplify and do small things</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Now that we’re at the middle of the course, your plots and data manipulation are becoming more detailed and complex, which is good! Remember exercise 1, so long ago? All you had to do was this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>That’s all! Literally 3 lines of code.</p>
<p>But now with your mini projects, and (in the future) interactivity, maps, text analysis, and your final project, your code is getting longer and more complex. You’ll have lots and lots of ggplot layers and functions chained together with <code>%&gt;%</code>. You’ve learned so much!</p>
<p>It is <em>incredibly</em> tempting to write out all the code you want in one go and then try to run a complete chunk and hope that you got it all correct. And then when it’s not correct, you try to change a bunch of things, hoping that they’ll fix it and then they don’t and you stay stuck and frustrated. You’ll have a chunk of code that was 20–30 lines with an error somewhere and won’t be able to find what went wrong or what was broken.</p>
<p><strong>Don’t do this!</strong></p>
<p>Here’s my best piece of advice for making more complex plots and for figuring out how to fix errors:</p>
<blockquote class="blockquote">
<p><strong>Slow down, simplify, and do small things</strong></p>
</blockquote>
<p>Run your code incrementally (see <a href="../news/2023-10-12_messy-broken-code-tips.html">this past post here</a> for some video examples about how to run stuff incrementally.). Start with a super basic plot and run it, then add a layer for labels and run it, then add a layer to change the fill gradient and run it, then add a layer to change the theme and run it, and so on. It feels slow, but it helps you understand what’s going on and helps you fix things when they break.</p>
<p>This is not just my advice. <a href="https://jvns.ca/">Julia Evans’s</a> fantastic <a href="https://wizardzines.com/zines/debugging-guide/"><em>The Pocket Guide to Debugging</em></a> has the same piece of advice:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/pocket-debugging.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Page 39 from Julia Evans’s <em>The Pocket Guide to Debugging</em></figcaption>
</figure>
</div>
<p>When something doesn’t work as expected, change just one thing at a time. Or even better, simplify it and then change one thing at a time.</p>
<p>Here’s a quick common example. Let’s say you have a plot like this and you want to use the <a href="https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html#the-color-scales">plasma viridis scale</a> for the colors of the points. It looks like it should work, but the colors aren’t right! Those are just the default colors!</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Displacement"</span>,</span>
<span id="cb2-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Highway MPG"</span>,</span>
<span id="cb2-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/example-broken-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Here’s the process I would go through to figure out what’s wrong and fix it:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset nav-pills">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">1. Strip it down to a basic plot</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">2. Add simplified broken part</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">3. Figure out broken part</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">4. Add some parts back in</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">5. Add the rest back in</a></li></ul>
<div class="tab-content nav-pills">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Right now there are a bunch of other layers (themes, labels, etc.). Maybe one of those is messing stuff up? We want to make sure the underlying plot works fine, so we’ll strip down the plot to its simplest form—just the geoms</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/step-1-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Good, that works. Next we want to change the colors so that they use the viridis plasma palette. We used <code>scale_fill_viridis_d()</code> originally, but we also included a bunch of extra options (<code>option = "plamsa", end = 0.9</code>). Before using those, let’s simplify it down and just use the default settings:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis_d</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/step-2-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<p>The colors still didn’t change. But now we have a simplified working example of our broken code and we can examine it without worrying about the labels, themes, extra options, and all those other things. This should make it easier to see what’s going on.</p>
<p>The issue here is that we used the color aesthetic (<code>color = drv</code>) and we’re trying to change it with <code>scale_fill_*()</code>. That lets us control filled things (i.e.&nbsp;<code>fill = drv</code>). Since we’re working with the color aesthetic, we need to use <code>scale_color_*()</code>. Let’s try <code>scale_color_viridis_d()</code> and see if that fixes it:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/step-3-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<p>That fixed it! It’s still not exactly what we wanted yet—we want the plasma palette and <code>end = 0.9</code>—but it’s working now and we can add that back in:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/step-4-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<p>Cool, the palette changed and the other settings worked. The problem seems to be fixed now, so we can re-add all those other layers from the original plot. It’s fixed!</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Displacement"</span>,</span>
<span id="cb7-4">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Highway MPG"</span>,</span>
<span id="cb7-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things_files/figure-html/step-5-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>



 ]]></description>
  <category>advice</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_slow-down-do-small-things.html</guid>
  <pubDate>Thu, 12 Oct 2023 20:37:00 GMT</pubDate>
</item>
<item>
  <title>Tips for debugging and cleaning broken code</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_messy-broken-code-tips.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Lots of the code you run in this class is actually a big long chain of functions or plot layers, like {dplyr} functions that are all connected with <code>%&gt;%</code>s or {ggplot2} functions that are all connected with <code>+</code>s.</p>
<p>Inevitably, something will go wrong at some point in the chain—often a misspelled word or a misplaced comma or a misplaced parenthesis. Tracking down (or debugging) the issue can be often be tricky!</p>
<p>For example, <strong>four (4)</strong> things are wrong in this code. See if you can spot them without running it—good luck!</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">gapminder_gdp_thing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_total =</span> gdpPercap <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pop),</span>
<span id="cb1-3">     is_africa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Africa"</span>, </span>
<span id="cb1-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is Africa"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Isn't Africa"</span>)<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">))</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  </span>
<span id="cb1-5">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_above_continent_median =</span> </span>
<span id="cb1-7">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(gdp_total <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(gdp_total)), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(gdp_total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(country))</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Click here for the answers
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-1-1">gapminder_gdp_thing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-1-2" class="code-annotation-target">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_total =</span> gdpPercap <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pop),</span>
<span id="annotated-cell-1-3">     is_africa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Africa"</span>, </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-1-4" class="code-annotation-target"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is Africa"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Isn't Africa"</span>)<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">))</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="annotated-cell-1-5">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="annotated-cell-1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_above_continent_median =</span> </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-1-7" class="code-annotation-target">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(gdp_total <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(gdp_total)), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="annotated-cell-1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(gdp_total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-1-9" class="code-annotation-target">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(country))</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-1" data-target-annotation="1">1</dt>
<dd>
<span data-code-annotation="1" data-code-cell="annotated-cell-1" data-code-lines="2">There’s a closing parenthesis after <code>pop)</code> that shouldn’t be there—it ends the <code>mutate()</code> too early and <code>is_africa = BLAH</code> ends up not being inside <code>mutate()</code></span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="2">2</dt>
<dd>
<span data-code-annotation="2" data-code-cell="annotated-cell-1" data-code-lines="4">There’s an extra parenthesis at the end of <code>"Isn't Africa")))</code></span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="3">3</dt>
<dd>
<span data-code-annotation="3" data-code-cell="annotated-cell-1" data-code-lines="7">There’s an extra parenthesis after <code>median(gdp_total))</code></span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="4">4</dt>
<dd>
<span data-code-annotation="4" data-code-cell="annotated-cell-1" data-code-lines="9">There’s an <code>=</code> instead of a comma in between <code>fct_inorder(continent)</code> and <code>country</code></span>
</dd>
</dl>
</div>
</div>
<p>Here’s what the fixed, reindented version looks like:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-2-1">gapminder_gdp_thing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="annotated-cell-2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="annotated-cell-2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-2-4" class="code-annotation-target">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_total =</span> gdpPercap <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pop,</span>
<span id="annotated-cell-2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">is_africa =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="annotated-cell-2-6">      continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Africa"</span>, </span>
<span id="annotated-cell-2-7">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is Africa"</span>, </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-2-8" class="code-annotation-target">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Isn't Africa"</span>)</span>
<span id="annotated-cell-2-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="annotated-cell-2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="annotated-cell-2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="annotated-cell-2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gdp_above_continent_median =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="annotated-cell-2-13">      gdp_total <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(gdp_total), </span>
<span id="annotated-cell-2-14">      <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-2-15" class="code-annotation-target">      <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="annotated-cell-2-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="annotated-cell-2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="annotated-cell-2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(gdp_total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="annotated-cell-2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent), </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-2-20" class="code-annotation-target">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(country))</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-annotation="1" data-code-cell="annotated-cell-2" data-code-lines="4">Fixed!</span>
</dd>
<dt data-target-cell="annotated-cell-2" data-target-annotation="2">2</dt>
<dd>
<span data-code-annotation="2" data-code-cell="annotated-cell-2" data-code-lines="8,9">Fixed!</span>
</dd>
<dt data-target-cell="annotated-cell-2" data-target-annotation="3">3</dt>
<dd>
<span data-code-annotation="3" data-code-cell="annotated-cell-2" data-code-lines="15,16">Fixed!</span>
</dd>
<dt data-target-cell="annotated-cell-2" data-target-annotation="4">4</dt>
<dd>
<span data-code-annotation="4" data-code-cell="annotated-cell-2" data-code-lines="20">Fixed!</span>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
<p>It’s nearly impossible to figure out what’s wrong here without running it. And even if you do run it, you’ll get somewhat cryptic errors.</p>
<p>I have two important techniques and tips that fix 90% of my debugging problems:</p>
<ol type="1">
<li>Reformat the code by reindenting it and breaking it into multiple lines</li>
<li>Run the code incrementally, line by line</li>
</ol>
<p>Each of these techniques help track down issues in the code above and are good skills to know in general. I’ll explain each approach and give a little video demonstration below.</p>
<section id="reformat-the-code" class="level3">
<h3 class="anchored" data-anchor-id="reformat-the-code">Reformat the code</h3>
<p>In the <a href="../resource/style.html#pipes-and-ggplot-layers">R style suggestions in the Resources section</a>, it explains that each layer of a <code>%&gt;%</code>-chained pipeline or ggplot plot should be on separate lines, with the <code>%&gt;%</code> or the <code>+</code> at the end of the line, indented with two spaces.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> blah, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> thing, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> thing2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
</div>
<p>Additionally, it’s often a good idea to add lines in between the arguments inside functions and line them up within the <code>()</code>s of the function.</p>
<p>This makes it so you can clearly see each step of the pipeline or plot, and you can clearly see each of the arguments inside each function.</p>
<p>People tend to take one of two approaches to argument alignment—aligning argument names at the same level as the opening <code>(</code> of the function like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">some_object <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_function</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">another_function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-4">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb3-5">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">some_function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thing1 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, </span>
<span id="cb3-6">                                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thing2 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yet_another_function</span>()</span></code></pre></div>
</div>
<p>…or aligning argument names two spaces to the right of where the argument starts, like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">some_object <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a_function</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">another_function</span>(</span>
<span id="cb4-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb4-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">argument =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">some_function</span>(</span>
<span id="cb4-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thing1 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, </span>
<span id="cb4-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thing2 =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span></span>
<span id="cb4-9">    )</span>
<span id="cb4-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yet_another_function</span>()</span></code></pre></div>
</div>
<p>RStudio can actually reindent code for you automatically, and it can use either of these approaches. If you want the first approach (where argument names align after the opening <code>(</code>), check “Tools &gt; Global Options &gt; Code &gt; Vertically align arguments in auto-indent”; if you want the second approach (where argument names are all a little indented from where the argument starts), make sure that option is unchecked.</p>
<p>To have RStudio reindent code for you, select the code you want to be reindented and go to “Code &gt; Reindent lines”, or use the keyboard shortcut <kbd>⌘I</kbd> on macOS or <kbd>ctrl + I</kbd> on Windows.</p>
<p>Here’s what that looks like. Notice how distorted the indentation is initially—RStudio is smart enough to fix it all:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">With keyboard shortcut</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">With menu</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">Without vertical argument alignment</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/reindent-keyboard.mp4" type="video/mp4">
</video>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/reindent-menu.mp4" type="video/mp4">
</video>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/reindent-no-vertical-alignment.mp4" type="video/mp4">
</video>
</div>
</div>
</div>
</div>
<p>Not only does reindentation make it easier to read your code, it can reveal issues with the code. Remember that code from the beginning of this post with four things wrong? If we reindent it, the line that starts with <code>is_africa = ifelse(</code> is indented funny—it gets put at the start of the line, when really it should be at the same level as <code>gdp_total</code>, since those are both arguments for the <code>mutate()</code> function. If you look at the line above, you’ll see that there’s a <code>)</code> after <code>gdpPercap * pop</code>, which closes <code>mutate()</code> prematurely, so <code>is_africa</code> isn’t actually inside <code>mutate()</code>. If we get rid of the <code>)</code> at the end of <code>pop</code> and reindent again, <code>is_africa</code> shows up in the right place.</p>
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/reindent-gapminder.mp4" type="video/mp4">
</video>
</div>
<p>&nbsp;</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Extra strength formatting
</div>
</div>
<div class="callout-body-container callout-body">
<p>Reindenting your code only shifts things around horizontally. If you want more powerful code reformatting, try using “Code &gt; Reformat Code” (or use <kbd>⌘⇧A</kbd> on macOS or <kbd>ctrl + shift + A</kbd> on Windows). It’s a more aggressive form of reformatting that will add extra line breaks and other things to make the code more readable:</p>
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/code-reformat.mp4" type="video/mp4">
</video>
</div>
<p>&nbsp;</p>
<p>It doesn’t fix everything—there should be a line break after each <code>%&gt;%</code> in that example ↑ so you’d need to add your own line break before <code>filter(year &gt; 1990)</code> and <code>arrange(desc(gdp_total))</code>, but it works well.</p>
</div>
</div>
<p>I’d recommend trying to keep things indented consistently as you write your code, and periodically reindenting stuff just to make sure everything is nice and aligned. Ultimately R doesn’t care how your code is indented (other languages do, like Python, where one errant space can mess up everything), but humans do care and nicer indentation will help others (and future you!).</p>
</section>
<section id="run-the-code-incrementally" class="level3">
<h3 class="anchored" data-anchor-id="run-the-code-incrementally">Run the code incrementally</h3>
<p>Your code is often a series of functions or layers connected with <code>%&gt;%</code> or <code>+</code>. If something goes wrong at any step in the chain of functions, your code won’t work. When that happens, the best strategy for figuring out what went wrong is to <em>run the code incrementally</em>. Just run a few layers of it at a time and then check to see how it looks. Run the first two lines, look at the results, make sure it worked, the run the first three lines, look at the results, make sure it worked, and so on.</p>
<p>This is also a good approach for writing your code initially. That big gapminder-based plot at the beginning of this post? I didn’t write that all at once. I started with the initialy <code>ggplot() + geom_point()</code>, ran it, then added another layer or two, ran it with those, then added some more layers or changed some settings inside existing layers, then ran it with those, and so on until the whole thing was built.</p>
<p>There are a couple ways to do this. One way is to select just the code you want to run (like from the beginning of <code>ggplot()</code> to <em>right before</em> a <code>+</code> on some layer), then press <kbd>⌘ + return</kbd> on macOS or <kbd>ctrl + enter</kbd> on Windows to run just that selection. If it worked as expected, select from the beginning again (i.e.&nbsp;at <code>ggplot()</code>) and go to <em>right before</em> a <code>+</code> on some other layer and run that selection:</p>
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/line-by-line-select.mp4" type="video/mp4">
</video>
</div>
<p>&nbsp;</p>
<p>If you don’t want to keep using your mouse and want to keep your hands at your keyboard, you can add a <code>#</code> right before a <code>+</code> or <code>%&gt;%</code> to comment it out. That essentially breaks the chain of functions at that point, so when you type <kbd>⌘ + return</kbd> or <kbd>ctrl + enter</kbd>, R only runs the code up to that point. Then you can remove the <code>#</code>, put it before another <code>+</code> or <code>%&gt;%</code>, and run it again.</p>
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/line-by-line-comments.mp4" type="video/mp4">
</video>
</div>
<p>&nbsp;</p>
<p>Here’s what my typical process for dealing with weirdly indented, broken code looks like. I try to run the whole thing initially, then when it breaks, I reindent it to see if anything is obvious from that. Then I start running it incrementally and check the results of each step to make sure it works up to that point. I do that over and over until the whole pipeline works.</p>
<div class="ratio ratio-16x9">
<video controls="" width="100%">
  <source src="video/full-debug-line-by-line.mp4" type="video/mp4">
</video>
</div>


</section>

 ]]></description>
  <category>advice</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-12_messy-broken-code-tips.html</guid>
  <pubDate>Thu, 12 Oct 2023 20:30:00 GMT</pubDate>
</item>
<item>
  <title>Week 7 tips and FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>I just finished grading all your exercises from week 7 and am happy with how you’ve been doing! I have a few quick tips and tricks and suggestions here based on lots of the feedback I gave. Enjoy!</p>
<section id="i-tried-to-knit-my-document-and-got-an-error-about-duplicate-chunk-labels.-why" class="level3">
<h3 class="anchored" data-anchor-id="i-tried-to-knit-my-document-and-got-an-error-about-duplicate-chunk-labels.-why">I tried to knit my document and got an error about duplicate chunk labels. Why?</h3>
<p>You can (<a href="../resource/rmarkdown.html#chunk-names">and should!</a>) name your R code chunks—<a href="../resource/rmarkdown.html#chunk-names">see here for more about how and why</a>. All chunk names must be unique, though.</p>
<p>Often you’ll copy and paste a chunk from earlier in your document to later, like to make a second plot based on the first. That’s fine—just make sure that you change the chunk name.</p>
<p>If there are chunks with repeated names, R will yell at you:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/knitr-duplicate-chunks.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Duplicated chunk names</figcaption>
</figure>
</div>
<p>To fix it, change the name of one of the duplicated names to something unique:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/knitr-different-names.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Unique chunk names</figcaption>
</figure>
</div>
</section>
<section id="i-tried-calculating-something-with-sum-or-cor-and-r-gave-me-na-instead-of-a-number.-why" class="level3">
<h3 class="anchored" data-anchor-id="i-tried-calculating-something-with-sum-or-cor-and-r-gave-me-na-instead-of-a-number.-why">I tried calculating something with <code>sum()</code> or <code>cor()</code> and R gave me NA instead of a number. Why?</h3>
<p>This nearly always happens because of missing values. Let’s make a quick little dataset to illustrate what’s going on (and how to fix it):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">example <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-7">)</span>
<span id="cb1-8"></span>
<span id="cb1-9">example</span>
<span id="cb1-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 5 × 3</span></span>
<span id="cb1-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##       x     y     z</span></span>
<span id="cb1-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span></span>
<span id="cb1-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1     1     6     2</span></span>
<span id="cb1-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2     2     7     6</span></span>
<span id="cb1-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3     3    NA     5</span></span>
<span id="cb1-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4     4     9     7</span></span>
<span id="cb1-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5     5    10     3</span></span></code></pre></div>
</div>
<p>The <code>y</code> column has a missing value (<code>NA</code>), which will mess up any math we do.</p>
<p>Without running any code, what’s the average of the <code>x</code> column? We can find that with math (add all the numbers up and divide by how many numbers there are):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%20+%202%20+%203%20+%204%20+%205%7D%7B5%7D%20=%203%0A"></p>
<p>Neat. We can confirm with R:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With dplyr</span></span>
<span id="cb2-2">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x))</span>
<span id="cb2-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 1 × 1</span></span>
<span id="cb2-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##     avg</span></span>
<span id="cb2-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;dbl&gt;</span></span>
<span id="cb2-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1     3</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With base R</span></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(example<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x)</span>
<span id="cb2-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [1] 3</span></span></code></pre></div>
</div>
<p>What’s the average of the <code>y</code> column? Math time:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B6%20+%207%20+%20%5Ctext%7B?%7D%20+%209%20+%2010%7D%7B5%7D%20=%20%5Ctext%7BWho%20even%20knows%7D%0A"></p>
<p>We have no way of knowing what the average is because of that missing value.</p>
<p>If we try it with R, it gives us NA instead of a number:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y))</span>
<span id="cb3-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 1 × 1</span></span>
<span id="cb3-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##     avg</span></span>
<span id="cb3-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;dbl&gt;</span></span>
<span id="cb3-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1    NA</span></span></code></pre></div>
</div>
<p>To fix this, we can tell R to remove all the missing values from the column before calculating the average so that it does this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B6%20+%207%20+%209%20+%2010%7D%7B4%7D%20=%208%0A"></p>
<p>Include the argument <code>na.rm = TRUE</code> to do that:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb4-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 1 × 1</span></span>
<span id="cb4-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##     avg</span></span>
<span id="cb4-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;dbl&gt;</span></span>
<span id="cb4-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1     8</span></span></code></pre></div>
</div>
<p>This works for lots of R’s calculating functions, like <code>sum()</code>, <code>min()</code>, <code>max()</code>, <code>sd()</code>, <code>median()</code>, <code>mean()</code>, and so on:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">std_dev =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-9">  )</span>
<span id="cb5-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 1 × 6</span></span>
<span id="cb5-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   total   avg median   min   max std_dev</span></span>
<span id="cb5-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;</span></span>
<span id="cb5-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1    32     8      8     6    10    1.83</span></span></code></pre></div>
</div>
<p>This works a little differently with <code>cor()</code> because you’re working with multiple columns instead of just one. If there are any missing values in any of the columns you’re correlating, you’ll get NA for the columns that use it. Here, we have a correlation between <code>x</code> and <code>z</code> because there are no missing values in either of those, but we get NA for the correlation between <code>x</code> and <code>y</code> and between <code>z</code> and <code>y</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>()</span>
<span id="cb6-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##           x  y         z</span></span>
<span id="cb6-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## x 1.0000000 NA 0.2287479</span></span>
<span id="cb6-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## y        NA  1        NA</span></span>
<span id="cb6-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## z 0.2287479 NA 1.0000000</span></span></code></pre></div>
</div>
<p>Adding <code>na.rm</code> to <code>cor()</code> doesn’t work because <code>cor()</code> doesn’t actually have an argument for <code>na.rm</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Error in cor(., na.rm = TRUE): unused argument (na.rm = TRUE)</span></span></code></pre></div>
</div>
<p>Instead, if you look at the documentation for <code>cor()</code> (run <code>?cor</code> in your R console or search for it in the Help panel in RStudio), you’ll see an argument named <code>use</code> instead. By default it will use all the rows in the data (<code>use = "everything"</code>), but we can change it to <code>use = "complete.obs"</code>. This will remove all rows where something is missing before calculating the correlation:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete.obs"</span>)</span>
<span id="cb8-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##           x         y         z</span></span>
<span id="cb8-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## x 1.0000000 1.0000000 0.2300895</span></span>
<span id="cb8-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## y 1.0000000 1.0000000 0.2300895</span></span>
<span id="cb8-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## z 0.2300895 0.2300895 1.0000000</span></span></code></pre></div>
</div>
</section>
<section id="i-want-my-bars-to-be-sorted-in-my-plot.-how-can-i-control-their-order" class="level3">
<h3 class="anchored" data-anchor-id="i-want-my-bars-to-be-sorted-in-my-plot.-how-can-i-control-their-order">I want my bars to be sorted in my plot. How can I control their order?</h3>
<p>Sorting categories by different values is important for showing trends in your data. By default, R will plot categorical variables in alphabetical order, but often you’ll want these categories to use some sort of numeric order, likely based on a different column.</p>
<p>There are a few different ways to sort categories. First, let’s make a summarized dataset of the total population in each continent in 2007 (using our trusty ol’ gapminder data):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)</span>
<span id="cb9-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'gapminder' was built under R version 4.2.3</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the total population in each continent in 2007</span></span>
<span id="cb9-5">population_by_continent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_population =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(pop))</span>
<span id="cb9-9">population_by_continent</span>
<span id="cb9-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 5 × 2</span></span>
<span id="cb9-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   continent total_population</span></span>
<span id="cb9-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;fct&gt;                &lt;dbl&gt;</span></span>
<span id="cb9-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 Africa           929539692</span></span>
<span id="cb9-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 Americas         898871184</span></span>
<span id="cb9-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 Asia            3811953827</span></span>
<span id="cb9-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 Europe           586098529</span></span>
<span id="cb9-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 Oceania           24549947</span></span></code></pre></div>
</div>
<p>By default the continents will be in alphabetic order:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb10-2">  population_by_continent,</span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)</span>
<span id="cb10-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The legend is redundant because of the x-axis</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-alphabetic-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>In this case it’s more useful to plot these in order of total population. My favorite approach for this is to (1) sort the data how I want it with <code>arrange()</code> and (2) lock the order of the category in place with <code>fct_inorder()</code>. Note how the mini dataset is now sorted and Oceania comes first:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">plot_data_sorted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> population_by_continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort by population</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(total_population) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make continent use the order it's currently in</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent))</span>
<span id="cb11-6">plot_data_sorted</span>
<span id="cb11-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 5 × 2</span></span>
<span id="cb11-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   continent total_population</span></span>
<span id="cb11-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;fct&gt;                &lt;dbl&gt;</span></span>
<span id="cb11-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 Oceania           24549947</span></span>
<span id="cb11-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 Europe           586098529</span></span>
<span id="cb11-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 Americas         898871184</span></span>
<span id="cb11-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 Africa           929539692</span></span>
<span id="cb11-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 Asia            3811953827</span></span></code></pre></div>
</div>
<p>If we plot it, the continents will be in order:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb12-2">  plot_data_sorted,</span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)</span>
<span id="cb12-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-sorted-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>This plots the continents in reverse order, with Oceania on the left. We can reverse this by either arranging the data in descending population order, or by using <code>fct_rev()</code> to reverse the continent order:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Sort in descending order</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Use <code>fct_rev()</code></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">plot_data_sorted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> population_by_continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort by population in descending order</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(total_population)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lock in the continent order</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent))</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb13-8">  plot_data_sorted,</span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)</span>
<span id="cb13-10">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-desc-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">plot_data_sorted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> population_by_continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort by population in ascending order</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(total_population) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lock in the continent order</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(continent))</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb14-8">  plot_data_sorted,</span>
<span id="cb14-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reverse the continent order with fct_rev()</span></span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(continent), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(continent))</span>
<span id="cb14-11">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-fct-rev-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
<p>An alternative to the two-step <code>arrange() %&gt;% mutate(blah = fct_inorder(blah))</code> is to use <code>fct_reorder()</code>, which takes two arguments: (1) the column you want to be reordered and (2) the column you want to sort it by:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">plot_data_sorted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> population_by_continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort continent by total_population in descending order</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(continent, total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.desc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb15-6">  plot_data_sorted,</span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)</span>
<span id="cb15-8">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-fct-reorder-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>That’s only one line instead of two, which is nice, but I tend to be fan of the two step approach because it’s more explicit and gives me more control over sorting. For instance, here I want all the gapminder countries to be sorted by year (descending), continent, and life expectancy so we can see descending life expectancy within each continent over time.</p>
<p>I’m sure there’s a way to sort by multiple columns in different orders like this with <code>fct_reorder()</code>, but I don’t know how. Plus, if I run this <code>super_sorted_data</code> code up until the end of <code>arrange()</code>, I can look at it in RStudio to make sure all the ordering I want is right. That’s harder to do with <code>fct_reorder()</code>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">super_sorted_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1997</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the countries in order of year (descending), continent, and life expectancy</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(year), continent, lifeExp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lock the country name order in place + lock the year in place</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb16-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(country),</span>
<span id="cb16-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># year is currently a number, so we need to change it to a factor before</span></span>
<span id="cb16-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reordering it</span></span>
<span id="cb16-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(year))</span>
<span id="cb16-11">  )</span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(super_sorted_data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lifeExp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reverse the order legend so that Oceania is at the top, since it's at the</span></span>
<span id="cb16-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># top in the plot</span></span>
<span id="cb16-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove country names and y-axis gridlines + put legend on the bottom</span></span>
<span id="cb16-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb16-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb16-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb16-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb16-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb16-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span></span>
<span id="cb16-27">  )</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/gapminder-wild-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>You can also specify any arbitrary category order with <code>fct_relevel()</code></p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">plot_data_sorted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> population_by_continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use this specific continent order</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">continent =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(</span>
<span id="cb17-4">    continent, </span>
<span id="cb17-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oceania"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Europe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Americas"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Africa"</span>))</span>
<span id="cb17-6">  )</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb17-9">  plot_data_sorted,</span>
<span id="cb17-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total_population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> continent)</span>
<span id="cb17-11">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-gapminder-arbitrary-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="my-data-has-full-us-state-names-but-i-want-to-use-abbreviations-or-regions.-is-there-a-way-to-automatically-convert-from-names-to-something-else" class="level3">
<h3 class="anchored" data-anchor-id="my-data-has-full-us-state-names-but-i-want-to-use-abbreviations-or-regions.-is-there-a-way-to-automatically-convert-from-names-to-something-else">My data has full US state names but I want to use abbreviations (or regions). Is there a way to automatically convert from names to something else?</h3>
<p>Yep! R has a few state-related variables built in (run <code>?state</code> in your R console to see them all):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">state.name</span>
<span id="cb18-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [1] "Alabama"        "Alaska"         "Arizona"        "Arkansas"      </span></span>
<span id="cb18-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [5] "California"     "Colorado"       "Connecticut"    "Delaware"      </span></span>
<span id="cb18-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [9] "Florida"        "Georgia"        "Hawaii"         "Idaho"         </span></span>
<span id="cb18-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [13] "Illinois"       "Indiana"        "Iowa"           "Kansas"        </span></span>
<span id="cb18-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [17] "Kentucky"       "Louisiana"      "Maine"          "Maryland"      </span></span>
<span id="cb18-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [21] "Massachusetts"  "Michigan"       "Minnesota"      "Mississippi"   </span></span>
<span id="cb18-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [25] "Missouri"       "Montana"        "Nebraska"       "Nevada"        </span></span>
<span id="cb18-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [29] "New Hampshire"  "New Jersey"     "New Mexico"     "New York"      </span></span>
<span id="cb18-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [33] "North Carolina" "North Dakota"   "Ohio"           "Oklahoma"      </span></span>
<span id="cb18-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [37] "Oregon"         "Pennsylvania"   "Rhode Island"   "South Carolina"</span></span>
<span id="cb18-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [41] "South Dakota"   "Tennessee"      "Texas"          "Utah"          </span></span>
<span id="cb18-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [45] "Vermont"        "Virginia"       "Washington"     "West Virginia" </span></span>
<span id="cb18-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [49] "Wisconsin"      "Wyoming"</span></span>
<span id="cb18-15">state.abb</span>
<span id="cb18-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [1] "AL" "AK" "AZ" "AR" "CA" "CO" "CT" "DE" "FL" "GA" "HI" "ID" "IL" "IN" "IA"</span></span>
<span id="cb18-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [16] "KS" "KY" "LA" "ME" "MD" "MA" "MI" "MN" "MS" "MO" "MT" "NE" "NV" "NH" "NJ"</span></span>
<span id="cb18-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [31] "NM" "NY" "NC" "ND" "OH" "OK" "OR" "PA" "RI" "SC" "SD" "TN" "TX" "UT" "VT"</span></span>
<span id="cb18-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [46] "VA" "WA" "WV" "WI" "WY"</span></span>
<span id="cb18-20">state.region</span>
<span id="cb18-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [1] South         West          West          South         West         </span></span>
<span id="cb18-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  [6] West          Northeast     South         South         South        </span></span>
<span id="cb18-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [11] West          West          North Central North Central North Central</span></span>
<span id="cb18-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [16] North Central South         South         Northeast     South        </span></span>
<span id="cb18-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [21] Northeast     North Central North Central South         North Central</span></span>
<span id="cb18-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [26] West          North Central West          Northeast     Northeast    </span></span>
<span id="cb18-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [31] West          Northeast     South         North Central North Central</span></span>
<span id="cb18-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [36] South         West          Northeast     Northeast     South        </span></span>
<span id="cb18-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [41] North Central South         South         West          Northeast    </span></span>
<span id="cb18-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## [46] South         West          South         North Central West         </span></span>
<span id="cb18-31"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Levels: Northeast South North Central West</span></span></code></pre></div>
</div>
<p>These aren’t datasets—they’re single vectors—but you can make a little dataset with columns for each of those details, like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">state_details <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb19-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> state.name,</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_abb =</span> state.abb,</span>
<span id="cb19-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_division =</span> state.division,</span>
<span id="cb19-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_region =</span> state.region</span>
<span id="cb19-6">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add DC manually</span></span>
<span id="cb19-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb19-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Washington, DC"</span>,</span>
<span id="cb19-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_abb =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DC"</span>,</span>
<span id="cb19-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_division =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Atlantic"</span>,</span>
<span id="cb19-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_region =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South"</span></span>
<span id="cb19-13">  )</span>
<span id="cb19-14">state_details</span>
<span id="cb19-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 51 × 4</span></span>
<span id="cb19-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    state       state_abb state_division     state_region</span></span>
<span id="cb19-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;              &lt;chr&gt;       </span></span>
<span id="cb19-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  1 Alabama     AL        East South Central South       </span></span>
<span id="cb19-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  2 Alaska      AK        Pacific            West        </span></span>
<span id="cb19-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  3 Arizona     AZ        Mountain           West        </span></span>
<span id="cb19-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  4 Arkansas    AR        West South Central South       </span></span>
<span id="cb19-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  5 California  CA        Pacific            West        </span></span>
<span id="cb19-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  6 Colorado    CO        Mountain           West        </span></span>
<span id="cb19-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  7 Connecticut CT        New England        Northeast   </span></span>
<span id="cb19-25"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  8 Delaware    DE        South Atlantic     South       </span></span>
<span id="cb19-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##  9 Florida     FL        South Atlantic     South       </span></span>
<span id="cb19-27"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 10 Georgia     GA        South Atlantic     South       </span></span>
<span id="cb19-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # ℹ 41 more rows</span></span></code></pre></div>
</div>
<p>You can join this dataset to any data you have that has state names or state abbreviations. Joining the data will bring all the columns from <code>state_details</code> into your data wherever rows match. You’ll <a href="../lesson/12-lesson.html">learn a lot more about joining things in sesison 12 too</a>.</p>
<p>For instance, imagine you have a dataset that looks like this, similar to the unemployment data from exercise 8:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">some_state_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb20-2">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>state, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>something,</span>
<span id="cb20-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wyoming"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb20-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"North Carolina"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb20-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nevada"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb20-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Georgia"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb20-7">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rhode Island"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb20-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Washington, DC"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb20-9">)</span>
<span id="cb20-10">some_state_data</span>
<span id="cb20-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 6 × 2</span></span>
<span id="cb20-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   state          something</span></span>
<span id="cb20-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;              &lt;dbl&gt;</span></span>
<span id="cb20-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 Wyoming                5</span></span>
<span id="cb20-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 North Carolina         9</span></span>
<span id="cb20-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 Nevada                10</span></span>
<span id="cb20-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 Georgia                3</span></span>
<span id="cb20-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 Rhode Island           1</span></span>
<span id="cb20-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 6 Washington, DC         6</span></span></code></pre></div>
</div>
<p>We can merge in (or join) the <code>state_details</code> data so that we add columns for abbreviation, region, and so on, using <code>left_join()</code> (again, <a href="../lesson/12-lesson.html">see lesson 12 for more about all this</a>):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join the state details</span></span>
<span id="cb21-2">data_with_state_details <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_state_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(state_details, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(state))</span>
<span id="cb21-4">data_with_state_details</span>
<span id="cb21-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 6 × 5</span></span>
<span id="cb21-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   state          something state_abb state_division state_region</span></span>
<span id="cb21-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;       </span></span>
<span id="cb21-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 Wyoming                5 WY        Mountain       West        </span></span>
<span id="cb21-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 North Carolina         9 NC        South Atlantic South       </span></span>
<span id="cb21-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 Nevada                10 NV        Mountain       West        </span></span>
<span id="cb21-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4 Georgia                3 GA        South Atlantic South       </span></span>
<span id="cb21-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5 Rhode Island           1 RI        New England    Northeast   </span></span>
<span id="cb21-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 6 Washington, DC         6 DC        South Atlantic South</span></span></code></pre></div>
</div>
<p>Now your <code>data_with_state_details</code> data has new columns for abbreviations, divisions, regions, and everything else that was in <code>state_details</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use it</span></span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb22-3">  data_with_state_details, </span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> state_abb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> something, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> state_region)</span>
<span id="cb22-5">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-state-abbreviations-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>And for fun, we can fix the ordering:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix the ordering</span></span>
<span id="cb23-2">data_with_state_details <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_state_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(state_details, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(state)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(something)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state_abb =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_inorder</span>(state_abb))</span>
<span id="cb23-6"></span>
<span id="cb23-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb23-8">  data_with_state_details, </span>
<span id="cb23-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> state_abb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> something, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> state_region)</span>
<span id="cb23-10">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07_files/figure-html/plot-state-abbreviations-ordering-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-10_faqs-week-07.html</guid>
  <pubDate>Tue, 10 Oct 2023 16:04:00 GMT</pubDate>
</item>
<item>
  <title>Time for mini project 1!</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_mini-project-1.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Mini project 1 is due in less than two weeks, so it’s a good time to start thinking about it. <a href="../assignment/01-mini-project.html">The complete instructions are accessible here</a>, along with starter code that should help you clean and prepare the data, and the rubric I’ll use to grade the project.</p>
<p>I’m giving you a big dataset with 100,000+ rows in it. Your job is to tell some sort of story with it. You’ll likely want to summarize it somehow (similar to what you’ve done with essential pandemic construction and words in <em>The Lord of the Rings</em> in past exercises).</p>
<p>Unlike exercises, there <em>are</em> late penalties for this mini project (mostly to help keep you on track and on schedule).</p>
<p>If you need help, please reach out on Slack! Do not suffer in silence!</p>
<p>Good luck!</p>



 ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_mini-project-1.html</guid>
  <pubDate>Tue, 03 Oct 2023 19:00:00 GMT</pubDate>
</item>
<item>
  <title>Making cleaner, nicer R Markdown output</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_cleaner-nicer-rmd-output.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>With mini project 1 coming up, I have a bunch of helpful tips to make sure your documents look as nice and readable as possible. Here we go!</p>
<section id="knit-often" class="level3">
<h3 class="anchored" data-anchor-id="knit-often">Knit often</h3>
<p>Don’t wait until you’ve finished typing your entire document before knitting. Knit to HTML occasionally to make sure all your code runs from a fresh session and to make sure all the extra warnings and messages and any other strange output is taken care of.</p>
<p>Even if your final document won’t be an HTML file, I recommend knitting to HTML often because (1) it’s fast and (2) you can see the output in an easily-refreshable web browser immediately. When you knit to PDF, you have to wait a few extra seconds for LaTeX to compile the rendered Markdown file into PDF, and then you have to reopen the PDF file if you had it open previously. When you knit to Word, if you have a previous version of the .docx file open already, your computer will get mad (especially on Windows), so you have to remember to always close the knitted document in Word before reknitting it, and that’s annoying and you’ll inevitably forget.</p>
<p>So knit to HTML often. Then at the end, once you know everything is working right and the document looks nice and clean, knit to PDF or Word or whatever your final output will be.</p>
</section>
<section id="check-that-your-text-looks-okay" class="level3">
<h3 class="anchored" data-anchor-id="check-that-your-text-looks-okay">Check that your text looks okay</h3>
<p>When knitting, you should also check your text to make sure it looks okay. Here are some common issues that you’ll see with your text:</p>
<section id="headings-that-arent-headings" class="level4">
<h4 class="anchored" data-anchor-id="headings-that-arent-headings">Headings that aren’t headings</h4>
<p>Often you’ll want to make a heading for one of your sections and you’ll type this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">#Task 1: Reflection</span></code></pre></div>
<p>When you knit that, though, it’ll look like this:</p>
<blockquote class="blockquote">
<p>#Task 1: Reflection</p>
</blockquote>
<p>That’s not a heading—that’s just a regular paragraph. For a <code>#</code>-style heading to turn into an actual heading, you need a space after the <code>#</code> and an empty line after the heading text:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1"># Task 1: Reflection</span>
<span id="cb2-2"></span>
<span id="cb2-3">Some text</span>
<span id="cb2-4"></span>
<span id="cb2-5">## A subheading</span>
<span id="cb2-6"></span>
<span id="cb2-7">Some more text</span></code></pre></div>
</section>
<section id="paragraphs-that-arent-paragraphs" class="level4">
<h4 class="anchored" data-anchor-id="paragraphs-that-arent-paragraphs">Paragraphs that aren’t paragraphs</h4>
<p>You’re used to indenting paragraphs in Word or Google Docs. First-line indentation is a normal thing with word processors.</p>
<p>Indenting lines is <strong>unnecessary</strong> with Markdown and will mess up your text.</p>
<p>For example, let’s say you type something like this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">    It was the best of times, it was the worst of times, it was the age of </span>
<span id="cb3-2">wisdom, it was the age of foolishness, it was the epoch of belief, it was the </span>
<span id="cb3-3">epoch of incredulity, it was the season of Light, it was the season of Darkness, </span>
<span id="cb3-4">it was the spring of hope, it was the winter of despair, we had everything </span>
<span id="cb3-5">before us, we had nothing before us, we were all going direct to Heaven, we were </span>
<span id="cb3-6">all going direct the other way—in short, the period was so far like the present </span>
<span id="cb3-7">period, that some of its noisiest authorities insisted on its being received, </span>
<span id="cb3-8">for good or for evil, in the superlative degree of comparison only.</span>
<span id="cb3-9"></span>
<span id="cb3-10">    There were a king with a large jaw and a queen with a plain face, on the </span>
<span id="cb3-11">throne of England; there were a king with a large jaw and a queen with a fair </span>
<span id="cb3-12">face, on the throne of France. In both countries it was clearer than crystal to </span>
<span id="cb3-13">the lords of the State preserves of loaves and fishes, that things in general </span>
<span id="cb3-14">were settled for ever. </span></code></pre></div>
<p>That looks like Word-style text, with indented paragraphs. When you knit it, though, it’ll turn into code-formatted monospaced text that runs off the edge of the page:</p>
<blockquote class="blockquote">
<pre><code>It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way—in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.

There were a king with a large jaw and a queen with a plain face, on the throne of England; there were a king with a large jaw and a queen with a fair face, on the throne of France. In both countries it was clearer than crystal to the lords of the State preserves of loaves and fishes, that things in general were settled for ever. </code></pre>
</blockquote>
<p>That’s because Markdown treats anything that is indented with four spaces as <em>code</em>, not as text.</p>
<p><strong>You shouldn’t indent your text.</strong> Instead, add an empty line between each paragraph to separate them.</p>
</section>
<section id="lists-that-arent-lists" class="level4">
<h4 class="anchored" data-anchor-id="lists-that-arent-lists">Lists that aren’t lists</h4>
<p>Due to esoteric historical reasons, the end of lines (i.e.&nbsp;what happens when you press <kbd>enter</kbd> when typing) is different on Macs and Windows. I use a Mac, and I typed the exercise templates on a Mac, so they have Mac-style line endings. That means that on Windows, you’ll sometimes see text that looks normal like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">- Here's a list</span>
<span id="cb5-2">- Stuff goes here</span>
<span id="cb5-3">- Neato</span></code></pre></div>
<p>That should theoretically turn into a list, but when you knit it, you see this:</p>
<blockquote class="blockquote">
<ul>
<li>Here’s a list - Stuff goes here - Neato</li>
</ul>
</blockquote>
<p>That’s not a list! The easiest way to fix that is to delete the line break at the end of “list” in that first line and then press enter (and so on), so that it turns in to this when knitting:</p>
<blockquote class="blockquote">
<ul>
<li>Here’s a list</li>
<li>Stuff goes here</li>
<li>Neato</li>
</ul>
</blockquote>
</section>
</section>
<section id="dont-install-packages-in-your-document" class="level3">
<h3 class="anchored" data-anchor-id="dont-install-packages-in-your-document">Don’t install packages in your document</h3>
<p>Make sure you don’t include code to install packages in your Rmd files. Like, don’t include <code>install.packages("ggtext")</code> or whatever. If you do, R will reinstall that package every time you knit your document, which is excessive. All you need to do is load the package with <code>library()</code></p>
<p>To help myself remember to not include package installation code in my document, I make an effort to either install packages with my mouse by clicking on the “Install” button in the Packages panel in RStudio, or only ever typing (or copying/pasting) code like <code>install.packages("whatever")</code> directly in the R console and never putting it in a chunk.</p>
</section>
<section id="clean-up-warnings-and-messages" class="level3">
<h3 class="anchored" data-anchor-id="clean-up-warnings-and-messages">Clean up warnings and messages</h3>
<p>Ideally, your document shouldn’t have any errors, warnings, or messages in it. Some packages are talkative, like {tidyverse}:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb6-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'tidyverse' was built under R version 4.2.3</span></span>
<span id="cb6-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'ggplot2' was built under R version 4.2.3</span></span>
<span id="cb6-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'tibble' was built under R version 4.2.3</span></span>
<span id="cb6-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'tidyr' was built under R version 4.2.3</span></span>
<span id="cb6-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'purrr' was built under R version 4.2.3</span></span>
<span id="cb6-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'dplyr' was built under R version 4.2.3</span></span>
<span id="cb6-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'stringr' was built under R version 4.2.3</span></span>
<span id="cb6-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'forcats' was built under R version 4.2.3</span></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'lubridate' was built under R version 4.2.3</span></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──</span></span>
<span id="cb6-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ dplyr     1.1.4     ✔ readr     2.1.5</span></span>
<span id="cb6-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ forcats   1.0.0     ✔ stringr   1.5.1</span></span>
<span id="cb6-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ ggplot2   3.4.4     ✔ tibble    3.2.1</span></span>
<span id="cb6-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ lubridate 1.9.3     ✔ tidyr     1.3.0</span></span>
<span id="cb6-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ purrr     1.0.2     </span></span>
<span id="cb6-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──</span></span>
<span id="cb6-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✖ dplyr::filter() masks stats::filter()</span></span>
<span id="cb6-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✖ dplyr::lag()    masks stats::lag()</span></span>
<span id="cb6-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</span></span></code></pre></div>
</div>
<p>Some functions are talkative, like <code>summarize()</code> after working on more than one group:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, drv) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(hwy))</span>
<span id="cb7-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `summarise()` has grouped output by 'year'. You can override using the</span></span>
<span id="cb7-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `.groups` argument.</span></span>
<span id="cb7-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 6 × 3</span></span>
<span id="cb7-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # Groups:   year [2]</span></span>
<span id="cb7-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##    year drv     avg</span></span>
<span id="cb7-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;</span></span>
<span id="cb7-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1  1999 4      18.8</span></span>
<span id="cb7-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2  1999 f      27.9</span></span>
<span id="cb7-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3  1999 r      20.6</span></span>
<span id="cb7-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 4  2008 4      19.5</span></span>
<span id="cb7-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 5  2008 f      28.4</span></span>
<span id="cb7-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 6  2008 r      21.3</span></span></code></pre></div>
</div>
<p>Or <code>geom_smooth()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>()</span>
<span id="cb8-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_cleaner-nicer-rmd-output_files/figure-html/mpg-smooth-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>When you have code that you know will return some sort of message, add <code>message=FALSE</code> to the chunk options for it. When you have code that you know will make some sort of warning, (1) try to fix it so that the warning doesn’t happen, or (2) add <code>warning=FALSE</code> to the chunk options for it.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb9-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r load-packages, warning=FALSE, message=FALSE}</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb9-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</div>
<p>Knitting often and scrolling through the rendered document will help you check that you don’t have any extra output like warnings, messages, and errors too.</p>
</section>
<section id="global-chunk-options" class="level3">
<h3 class="anchored" data-anchor-id="global-chunk-options">Global chunk options</h3>
<p>You can control the settings for all the chunks in your document by using <code>knitr::opts_chunk$set()</code>. You can use any knitr chunk options (see <a href="https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf">here</a> or <a href="https://yihui.org/knitr/options/">here</a> for a complete list).</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Let R make the code for you
</div>
</div>
<div class="callout-body-container callout-body">
<p>I never remember the full name of that function, but you can get it if you go to “File &gt; New File &gt; R Markdown”; it’s part of the Rmd template RStudio makes for you.</p>
</div>
</div>
<p>For instance, if you want to hide all the code in your document, you could either go add <code>echo=FALSE</code> to each chunk individually, or you could add it to the global chunk options:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">echo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>You could hide all warnings and messages there too:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">message =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p><strong><em>BUT</em></strong> I don’t recommend doing that ↑ normally. Warnings are helpful—when you get them, you’ll typically want to try to deal with them. Instead of hiding them, try to fix them. If you can’t fix them (like when you run <code>library(tidyverse)</code>), then you can hide them for that chunk.</p>
<p>You can also set default figure dimensions and lots of other settings. I typically include something like this at the start of my documents:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(</span>
<span id="cb12-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.618</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Golden rectangles!</span></span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, </span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out.width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80%"</span></span>
<span id="cb12-6">)</span></code></pre></div>
<p>Make sure you hide the chunk that contains those settings with something like <code>include=FALSE</code>, otherwise you’ll see it in your document:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb13-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r document-chunk-options, include=FALSE}</span></span>
<span id="cb13-2">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb13-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.618</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Golden rectangles!</span></span>
<span id="cb13-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, </span>
<span id="cb13-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out.width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80%"</span></span>
<span id="cb13-7">)</span>
<span id="cb13-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</section>
<section id="fancy-document-settings" class="level3">
<h3 class="anchored" data-anchor-id="fancy-document-settings">Fancy document settings</h3>
<p>You can make your documents prettier by changing the settings for different outputs (<a href="https://bookdown.org/yihui/rmarkdown/documents.html">see this for complete documentation</a>).</p>
<p>For example, if you want a different font in PDFs, you can include something like this in your frontmatter. <a href="https://bookdown.org/yihui/rmarkdown/pdf-document.html">See here for complete details.</a></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb14-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdf_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">latex_engine</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xelatex</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # This lets LaTeX work with different fonts</span></span>
<span id="cb14-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainfont</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Garamond</span></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10pt</span></span>
<span id="cb14-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>If you want a different template for HTML (<a href="https://bootswatch.com/3/">you can use these</a>, or if you know HTML and CSS, you can make your own), you can do something like this. <a href="https://bookdown.org/yihui/rmarkdown/html-document.html">See here for complete details.</a></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb15-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb15-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb15-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> united</span></span>
<span id="cb15-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>You can’t do much with Word because Microsoft makes it hard to do anything to .docx files, but you can create a .docx file where you define a bunch of style settings (e.g., make Heading 1 a specific sans serif font, left-aligned, bold; make Heading 2 the same font and not bold; make main paragraphs an 11pt serif font; and so on), and then you can inject those styles into the knitted document like this. <a href="https://bookdown.org/yihui/rmarkdown/word-document.html">See here for complete details.</a></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb16-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb16-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb16-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">word_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb16-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reference_docx</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> my-neat-styles.docx</span></span>
<span id="cb16-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>You can keep all those output-specific settings in the same document—knitr will only use the settings required for each output (i.e.&nbsp;if you knit to PDF it’ll ignore the HTML settings):</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb17-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Whatever"</span></span>
<span id="cb17-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb17-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdf_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb17-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">latex_engine</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> xelatex</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # This lets LaTeX work with different fonts</span></span>
<span id="cb17-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb17-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> united</span></span>
<span id="cb17-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">word_document</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb17-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reference_docx</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> my-neat-styles.docx</span></span>
<span id="cb17-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainfont</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Garamond</span></span>
<span id="cb17-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10pt</span></span>
<span id="cb17-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>You can get really fancy with this stuff. For example, <a href="https://github.com/andrewheiss/cautioning-canary/blob/master/manuscript/manuscript.Rmd">this Rmd file</a> creates four different kinds of customized output (<a href="https://stats.andrewheiss.com/cautioning-canary/">see here</a>):</p>
<ul>
<li><a href="https://stats.andrewheiss.com/cautioning-canary/output/manuscript.pdf">PDF</a></li>
<li><a href="https://stats.andrewheiss.com/cautioning-canary/output/manuscript-ms.pdf">Manuscripty PDF</a></li>
<li><a href="https://stats.andrewheiss.com/cautioning-canary/output/manuscript.html">HTML</a></li>
<li><a href="https://stats.andrewheiss.com/cautioning-canary/output/manuscript.docx">Word</a></li>
</ul>
</section>
<section id="quarto" class="level3">
<h3 class="anchored" data-anchor-id="quarto">Quarto</h3>
<p>If you want even fancier documents, try the next generation of R Markdown called <a href="https://quarto.org/">Quarto</a>. It makes it a billion times easier to do things like change fonts, use cross references (i.e.&nbsp;write things like “see Figure 1” or “see Table 3”), use citations (automatic APA or Chicago citation styles!), use fancier layouts, and so on.</p>
<p>This course website is built with Quarto. Check out this for an example of an academic paper written with Quarto:</p>
<ul>
<li><a href="https://github.com/andrewheiss/mountainous-mackerel/blob/main/manuscript/manuscript.qmd">.qmd file</a></li>
<li><a href="https://stats.andrewheiss.com/mountainous-mackerel/analysis/paper.html">PDF, manuscripty PDF, and HTML output for that .qmd file</a></li>
</ul>
<p><a href="https://quarto.org/docs/guide/">Quarto has great documentation</a>, it’s fully supported in RStudio already, and you basically already know how to use it. It’s just .Rmd with fancier, newer features.</p>
</section>
<section id="chunk-names" class="level3">
<h3 class="anchored" data-anchor-id="chunk-names">Chunk names</h3>
<p><a href="../resource/rmarkdown.html#chunk-names">Labeling your R chunks is a good thing to do</a>, since it helps with document navigation and is generally good practice. If you’re using chunk labels <strong>make sure you don’t use spaces</strong> in them. R will still knit a document with spaceful names, but it converts the spaces to underscores before doing it. So instead of naming chunks like <code>{r My Neat Chunk, message=FALSE}</code>, use something like <code>{r my-neat-chunk}</code> or <code>{r my_neat_chunk}</code>.</p>


</section>

 ]]></description>
  <category>advice</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_cleaner-nicer-rmd-output.html</guid>
  <pubDate>Tue, 03 Oct 2023 18:48:00 GMT</pubDate>
</item>
<item>
  <title>Week 6 FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Great work with exercise 6 this week! You’re starting to get the hang of ggplot and R!</p>
<p>Just a couple quick common issues this week:</p>
<section id="my-histogram-bars-are-too-wide-too-narrow-not-visible.-how-do-i-fix-that" class="level3">
<h3 class="anchored" data-anchor-id="my-histogram-bars-are-too-wide-too-narrow-not-visible.-how-do-i-fix-that">My histogram bars are too wide / too narrow / not visible. How do I fix that?</h3>
<p>In exercise 6, a lot of you ran into issues with the GDP per capita histogram. The main issue was related to <em>bin widths</em>.</p>
<p>Histograms work by taking a variable, cutting it up into smaller buckets, and counting how many rows appear in each bucket. For example, here’s a histogram of life expectancy from gapminder, with the <code>binwidth</code> argument set to <code>5</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)</span>
<span id="cb1-3"></span>
<span id="cb1-4">gapminder_2007 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/lifeexp-5-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>The <code>binwidth = 5</code> setting means that each of those bars shows the count of countries with life expectancies in five-year buckets: 35–40, 40–45, 45–50, and so on.</p>
<p>If we change that to <code>binwidth = 1</code>, we get narrower bars because we have smaller buckets—each bar here shows the count of countries with life expectancies between 50–51, 51–52, 52–53, and so on.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/lifeexp-1-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>If we change it to <code>binwidth = 20</code>, we get huge bars because the buckets are huge. Now each bar shows the count of countries with life expectancies between 20–40, 40–60, 60–80, and 80–100:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lifeExp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/lifeexp-20-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p><strong>There is no one correct good universal value for the bin width and it depends entirely on your data.</strong></p>
<p>Lots of you ran into an issue when copying/pasting code from the example, where one of the example histograms used <code>binwidth = 1</code>, since that was appropriate for that variable.</p>
<p>Watch what happens if you plot a histogram of GDP per capita using <code>binwidth = 1</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/gdppercap-1-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>haha yeah that’s delightfully wrong. Each bar here is showing the count of countries with GDP per capita is $10,000–$10,001, then $10,001–$10.002, then $10,002–$10,003, and so on. Basically every country has its own unique GDP per capita, so the count for each of those super narrow bars is 1 (there’s one exception where two countries fall in the same bucket, which is why the y-axis goes up to 2). You can’t actually see any of the bars here because they’re too narrow—all you can really see is the white border around the bars.</p>
<p>To actually see what’s happening, you need a bigger bin width. How much bigger is up to you. With life expectancy we played around with 1, 5, and 20, but those bucket sizes are waaaay too small for GDP per capita. Try bigger values instead. But again, <strong>there’s no right number here!</strong></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"><code>binwidth = 1000</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"><code>binwidth = 2000</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false"><code>binwidth = 5000</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false"><code>binwidth = 10000</code></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/gdppercap-1000-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/gdppercap-2000-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/gdppercap-5000-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06_files/figure-html/gdppercap-10000-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="i-wrote-some-text-and-when-i-knit-it-shows-up-in-ugly-monospaced-font-and-it-flows-off-the-edge-of-the-page-why" class="level3">
<h3 class="anchored" data-anchor-id="i-wrote-some-text-and-when-i-knit-it-shows-up-in-ugly-monospaced-font-and-it-flows-off-the-edge-of-the-page-why">I wrote some text and when I knit, it shows up in <code>ugly</code> <code>monospaced</code> <code>font</code> and it flows off the edge of the page? Why?</h3>
<p>You’re used to indenting paragraphs in Word or Google Docs. First-line indentation is a normal thing with word processors.</p>
<p>Indenting lines is <strong>unnecessary</strong> with Markdown and will mess up your text.</p>
<p>For example, let’s say you type something like this:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">    It was the best of times, it was the worst of times, it was the age of </span>
<span id="cb9-2">wisdom, it was the age of foolishness, it was the epoch of belief, it was the </span>
<span id="cb9-3">epoch of incredulity, it was the season of Light, it was the season of Darkness, </span>
<span id="cb9-4">it was the spring of hope, it was the winter of despair, we had everything </span>
<span id="cb9-5">before us, we had nothing before us, we were all going direct to Heaven, we were </span>
<span id="cb9-6">all going direct the other way—in short, the period was so far like the present </span>
<span id="cb9-7">period, that some of its noisiest authorities insisted on its being received, </span>
<span id="cb9-8">for good or for evil, in the superlative degree of comparison only.</span>
<span id="cb9-9"></span>
<span id="cb9-10">    There were a king with a large jaw and a queen with a plain face, on the </span>
<span id="cb9-11">throne of England; there were a king with a large jaw and a queen with a fair </span>
<span id="cb9-12">face, on the throne of France. In both countries it was clearer than crystal to </span>
<span id="cb9-13">the lords of the State preserves of loaves and fishes, that things in general </span>
<span id="cb9-14">were settled for ever. </span></code></pre></div>
<p>That looks like Word-style text, with indented paragraphs. When you knit it, though, it’ll turn into code-formatted monospaced text that runs off the edge of the page:</p>
<blockquote class="blockquote">
<pre><code>It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way—in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.

There were a king with a large jaw and a queen with a plain face, on the throne of England; there were a king with a large jaw and a queen with a fair face, on the throne of France. In both countries it was clearer than crystal to the lords of the State preserves of loaves and fishes, that things in general were settled for ever. </code></pre>
</blockquote>
<p>That’s because Markdown treats anything that is indented with four spaces as <em>code</em>, not as text.</p>
<p><strong>You shouldn’t indent your text.</strong> Instead, add an empty line between each paragraph to separate them:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">It was the best of times, it was the worst of times, it was the age of </span>
<span id="cb11-2">wisdom, it was the age of foolishness, it was the epoch of belief, it was the </span>
<span id="cb11-3">epoch of incredulity, it was the season of Light, it was the season of Darkness, </span>
<span id="cb11-4">it was the spring of hope, it was the winter of despair, we had everything </span>
<span id="cb11-5">before us, we had nothing before us, we were all going direct to Heaven, we were </span>
<span id="cb11-6">all going direct the other way—in short, the period was so far like the present </span>
<span id="cb11-7">period, that some of its noisiest authorities insisted on its being received, </span>
<span id="cb11-8">for good or for evil, in the superlative degree of comparison only.</span>
<span id="cb11-9"></span>
<span id="cb11-10">There were a king with a large jaw and a queen with a plain face, on the </span>
<span id="cb11-11">throne of England; there were a king with a large jaw and a queen with a fair </span>
<span id="cb11-12">face, on the throne of France. In both countries it was clearer than crystal to </span>
<span id="cb11-13">the lords of the State preserves of loaves and fishes, that things in general </span>
<span id="cb11-14">were settled for ever. </span></code></pre></div>
<p>↑ that will turn into this ↓</p>
<blockquote class="blockquote">
<p>It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way—in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.</p>
<p>There were a king with a large jaw and a queen with a plain face, on the throne of England; there were a king with a large jaw and a queen with a fair face, on the throne of France. In both countries it was clearer than crystal to the lords of the State preserves of loaves and fishes, that things in general were settled for ever.</p>
</blockquote>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-10-03_faqs-week-06.html</guid>
  <pubDate>Tue, 03 Oct 2023 18:44:00 GMT</pubDate>
</item>
<item>
  <title>Week 5 FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Great work with your ugly plots last week! Hopefully it gave you good exposure to the power of ggplot themes. In the future, you’ll want to <em>avoid</em> such awful design sins and follow CRAP for real, but now you know how to make all sorts of adjustments to your plots in the future.</p>
<p>There are a few good and important FAQs for this week. Here we go!</p>
<section id="i-made-a-bunch-of-changes-to-my-plot-with-theme-but-when-i-used-ggsave-none-of-them-actually-saved.-why" class="level3">
<h3 class="anchored" data-anchor-id="i-made-a-bunch-of-changes-to-my-plot-with-theme-but-when-i-used-ggsave-none-of-them-actually-saved.-why">I made a bunch of changes to my plot with <code>theme()</code> but when I used <code>ggsave()</code>, none of them actually saved. Why?</h3>
<p>This is a really common occurrence—don’t worry! And it’s easy to fix!</p>
<p>In the code I gave you in exercise 5, you stored the results of <code>ggplot()</code> as an object named <code>ugly_plot</code>, like this (this isn’t the same data as exercise 5, but shows the same general principle):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">ugly_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb1-3"></span>
<span id="cb1-4">ugly_plot</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/create-basic-plot-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>That <code>ugly_plot</code> object contains the basic underlying plot that you wanted to adjust. You then used it with {ggThemeAssist} to make modifications, something like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">ugly_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_dark</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comic Sans MS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>)</span>
<span id="cb2-7">  )</span>
<span id="cb2-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family</span></span>
<span id="cb2-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## not found in Windows font database</span></span>
<span id="cb2-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font</span></span>
<span id="cb2-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## family not found in Windows font database</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/basic-plot-with-theme-stuff-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>That’s great and nice and ugly and it displays in your document just fine. If you then use <code>ggsave()</code> like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_ugly_plot.png"</span>, ugly_plot)</span></code></pre></div>
</div>
<p>…you’ll see that it actually <em>doesn’t</em> save all the <code>theme()</code> changes. That’s because it’s saving the <code>ugly_plot</code> object, which is just the underlying base plot before adding theme changes.</p>
<p>If you want to keep the theme changes you make, you need to store them in an object, either overwriting the original <code>ugly_plot</code> object, or creating a new object:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Create new object</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Overwrite <code>ugly_plot</code></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">ugly_plot1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ugly_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_dark</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb4-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comic Sans MS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb4-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>)</span>
<span id="cb4-7">  )</span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb4-9">ugly_plot1</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_ugly_plot.png"</span>, ugly_plot1)</span></code></pre></div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">ugly_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ugly_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_dark</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comic Sans MS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>)</span>
<span id="cb5-7">  )</span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb5-9">ugly_plot</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot</span></span>
<span id="cb5-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_ugly_plot.png"</span>, ugly_plot)</span></code></pre></div>
</div>
</div>
</div>
</div>
</section>
<section id="in-chapter-22-wilke-talks-about-tablesis-there-a-way-to-make-pretty-tables-with-r" class="level3">
<h3 class="anchored" data-anchor-id="in-chapter-22-wilke-talks-about-tablesis-there-a-way-to-make-pretty-tables-with-r">In chapter 22, Wilke talks about tables—is there a way to make pretty tables with R?</h3>
<p>Absolutely! We don’t have time in this class to cover tables, but there’s a whole world of packages for making beautiful tables with R. Three of the more common ones are <a href="https://gt.rstudio.com/">{gt}</a>, <a href="https://haozhu233.github.io/kableExtra/">{kableExtra}</a>, and <a href="https://ardata-fr.github.io/flextable-book/">{flextable}</a>:</p>
<div class="cell no-stripe" data-layout-align="center">
<pre><code>## Warning: package 'gt' was built under R version 4.2.3</code></pre>
<div class="cell-output-display">

<div id="hsslenurig" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#hsslenurig table {
  font-family: Barlow, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#hsslenurig thead, #hsslenurig tbody, #hsslenurig tfoot, #hsslenurig tr, #hsslenurig td, #hsslenurig th {
  border-style: none;
}

#hsslenurig p {
  margin: 0;
  padding: 0;
}

#hsslenurig .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#hsslenurig .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#hsslenurig .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#hsslenurig .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#hsslenurig .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hsslenurig .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hsslenurig .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hsslenurig .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: bold;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#hsslenurig .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: bold;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#hsslenurig .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#hsslenurig .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#hsslenurig .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#hsslenurig .gt_spanner_row {
  border-bottom-style: hidden;
}

#hsslenurig .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: bold;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#hsslenurig .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: bold;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#hsslenurig .gt_from_md > :first-child {
  margin-top: 0;
}

#hsslenurig .gt_from_md > :last-child {
  margin-bottom: 0;
}

#hsslenurig .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#hsslenurig .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#hsslenurig .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#hsslenurig .gt_row_group_first td {
  border-top-width: 2px;
}

#hsslenurig .gt_row_group_first th {
  border-top-width: 2px;
}

#hsslenurig .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hsslenurig .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#hsslenurig .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#hsslenurig .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hsslenurig .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hsslenurig .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#hsslenurig .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#hsslenurig .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#hsslenurig .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hsslenurig .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hsslenurig .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#hsslenurig .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hsslenurig .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#hsslenurig .gt_left {
  text-align: left;
}

#hsslenurig .gt_center {
  text-align: center;
}

#hsslenurig .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#hsslenurig .gt_font_normal {
  font-weight: normal;
}

#hsslenurig .gt_font_bold {
  font-weight: bold;
}

#hsslenurig .gt_font_italic {
  font-style: italic;
}

#hsslenurig .gt_super {
  font-size: 65%;
}

#hsslenurig .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#hsslenurig .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#hsslenurig .gt_indent_1 {
  text-indent: 5px;
}

#hsslenurig .gt_indent_2 {
  text-indent: 10px;
}

#hsslenurig .gt_indent_3 {
  text-indent: 15px;
}

#hsslenurig .gt_indent_4 {
  text-indent: 20px;
}

#hsslenurig .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" style="table-layout: fixed;; width: 100%" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <colgroup>
    <col style="width:13%;">
    <col style="width:6%;">
    <col style="width:6%;">
    <col style="width:6%;">
    <col style="width:10%;">
    <col style="width:59%;">
  </colgroup>
  <thead>
    
    <tr class="gt_col_headings gt_spanner_row">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="2" colspan="1" scope="col" id="Package">Package</th>
      <th class="gt_center gt_columns_top_border gt_column_spanner_outer" rowspan="1" colspan="3" scope="colgroup" id="Output support">
        <span class="gt_column_spanner">Output support</span>
      </th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="2" colspan="1" scope="col" id=" "> </th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="2" colspan="1" scope="col" id="Notes">Notes</th>
    </tr>
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="HTML">HTML</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="PDF">PDF</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Word">Word</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="Package" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[**{gt}**](https://gt.rstudio.com/)"><div class="gt_from_md"><p><a href="https://gt.rstudio.com/"><strong>{gt}</strong></a></p>
</div></div></td>
<td headers="HTML" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="**Great**"><div class="gt_from_md"><p><strong>Great</strong></p>
</div></div></td>
<td headers="PDF" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Okay"><div class="gt_from_md"><p>Okay</p>
</div></div></td>
<td headers="Word" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Okay"><div class="gt_from_md"><p>Okay</p>
</div></div></td>
<td headers="" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[Examples](https://gt.rstudio.com/articles/case-study-gtcars.html)"><div class="gt_from_md"><p><a href="https://gt.rstudio.com/articles/case-study-gtcars.html">Examples</a></p>
</div></div></td>
<td headers="Notes" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Has the goal of becoming the “grammar of tables” (hence “gt”). It is supported by developers at Posit and gets updated and improved regularly. It'll likely become the main table-making package for R."><div class="gt_from_md"><p>Has the goal of becoming the “grammar of tables” (hence “gt”). It is supported by developers at Posit and gets updated and improved regularly. It’ll likely become the main table-making package for R.</p>
</div></div></td></tr>
    <tr><td headers="Package" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[**{kableExtra}**](https://haozhu233.github.io/kableExtra/)"><div class="gt_from_md"><p><a href="https://haozhu233.github.io/kableExtra/"><strong>{kableExtra}</strong></a></p>
</div></div></td>
<td headers="HTML" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="**Great**"><div class="gt_from_md"><p><strong>Great</strong></p>
</div></div></td>
<td headers="PDF" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="**Great**"><div class="gt_from_md"><p><strong>Great</strong></p>
</div></div></td>
<td headers="Word" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Okay"><div class="gt_from_md"><p>Okay</p>
</div></div></td>
<td headers="" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[Examples](https://haozhu233.github.io/kableExtra/awesome_table_in_html.html)"><div class="gt_from_md"><p><a href="https://haozhu233.github.io/kableExtra/awesome_table_in_html.html">Examples</a></p>
</div></div></td>
<td headers="Notes" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Works really well for HTML output and has the best support for PDF output, but development has stalled for the past couple years and it seems to maybe be abandoned, which is sad."><div class="gt_from_md"><p>Works really well for HTML output and has the best support for PDF output, but development has stalled for the past couple years and it seems to maybe be abandoned, which is sad.</p>
</div></div></td></tr>
    <tr><td headers="Package" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[**{flextable}**](https://ardata-fr.github.io/flextable-book/)"><div class="gt_from_md"><p><a href="https://ardata-fr.github.io/flextable-book/"><strong>{flextable}</strong></a></p>
</div></div></td>
<td headers="HTML" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="**Great**"><div class="gt_from_md"><p><strong>Great</strong></p>
</div></div></td>
<td headers="PDF" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Okay"><div class="gt_from_md"><p>Okay</p>
</div></div></td>
<td headers="Word" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="**Great**"><div class="gt_from_md"><p><strong>Great</strong></p>
</div></div></td>
<td headers="" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="[Examples](https://ardata-fr.github.io/flextable-book/index.html#walkthrough-simple-example)"><div class="gt_from_md"><p><a href="https://ardata-fr.github.io/flextable-book/index.html#walkthrough-simple-example">Examples</a></p>
</div></div></td>
<td headers="Notes" class="gt_row gt_left" style="vertical-align: top;"><div data-qmd="Works really well for HTML output and has the best support for Word output. It's not abandoned and gets regular updates."><div class="gt_from_md"><p>Works really well for HTML output and has the best support for Word output. It’s not abandoned and gets regular updates.</p>
</div></div></td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>Here’s a quick illustration of these three packages. All three are incredibly powerful and let you do all sorts of really neat formatting things (<a href="https://gt.rstudio.com/reference/opt_interactive.html">{gt} even makes interactive HTML tables!</a>), so make sure you check out the documentation and examples. I personally use all three, depending on which output I’m working with. When knitting to HTML, I use {gt}; when knitting to PDF I use {gt} or {kableExtra}; when knitting to Word I use {flextable}.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Dataset to table-ify</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">{gt}</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">{kableExtra}</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-4" aria-controls="tabset-2-4" aria-selected="false">{flextable}</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb7-2"></span>
<span id="cb7-3">cars_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, drv) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb7-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb7-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_mpg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(hwy),</span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_mpg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(hwy),</span>
<span id="cb7-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_mpg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(hwy),</span>
<span id="cb7-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_mpg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(hwy)</span>
<span id="cb7-11">  )</span></code></pre></div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell no-stripe" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb8-2"></span>
<span id="cb8-3">cars_summary <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cols_label</span>(</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drv =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span>,</span>
<span id="cb8-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>,</span>
<span id="cb8-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_mpg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average"</span>,</span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_mpg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Median"</span>,</span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_mpg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum"</span>,</span>
<span id="cb8-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_mpg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Maximum"</span></span>
<span id="cb8-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_spanner</span>(</span>
<span id="cb8-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Highway MPG"</span>,</span>
<span id="cb8-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(avg_mpg, median_mpg, min_mpg, max_mpg)</span>
<span id="cb8-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmt_number</span>(</span>
<span id="cb8-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> avg_mpg,</span>
<span id="cb8-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decimals =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_options</span>(</span>
<span id="cb8-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row_group.as_column =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-23">  )</span></code></pre></div>
<div class="cell-output-display">

<div id="gautjibogv" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#gautjibogv table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#gautjibogv thead, #gautjibogv tbody, #gautjibogv tfoot, #gautjibogv tr, #gautjibogv td, #gautjibogv th {
  border-style: none;
}

#gautjibogv p {
  margin: 0;
  padding: 0;
}

#gautjibogv .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gautjibogv .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#gautjibogv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gautjibogv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gautjibogv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gautjibogv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gautjibogv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gautjibogv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gautjibogv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gautjibogv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gautjibogv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gautjibogv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gautjibogv .gt_spanner_row {
  border-bottom-style: hidden;
}

#gautjibogv .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#gautjibogv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gautjibogv .gt_from_md > :first-child {
  margin-top: 0;
}

#gautjibogv .gt_from_md > :last-child {
  margin-bottom: 0;
}

#gautjibogv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gautjibogv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#gautjibogv .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#gautjibogv .gt_row_group_first td {
  border-top-width: 2px;
}

#gautjibogv .gt_row_group_first th {
  border-top-width: 2px;
}

#gautjibogv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gautjibogv .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#gautjibogv .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#gautjibogv .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gautjibogv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gautjibogv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gautjibogv .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#gautjibogv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gautjibogv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gautjibogv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gautjibogv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gautjibogv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gautjibogv .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gautjibogv .gt_left {
  text-align: left;
}

#gautjibogv .gt_center {
  text-align: center;
}

#gautjibogv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gautjibogv .gt_font_normal {
  font-weight: normal;
}

#gautjibogv .gt_font_bold {
  font-weight: bold;
}

#gautjibogv .gt_font_italic {
  font-style: italic;
}

#gautjibogv .gt_super {
  font-size: 65%;
}

#gautjibogv .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#gautjibogv .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#gautjibogv .gt_indent_1 {
  text-indent: 5px;
}

#gautjibogv .gt_indent_2 {
  text-indent: 10px;
}

#gautjibogv .gt_indent_3 {
  text-indent: 15px;
}

#gautjibogv .gt_indent_4 {
  text-indent: 20px;
}

#gautjibogv .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    
    <tr class="gt_col_headings gt_spanner_row">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="2" colspan="1" scope="col" id=""></th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="2" colspan="1" scope="col" id="Drive">Drive</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="2" colspan="1" scope="col" id="N">N</th>
      <th class="gt_center gt_columns_top_border gt_column_spanner_outer" rowspan="1" colspan="4" scope="colgroup" id="Highway MPG">
        <span class="gt_column_spanner">Highway MPG</span>
      </th>
    </tr>
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Average">Average</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Median">Median</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Minimum">Minimum</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Maximum">Maximum</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr class="gt_row_group_first"><td headers="1999 stub_1_1 stub_1" rowspan="3" class="gt_row gt_left gt_stub_row_group">1999</td>
<td headers="1999 stub_1_1 drv" class="gt_row gt_left">4</td>
<td headers="1999 stub_1_1 n" class="gt_row gt_right">49</td>
<td headers="1999 stub_1_1 avg_mpg" class="gt_row gt_right">18.84</td>
<td headers="1999 stub_1_1 median_mpg" class="gt_row gt_right">17</td>
<td headers="1999 stub_1_1 min_mpg" class="gt_row gt_right">15</td>
<td headers="1999 stub_1_1 max_mpg" class="gt_row gt_right">26</td></tr>
    <tr><td headers="1999 drv_2 drv" class="gt_row gt_left">f</td>
<td headers="1999 drv_2 n" class="gt_row gt_right">57</td>
<td headers="1999 drv_2 avg_mpg" class="gt_row gt_right">27.91</td>
<td headers="1999 drv_2 median_mpg" class="gt_row gt_right">26</td>
<td headers="1999 drv_2 min_mpg" class="gt_row gt_right">21</td>
<td headers="1999 drv_2 max_mpg" class="gt_row gt_right">44</td></tr>
    <tr><td headers="1999 drv_3 drv" class="gt_row gt_left">r</td>
<td headers="1999 drv_3 n" class="gt_row gt_right">11</td>
<td headers="1999 drv_3 avg_mpg" class="gt_row gt_right">20.64</td>
<td headers="1999 drv_3 median_mpg" class="gt_row gt_right">21</td>
<td headers="1999 drv_3 min_mpg" class="gt_row gt_right">16</td>
<td headers="1999 drv_3 max_mpg" class="gt_row gt_right">26</td></tr>
    <tr class="gt_row_group_first"><td headers="2008 stub_1_4 stub_1" rowspan="3" class="gt_row gt_left gt_stub_row_group">2008</td>
<td headers="2008 stub_1_4 drv" class="gt_row gt_left">4</td>
<td headers="2008 stub_1_4 n" class="gt_row gt_right">54</td>
<td headers="2008 stub_1_4 avg_mpg" class="gt_row gt_right">19.48</td>
<td headers="2008 stub_1_4 median_mpg" class="gt_row gt_right">19</td>
<td headers="2008 stub_1_4 min_mpg" class="gt_row gt_right">12</td>
<td headers="2008 stub_1_4 max_mpg" class="gt_row gt_right">28</td></tr>
    <tr><td headers="2008 drv_5 drv" class="gt_row gt_left">f</td>
<td headers="2008 drv_5 n" class="gt_row gt_right">49</td>
<td headers="2008 drv_5 avg_mpg" class="gt_row gt_right">28.45</td>
<td headers="2008 drv_5 median_mpg" class="gt_row gt_right">29</td>
<td headers="2008 drv_5 min_mpg" class="gt_row gt_right">17</td>
<td headers="2008 drv_5 max_mpg" class="gt_row gt_right">37</td></tr>
    <tr><td headers="2008 drv_6 drv" class="gt_row gt_left">r</td>
<td headers="2008 drv_6 n" class="gt_row gt_right">14</td>
<td headers="2008 drv_6 avg_mpg" class="gt_row gt_right">21.29</td>
<td headers="2008 drv_6 median_mpg" class="gt_row gt_right">21</td>
<td headers="2008 drv_6 min_mpg" class="gt_row gt_right">15</td>
<td headers="2008 drv_6 max_mpg" class="gt_row gt_right">26</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell no-stripe" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb9-2"></span>
<span id="cb9-3">cars_summary <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>(</span>
<span id="cb9-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Median"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Maximum"</span>),</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pack_rows</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1999"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pack_rows</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2008"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_above</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Highway MPG"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small" data-quarto-postprocess="true">
<colgroup>
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th colspan="2" data-quarto-table-cell-role="th" style="empty-cells: hide; border-bottom: hidden"></th>
<th colspan="4" data-quarto-table-cell-role="th" style="text-align: center; border-bottom: hidden; padding-bottom: 0; padding-left: 3px; padding-right: 3px;"><div style="border-bottom: 1px solid #ddd; padding-bottom: 5px; ">
Highway MPG
</div></th>
</tr>
<tr class="odd">
<th style="text-align: left;" data-quarto-table-cell-role="th">Drive</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">N</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Average</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Median</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Minimum</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Maximum</th>
</tr>
</thead>
<tbody>
<tr class="odd" data-grouplength="3">
<td colspan="6" style="border-bottom: 1px solid"><strong>1999</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">4</td>
<td style="text-align: right;">49</td>
<td style="text-align: right;">18.84</td>
<td style="text-align: right;">17</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">26</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">f</td>
<td style="text-align: right;">57</td>
<td style="text-align: right;">27.91</td>
<td style="text-align: right;">26</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">44</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">r</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">20.64</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">26</td>
</tr>
<tr class="odd" data-grouplength="3">
<td colspan="6" style="border-bottom: 1px solid"><strong>2008</strong></td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">4</td>
<td style="text-align: right;">54</td>
<td style="text-align: right;">19.48</td>
<td style="text-align: right;">19</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">28</td>
</tr>
<tr class="odd">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">f</td>
<td style="text-align: right;">49</td>
<td style="text-align: right;">28.45</td>
<td style="text-align: right;">29</td>
<td style="text-align: right;">17</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="even">
<td style="text-align: left; padding-left: 2em;" data-indentlevel="1">r</td>
<td style="text-align: right;">14</td>
<td style="text-align: right;">21.29</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">26</td>
</tr>
</tbody>
</table>


</div>
</div>
</div>
<div id="tabset-2-4" class="tab-pane" aria-labelledby="tabset-2-4-tab">
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(flextable)</span>
<span id="cb10-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'flextable' was built under R version 4.2.3</span></span>
<span id="cb10-3"></span>
<span id="cb10-4">cars_summary <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(</span>
<span id="cb10-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> year,</span>
<span id="cb10-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drv,</span>
<span id="cb10-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> n,</span>
<span id="cb10-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> avg_mpg,</span>
<span id="cb10-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Median"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> median_mpg,</span>
<span id="cb10-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> min_mpg,</span>
<span id="cb10-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Maximum"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> max_mpg</span>
<span id="cb10-13">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(Year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">flextable</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colformat_double</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Highway MPG"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colwidths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">align</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">part =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"header"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_v</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valign</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">j =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>)</span></code></pre></div>
<div class="cell-output-display">

<div class="tabwid"><style>.cl-eb31cfb4{}.cl-eaff393c{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-eb10659a{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eb1065b8{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eb1065c2{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eb1065cc{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eb10cc6a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10cc7e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10cc88{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10cdf0{width:0.75in;background-color:transparent;vertical-align: top;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10ce04{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10ce0e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10ce18{width:0.75in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10ce22{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eb10ce2c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-eb31cfb4"><caption><p>Flextable example</p></caption><thead><tr style="overflow-wrap:break-word;"><th colspan="3" class="cl-eb10cc6a"><p class="cl-eb10659a"><span class="cl-eaff393c"> </span></p></th><th colspan="4" class="cl-eb10cc6a"><p class="cl-eb10659a"><span class="cl-eaff393c">Highway MPG</span></p></th></tr><tr style="overflow-wrap:break-word;"><th class="cl-eb10cc7e"><p class="cl-eb1065b8"><span class="cl-eaff393c">Year</span></p></th><th class="cl-eb10cc7e"><p class="cl-eb1065b8"><span class="cl-eaff393c">Drive</span></p></th><th class="cl-eb10cc88"><p class="cl-eb1065c2"><span class="cl-eaff393c">N</span></p></th><th class="cl-eb10cc88"><p class="cl-eb1065c2"><span class="cl-eaff393c">Average</span></p></th><th class="cl-eb10cc88"><p class="cl-eb1065c2"><span class="cl-eaff393c">Median</span></p></th><th class="cl-eb10cc88"><p class="cl-eb1065c2"><span class="cl-eaff393c">Minimum</span></p></th><th class="cl-eb10cc88"><p class="cl-eb1065c2"><span class="cl-eaff393c">Maximum</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td rowspan="3" class="cl-eb10cdf0"><p class="cl-eb1065cc"><span class="cl-eaff393c">1999</span></p></td><td class="cl-eb10ce04"><p class="cl-eb1065b8"><span class="cl-eaff393c">4</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">49</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">18.84</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">17</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">15</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">26</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-eb10ce04"><p class="cl-eb1065b8"><span class="cl-eaff393c">f</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">57</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">27.91</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">26</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">21</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">44</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-eb10ce04"><p class="cl-eb1065b8"><span class="cl-eaff393c">r</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">11</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">20.64</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">21</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">16</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">26</span></p></td></tr><tr style="overflow-wrap:break-word;"><td rowspan="3" class="cl-eb10cdf0"><p class="cl-eb1065cc"><span class="cl-eaff393c">2008</span></p></td><td class="cl-eb10ce04"><p class="cl-eb1065b8"><span class="cl-eaff393c">4</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">54</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">19.48</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">19</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">12</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">28</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-eb10ce04"><p class="cl-eb1065b8"><span class="cl-eaff393c">f</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">49</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">28.45</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">29</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">17</span></p></td><td class="cl-eb10ce0e"><p class="cl-eb1065c2"><span class="cl-eaff393c">37</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-eb10ce22"><p class="cl-eb1065b8"><span class="cl-eaff393c">r</span></p></td><td class="cl-eb10ce2c"><p class="cl-eb1065c2"><span class="cl-eaff393c">14</span></p></td><td class="cl-eb10ce2c"><p class="cl-eb1065c2"><span class="cl-eaff393c">21.29</span></p></td><td class="cl-eb10ce2c"><p class="cl-eb1065c2"><span class="cl-eaff393c">21</span></p></td><td class="cl-eb10ce2c"><p class="cl-eb1065c2"><span class="cl-eaff393c">15</span></p></td><td class="cl-eb10ce2c"><p class="cl-eb1065c2"><span class="cl-eaff393c">26</span></p></td></tr></tbody></table></div>
</div>
</div>
</div>
</div>
</div>
<p>You can also create more specialized tables for specific situations, like side-by-side regression results tables with <a href="https://vincentarelbundock.github.io/modelsummary/">{modelsummary}</a> (which uses {gt}, {kableExtra}, or {flextable} behind the scenes)</p>
<div class="cell no-stripe" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(modelsummary)</span>
<span id="cb11-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'modelsummary' was built under R version 4.2.3</span></span>
<span id="cb11-3"></span>
<span id="cb11-4">model1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(hwy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg)</span>
<span id="cb11-5">model2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(hwy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> displ <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg)</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelsummary</span>(</span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(model1, model2),</span>
<span id="cb11-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stars =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb11-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rename the coefficients</span></span>
<span id="cb11-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coef_rename =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb11-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(Intercept)"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intercept"</span>,</span>
<span id="cb11-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"displ"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Displacement"</span>,</span>
<span id="cb11-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drvf"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive (front)"</span>,</span>
<span id="cb11-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drvr"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive (rear)"</span>),</span>
<span id="cb11-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get rid of some of the extra goodness-of-fit statistics</span></span>
<span id="cb11-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gof_omit =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IC|RMSE|F|Log"</span>,</span>
<span id="cb11-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use {gt}</span></span>
<span id="cb11-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gt"</span></span>
<span id="cb11-20">)</span></code></pre></div>
<div class="cell-output-display">

<div id="womwpxaude" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#womwpxaude table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#womwpxaude thead, #womwpxaude tbody, #womwpxaude tfoot, #womwpxaude tr, #womwpxaude td, #womwpxaude th {
  border-style: none;
}

#womwpxaude p {
  margin: 0;
  padding: 0;
}

#womwpxaude .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#womwpxaude .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#womwpxaude .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#womwpxaude .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#womwpxaude .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#womwpxaude .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#womwpxaude .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#womwpxaude .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#womwpxaude .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#womwpxaude .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#womwpxaude .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#womwpxaude .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#womwpxaude .gt_spanner_row {
  border-bottom-style: hidden;
}

#womwpxaude .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#womwpxaude .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#womwpxaude .gt_from_md > :first-child {
  margin-top: 0;
}

#womwpxaude .gt_from_md > :last-child {
  margin-bottom: 0;
}

#womwpxaude .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#womwpxaude .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#womwpxaude .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#womwpxaude .gt_row_group_first td {
  border-top-width: 2px;
}

#womwpxaude .gt_row_group_first th {
  border-top-width: 2px;
}

#womwpxaude .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#womwpxaude .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#womwpxaude .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#womwpxaude .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#womwpxaude .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#womwpxaude .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#womwpxaude .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#womwpxaude .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#womwpxaude .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#womwpxaude .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#womwpxaude .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#womwpxaude .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#womwpxaude .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#womwpxaude .gt_left {
  text-align: left;
}

#womwpxaude .gt_center {
  text-align: center;
}

#womwpxaude .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#womwpxaude .gt_font_normal {
  font-weight: normal;
}

#womwpxaude .gt_font_bold {
  font-weight: bold;
}

#womwpxaude .gt_font_italic {
  font-style: italic;
}

#womwpxaude .gt_super {
  font-size: 65%;
}

#womwpxaude .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#womwpxaude .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#womwpxaude .gt_indent_1 {
  text-indent: 5px;
}

#womwpxaude .gt_indent_2 {
  text-indent: 10px;
}

#womwpxaude .gt_indent_3 {
  text-indent: 15px;
}

#womwpxaude .gt_indent_4 {
  text-indent: 20px;
}

#womwpxaude .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=" "> </th>
      <th class="gt_col_heading gt_columns_bottom_border gt_center" rowspan="1" colspan="1" scope="col" id="(1)">(1)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_center" rowspan="1" colspan="1" scope="col" id="(2)">(2)</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="" class="gt_row gt_left">Intercept</td>
<td headers="(1)" class="gt_row gt_center">35.698***</td>
<td headers="(2)" class="gt_row gt_center">30.825***</td></tr>
    <tr><td headers="" class="gt_row gt_left"></td>
<td headers="(1)" class="gt_row gt_center">(0.720)</td>
<td headers="(2)" class="gt_row gt_center">(0.924)</td></tr>
    <tr><td headers="" class="gt_row gt_left">Displacement</td>
<td headers="(1)" class="gt_row gt_center">-3.531***</td>
<td headers="(2)" class="gt_row gt_center">-2.914***</td></tr>
    <tr><td headers="" class="gt_row gt_left"></td>
<td headers="(1)" class="gt_row gt_center">(0.195)</td>
<td headers="(2)" class="gt_row gt_center">(0.218)</td></tr>
    <tr><td headers="" class="gt_row gt_left">Drive (front)</td>
<td headers="(1)" class="gt_row gt_center"></td>
<td headers="(2)" class="gt_row gt_center">4.791***</td></tr>
    <tr><td headers="" class="gt_row gt_left"></td>
<td headers="(1)" class="gt_row gt_center"></td>
<td headers="(2)" class="gt_row gt_center">(0.530)</td></tr>
    <tr><td headers="" class="gt_row gt_left">Drive (rear)</td>
<td headers="(1)" class="gt_row gt_center"></td>
<td headers="(2)" class="gt_row gt_center">5.258***</td></tr>
    <tr><td headers="" class="gt_row gt_left" style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;"></td>
<td headers="(1)" class="gt_row gt_center" style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;"></td>
<td headers="(2)" class="gt_row gt_center" style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;">(0.734)</td></tr>
    <tr><td headers="" class="gt_row gt_left">Num.Obs.</td>
<td headers="(1)" class="gt_row gt_center">234</td>
<td headers="(2)" class="gt_row gt_center">234</td></tr>
    <tr><td headers="" class="gt_row gt_left">R2</td>
<td headers="(1)" class="gt_row gt_center">0.587</td>
<td headers="(2)" class="gt_row gt_center">0.736</td></tr>
    <tr><td headers="" class="gt_row gt_left">R2 Adj.</td>
<td headers="(1)" class="gt_row gt_center">0.585</td>
<td headers="(2)" class="gt_row gt_center">0.732</td></tr>
  </tbody>
  <tfoot class="gt_sourcenotes">
    <tr>
      <td class="gt_sourcenote" colspan="3">+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</td>
    </tr>
  </tfoot>
  
</table>
</div>
</div>
</div>
</section>
<section id="double-encoding-and-excessive-legends" class="level3">
<h3 class="anchored" data-anchor-id="double-encoding-and-excessive-legends">Double encoding and excessive legends</h3>
<p>As you’ve read, double encoding aesthetics can be helpful for accessibility and printing reasons—for instance, if points have colors and shapes, they’re still readable by people who are colorblind or if the image is printed in black and white:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/double-encoding-example-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Sometimes the double encoding can be excessive though, and you can safely remove legends. For example, in exercises 3 and 4, you made bar charts showing counts of different things (words spoken in <em>The Lord of the Rings</em>; pandemic-era construction projects in New York City), and lots of you colored the bars, which is great!</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">car_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(drv) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(car_counts, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/car-example-legend-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Car drive here is double encoded: it’s on the x-axis and it’s the fill. That’s great, but having the legend here is actually a little excessive. Both the x-axis and the legend tell us what the different colors of drives are (four-, front-, and rear-wheeled drives), so we can safely remove the legend and get a little more space in the plot area:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(car_counts, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/car-example-no-legend-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="legends-are-cool-but-ive-read-that-directly-labeling-things-can-be-better.-is-there-a-way-to-label-things-without-a-legend" class="level3">
<h3 class="anchored" data-anchor-id="legends-are-cool-but-ive-read-that-directly-labeling-things-can-be-better.-is-there-a-way-to-label-things-without-a-legend">Legends are cool, but I’ve read that directly labeling things can be better. Is there a way to label things without a legend?</h3>
<p>Yes! Later in the semester we’ll cover <a href="../content/09-content.html">annotations</a>, but in the meantime, you can check out a couple packages that let you directly label geoms that have been mapped to aesthetics.</p>
<section id="geomtextpath" class="level4">
<h4 class="anchored" data-anchor-id="geomtextpath">{geomtextpath}</h4>
<p>The <a href="https://allancameron.github.io/geomtextpath/">{geomtextpath}</a> package lets you add labels directly to paths and lines with functions like <code>geom_textline()</code> and <code>geom_labelline()</code> and <code>geom_labelsmooth()</code>.</p>
<p>Like, here’s the relationship between penguin bill lengths and penguin weights across three different species:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This isn't on CRAN, so you need to install it by running this:</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github("AllanCameron/geomtextpath")</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geomtextpath)</span>
<span id="cb15-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'geomtextpath' was built under R version 4.2.3</span></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Penguin data</span></span>
<span id="cb15-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'palmerpenguins' was built under R version 4.2.3</span></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get rid of the rows that are missing sex</span></span>
<span id="cb15-9">penguins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> penguins <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(sex)</span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb15-12">  penguins, </span>
<span id="cb15-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)</span>
<span id="cb15-14">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the points a little bit transparent</span></span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_labelsmooth</span>(</span>
<span id="cb15-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> species), </span>
<span id="cb15-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This spreads the letters out a bit</span></span>
<span id="cb15-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text_smoothing =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb15-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off the legend bc we don't need it now</span></span>
<span id="cb15-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/penguin-textpath-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>And the average continent-level life expectancy across time:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)</span>
<span id="cb16-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'gapminder' was built under R version 4.2.3</span></span>
<span id="cb16-3"></span>
<span id="cb16-4">gapminder_lifeexp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(continent, year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_lifeexp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(lifeExp))</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb16-9">  gapminder_lifeexp, </span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> avg_lifeexp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> continent)</span>
<span id="cb16-11">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_textline</span>(</span>
<span id="cb16-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> continent),</span>
<span id="cb16-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb16-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/gapminder-textpath-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="ggdirectlabel" class="level4">
<h4 class="anchored" data-anchor-id="ggdirectlabel">{ggdirectlabel}</h4>
<p>A new package named <a href="https://github.com/MattCowgill/ggdirectlabel">{ggdirectlabel}</a> lets you add legends directly to your plot area:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This also isn't on CRAN, so you need to install it by running this:</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github("MattCowgill/ggdirectlabel")</span></span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdirectlabel)</span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb17-6">  penguins, </span>
<span id="cb17-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> species)</span>
<span id="cb17-8">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_richlegend</span>(</span>
<span id="cb17-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> species),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the species as the fake legend labels</span></span>
<span id="cb17-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put it in the top left</span></span>
<span id="cb17-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make the text left-aligned (horizontal adjustment, or hjust)</span></span>
<span id="cb17-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05_files/figure-html/penguins-directlabel-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-27_faqs_week-05.html</guid>
  <pubDate>Wed, 27 Sep 2023 19:16:00 GMT</pubDate>
</item>
<item>
  <title>Week 4 FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Great work this week with the essential construction data from exercise 4! It was a big dataset and you were able to show some interesting patterns with neat plots!</p>
<p>Just a few FAQs this week—enjoy!</p>
<section id="how-can-i-make-my-r-code-more-readable" class="level3">
<h3 class="anchored" data-anchor-id="how-can-i-make-my-r-code-more-readable">How can I make my R code more readable?</h3>
<p><em>(<a href="../news/2023-09-12_general-tips.html#code-style">This was a tip from last week</a>, but it’s a good reminder.)</em></p>
<p>Unlike other programming langauges, R is pretty forgiving about code style. You can have lines of code that are indented however you want, that are as long as you want, and that have line breaks generally wherever you want.</p>
<p>There are some basic grammar-like guidelines you can follow to make your code more readable, more consistent, and easier for people to follow. <a href="../resource/style.html">I’ve compiled a mini style guide here</a>—you should check it out and try implementing the suggestsions.</p>
</section>
<section id="my-axis-labels-are-overlapping-and-ugly.-how-can-i-fix-that" class="level3">
<h3 class="anchored" data-anchor-id="my-axis-labels-are-overlapping-and-ugly.-how-can-i-fix-that">My axis labels are overlapping and ugly. How can I fix that?</h3>
<p><em>(<a href="../news/2023-09-12_faqs_week-03.html#why-are-my-axis-labels-all-crowded-and-on-top-of-each-other-how-do-i-fix-that">This was a question from last week too</a>, but lots of you asked about it again)</em></p>
<p>Sometimes you’ll have text that is too long to fit comfortably as axis labels and the labels will overlap and be gross:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/https:/www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/index_files/figure-html/plot-the-problem-1.png" class="img-fluid figure-img" style="width:70.0%"></p>
<figcaption class="figure-caption">Overlapping axis labels</figcaption>
</figure>
</div>
<p><a href="https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/">Check out this blog post</a> for a bunch of different ways to fix this and make nicer labels, like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/https:/www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/index_files/figure-html/plot-auto-1.png" class="img-fluid figure-img" style="width:70.0%"></p>
<figcaption class="figure-caption">Non-overlapping axis labels</figcaption>
</figure>
</div>
</section>
<section id="why-did-we-need-to-group-a-second-time-when-calculating-the-proportions-for-the-heatmap" class="level3">
<h3 class="anchored" data-anchor-id="why-did-we-need-to-group-a-second-time-when-calculating-the-proportions-for-the-heatmap">Why did we need to group a second time when calculating the proportions for the heatmap?</h3>
<p>At the end of exercise 4, you created a heatmap showing the proportions of different types of construction projects across different boroughs. In the instructions, I said you’d need to use <code>group_by()</code> twice to get predictable proportions. Some of you have wondered what this means. Here’s a quick illustration.</p>
<p>When you group by a column, R splits your data into separate datasets behind the scenes, and when you use <code>summarize()</code>, it calculates summary statistics (averages, counts, medians, etc.) for each of those groups. So when you used <code>group_by(BOROUGH, CATEGORY)</code>, R made smaller datasets of Bronx Affordable Housing, Bronx Approved Work, Brooklyn Affordable Housing, Brooklyn Approved Work, and so on. Then when you used <code>summarize(total = n())</code>, you calculated the number of rows in each of those groups, thus giving you the number of projects per borough per category. That’s basic <code>group_by() %&gt;% summarize()</code> stuff.</p>
<p>Once you have a count of projects per borough, you have to decide how you want to calculate proportions. In particular, you need to figure out what your denominator is. Do you want the proportion of all projects within each borough (e.g.&nbsp;X% of projects in the Bronx are affordable housing, Y% in the Bronx are approved work, and so on until 100% of the projects in the Bronx are accounted for), so that each borough constitutes 100%? Do you want the proportion of boroughs for each project (e.g.&nbsp;X% of affordable housing projects are in the Bronx, Y% of affordable housing projects are in Brooklyn, and so on until 100% of the affordable housing projects are accounted for). <em>This</em> is where the second <code>group_by()</code> matters.</p>
<p>For example, if you group by borough and then use mutate to calculate the proportion, the proportion in each borough will add up to 100%. Notice the denominator column here—it’s unique to each borough (1169 for the Bronx, 2231 for Brooklyn, etc.).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">essential <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(BOROUGH, CATEGORY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalprojects =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(BOROUGH) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denominator =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(totalprojects),</span>
<span id="cb1-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">proportion =</span> totalprojects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator)</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # A tibble: 33 × 5</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # Groups:   BOROUGH [5]</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    BOROUGH  CATEGORY               totalprojects denominator proportion</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    &lt;fct&gt;    &lt;fct&gt;                          &lt;int&gt;       &lt;int&gt;      &lt;dbl&gt;</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  1 Bronx    Affordable Housing                80        1169   0.0684  </span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  2 Bronx    Approved Work                    518        1169   0.443   </span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  3 Bronx    Homeless Shelter                   1        1169   0.000855</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  4 Bronx    Hospital / Health Care            55        1169   0.0470  </span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  5 Bronx    Public Housing                   276        1169   0.236   </span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  6 Bronx    Schools                          229        1169   0.196   </span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  7 Bronx    Utility                           10        1169   0.00855 </span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  8 Brooklyn Affordable Housing               168        2231   0.0753  </span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  9 Brooklyn Approved Work                   1223        2231   0.548   </span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10 Brooklyn Hospital / Health Care            66        2231   0.0296  </span></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # … with 23 more rows</span></span></code></pre></div>
<p>If you group by category instead, the proportion within each category will add to 100%. Notice how the denominator for affordable housing is 372, approved work is 4189, and so on.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">essential <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(BOROUGH, CATEGORY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalprojects =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(CATEGORY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denominator =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(totalprojects),</span>
<span id="cb2-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">proportion =</span> totalprojects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator)</span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # A tibble: 33 × 5</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # Groups:   CATEGORY [7]</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    BOROUGH  CATEGORY               totalprojects denominator proportion</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    &lt;fct&gt;    &lt;fct&gt;                          &lt;int&gt;       &lt;int&gt;      &lt;dbl&gt;</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  1 Bronx    Affordable Housing                80         372      0.215</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  2 Bronx    Approved Work                    518        4189      0.124</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  3 Bronx    Homeless Shelter                   1           5      0.2  </span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  4 Bronx    Hospital / Health Care            55         259      0.212</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  5 Bronx    Public Housing                   276        1014      0.272</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  6 Bronx    Schools                          229        1280      0.179</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  7 Bronx    Utility                           10          90      0.111</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  8 Brooklyn Affordable Housing               168         372      0.452</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  9 Brooklyn Approved Work                   1223        4189      0.292</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10 Brooklyn Hospital / Health Care            66         259      0.255</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # … with 23 more rows</span></span></code></pre></div>
<p>You can also ungroup completely before calculating the proportion. This makes it so the entire proportion column adds to 100%:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">essential <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(BOROUGH, CATEGORY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalprojects =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denominator =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(totalprojects),</span>
<span id="cb3-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">proportion =</span> totalprojects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator)</span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # A tibble: 33 × 5</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    BOROUGH  CATEGORY               totalprojects denominator proportion</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    &lt;fct&gt;    &lt;fct&gt;                          &lt;int&gt;       &lt;int&gt;      &lt;dbl&gt;</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  1 Bronx    Affordable Housing                80        7209   0.0111  </span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  2 Bronx    Approved Work                    518        7209   0.0719  </span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  3 Bronx    Homeless Shelter                   1        7209   0.000139</span></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  4 Bronx    Hospital / Health Care            55        7209   0.00763 </span></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  5 Bronx    Public Housing                   276        7209   0.0383  </span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  6 Bronx    Schools                          229        7209   0.0318  </span></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  7 Bronx    Utility                           10        7209   0.00139 </span></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  8 Brooklyn Affordable Housing               168        7209   0.0233  </span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  9 Brooklyn Approved Work                   1223        7209   0.170   </span></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10 Brooklyn Hospital / Health Care            66        7209   0.00916 </span></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; # … with 23 more rows</span></span></code></pre></div>
<p>Which one you do is up to you—it depends on the story you’re trying to tell.</p>
</section>
<section id="why-isnt-the-example-code-using-data-whatever-and-mapping-aes-in-ggplot-anymore-do-we-not-have-to-use-argument-names" class="level3">
<h3 class="anchored" data-anchor-id="why-isnt-the-example-code-using-data-whatever-and-mapping-aes-in-ggplot-anymore-do-we-not-have-to-use-argument-names">Why isn’t the example code using <code>data = whatever</code> and <code>mapping = aes()</code> in <code>ggplot()</code> anymore? Do we not have to use argument names?</h3>
<p>In the first few sessions, you wrote code that looked like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>In R, you feed functions arguments like <code>data</code> and <code>mapping</code> and I was having you explicitly name the arguments, like <code>data = mpg</code> and <code>mapping = aes(...)</code>.</p>
<p>In general it’s a good idea to use named arguments, since it’s clearer what you mean.</p>
<p>However, with really common functions like <code>ggplot()</code>, you can actually skip the names. If you look at the documentation for <code>ggplot()</code> (i.e.&nbsp;run <code>?ggplot</code> in your R console or search for “ggplot” in the Help panel in RStudio), you’ll see that the first expected argument is <code>data</code> and the second is <code>mapping</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/ggplot-help-arguments.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">The documentation for the ggplot() function</figcaption>
</figure>
</div>
<p>If you don’t name the arguments, like this…</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>…<code>ggplot()</code> will assume that the first argument (<code>mpg</code>) really means <code>data = mpg</code> and that the second really means <code>mapping = aes(...)</code>.</p>
<p>If you don’t name the arguments, <strong>the order matters</strong>. This won’t work because ggplot will think that the <code>aes(...)</code> stuff is really <code>data = aes(...)</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy), mpg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>If you do name the arguments, <strong>the order <em>doesn’t</em> matter</strong>. This will work because it’s clear that <code>data = mpg</code> (even though this feels backwards and wrong):</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>This works with all R functions. You can either name the arguments and put them in whatever order you want, or you can not name them and use them in the order that’s listed in the documentation.</p>
<p><strong>In general, you should name your arguments for the sake of clarity.</strong> For instance, with <code>aes()</code>, the first argument is <code>x</code> and the second is <code>y</code>, so you can technically do this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(displ, hwy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>That’s nice and short, but you have to remember that <code>displ</code> is on the x-axis and <code>hwy</code> is on the y-axis. And it gets extra confusing once you start mapping other columns:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(displ, hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> hwy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
<p>All the other aesthetics like color and size are named, but x and y aren’t, which just feels… off.</p>
<p>So use argument names except for super common things like <code>ggplot()</code> and the {dplyr} verbs like <code>mutate()</code>, <code>group_by()</code>, <code>filter()</code>, etc.</p>
</section>
<section id="i-have-numbers-like-20000-and-want-them-formatted-with-commas-like-20000.-can-i-do-that-automatically" class="level3">
<h3 class="anchored" data-anchor-id="i-have-numbers-like-20000-and-want-them-formatted-with-commas-like-20000.-can-i-do-that-automatically">I have numbers like 20000 and want them formatted with commas like 20,000. Can I do that automatically?</h3>
<p>Yes you can! There’s an incredible package called <a href="https://scales.r-lib.org/">{scales}</a>. It lets you format numbers and axes and all sorts of things in magical ways. If you <a href="https://scales.r-lib.org/reference/index.html">look at the documentation</a>, you’ll see a ton of <code>label_SOMETHING()</code> functions, like <code>label_comma()</code>, <code>label_dollar()</code>, and <code>label_percent()</code>.</p>
<p>You can use these different labeling functions inside <code>scale_AESTHETIC_WHATEVER()</code> layers in ggplot.</p>
<p><code>label_comma()</code> adds commas:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb10-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'scales' was built under R version 4.2.3</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)</span>
<span id="cb10-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: package 'gapminder' was built under R version 4.2.3</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">gapminder_2007 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>)</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>())</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-comma-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p><code>label_dollar()</code> adds commas and includes a “$” prefix:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>())</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-dollar-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p><code>label_percent()</code> multiplies values by 100 and formats them as percents:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">gapminder_percents <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gapminder_2007 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n))</span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_percents, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> continent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> prop)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_percent</span>())</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-percent-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>You can also change a ton of the settings for these different labeling functions. Want to format something as Euros and use periods as the number separators instead of commas, like Europeans? Change the appropriate arguments! You can check the documentation for each of the <code>label_WHATEVER()</code> functions to see what you can adjust (<a href="https://scales.r-lib.org/reference/label_dollar.html">like <code>label_dollar()</code> here</a>)</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"€"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-euro-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>All the <code>label_WHATEVER()</code> functions actually create copies of themselves, so if you’re using lots of custom settings, you can create your own label function, like <code>label_euro()</code> here:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a custom labeling function</span></span>
<span id="cb14-2">label_euro <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"€"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use it on the x-axis</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(gapminder_2007, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> label_euro)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-euro-custom-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>These labeling functions also work with other aesthetics, like fill and color and size. Use them in <code>scale_AESTHETIC_WHATEVER()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb15-2">  gapminder_2007, </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lifeExp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> pop)</span>
<span id="cb15-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>())</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-scales-legends-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>There are also some really neat and fancy things you can do with scales, like formatting logged values, abbreviating long numbers, and many other things. <a href="https://www.andrewheiss.com/blog/2022/12/08/log10-natural-log-scales-ggplot/">Check out this post</a> for an example of working with logged values.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb16-2">  gapminder_2007, </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gdpPercap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lifeExp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> continent)</span>
<span id="cb16-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_log10</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb16-7">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_dollar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_short_scale</span>())) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_comma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale_cut =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut_short_scale</span>()))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04_files/figure-html/gapminder-scatter-fancy-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-19_faqs_week-04.html</guid>
  <pubDate>Tue, 19 Sep 2023 13:22:00 GMT</pubDate>
</item>
<item>
  <title>A few quick general R tips</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_general-tips.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>As I’ve been looking through your exercises, I’ve noticed a few little R issues that might sometimes be tripping you up. They’re super minor, but can make life easier:</p>
<section id="talking-about-packages-and-functions" class="level3">
<h3 class="anchored" data-anchor-id="talking-about-packages-and-functions">Talking about packages and functions</h3>
<p>You’ve probably noticed that on the course website here, I put package names in <code>{}</code>s, like {ggplot2} or {gghalves}. This is a normal convention in the R world—people generally either put package names in braces or in bold.</p>
<p>When writing about functions, I typically format them as code, followed by empty open and closed parentheses, like <code>geom_point()</code>. That signals that it’s actual runnable code and not the name of a package. Remember that you can format things like inline code by using single backticks.</p>
<p>For instance, this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">You can use `geom_point()` from {ggplot2} to make scatterplots.</span></code></pre></div>
<p>will knit into this:</p>
<ul>
<li>You can use <code>geom_point()</code> from {ggplot2} to make scatterplots.</li>
</ul>
</section>
<section id="nicer-ggplot2-documentation" class="level3">
<h3 class="anchored" data-anchor-id="nicer-ggplot2-documentation">Nicer {ggplot2} documentation</h3>
<p>The ggplot documentation within R (i.e.&nbsp;in the help panel) is good, but I find that it’s nicer to <a href="https://ggplot2.tidyverse.org/reference/index.html">use the documentation website</a>. It’s the same exact content, but the website version shows plots for each of the examples. Scroll down to the <a href="https://ggplot2.tidyverse.org/reference/geom_point.html#ref-examples">examples section for <code>geom_point()</code>, for instance</a>.</p>
</section>
<section id="installing-vs.-using-packages" class="level3">
<h3 class="anchored" data-anchor-id="installing-vs.-using-packages">Installing vs.&nbsp;using packages</h3>
<p>Make sure you don’t include code to install packages in your Rmd files. Like, don’t include <code>install.packages("gapminder")</code> or whatever. If you do, R will reinstall that package every time you knit your document, which is excessive. All you need to do is load the package with <code>library()</code>.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Installing and using packages
</div>
</div>
<div class="callout-body-container callout-body">
<p>You <strong>install</strong> packages <em>once</em> on your computer. You can do this either with <code>install.packages()</code> or by clicking on “Install package” in the “Packages” panel in RStudio:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only do this once on your computer! Don't include this line of code in a document</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gapminder"</span>)</span></code></pre></div>
<p>You <strong>load</strong> packages <em>every time</em> you want to use functions or data from that package in your R session.:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This loads the gapminder package and lets you use it</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gapminder)</span></code></pre></div>
</div>
</div>
</section>
<section id="the-tidyverse-package-shortcut" class="level3">
<h3 class="anchored" data-anchor-id="the-tidyverse-package-shortcut">The tidyverse package shortcut</h3>
<p>When you run <code>library(tidyverse)</code>, R shows a message that says it has loaded 9 packages:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">── Attaching core tidyverse packages ────────────────────── tidyverse 2.0.0 ──</span>
<span id="cb4-2">✔ dplyr     1.1.2     ✔ readr     2.1.4</span>
<span id="cb4-3">✔ forcats   1.0.0     ✔ stringr   1.5.0</span>
<span id="cb4-4">✔ ggplot2   3.4.2     ✔ tibble    3.2.1</span>
<span id="cb4-5">✔ lubridate 1.9.2     ✔ tidyr     1.3.0</span>
<span id="cb4-6">✔ purrr     1.0.1     </span></code></pre></div>
<p>The tidyverse package developers have found that those 9 are some of the most common packages that people use, so they created <code>library(tidyverse)</code> as a shortcut for loading them all at the same time. Alternatively, you could start your documents like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(forcats)</span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc.</span></span></code></pre></div>
<p>But that’s a <em>lot</em> of typing. It’s easier to just do <code>library(tidyverse)</code></p>
<p>If you load the tidyverse package, you don’t need to load those 9 individual packages. Doing this is entirely redundant:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is alreaady loaded bc tidyverse</span></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is also already loaded bc tidyverse</span></span></code></pre></div>
<p>I’ve tried to point out in your exercises if/when you do this</p>
</section>
<section id="chunk-labels" class="level3">
<h3 class="anchored" data-anchor-id="chunk-labels">Chunk labels</h3>
<p><a href="../resource/rmarkdown.html#chunk-names">Labeling your R chunks is a good thing to do</a>, since it helps with document navigation and is generally good practice. If you’re using chunk labels <strong>make sure you don’t use spaces</strong> in them. R will still knit a document with spaceful names, but it converts the spaces to underscores before doing it. So instead of naming chunks like <code>{r My Neat Chunk, message=FALSE}</code>, use something like <code>{r my-neat-chunk}</code> or <code>{r my_neat_chunk}</code>.</p>
</section>
<section id="code-style" class="level3">
<h3 class="anchored" data-anchor-id="code-style">Code style</h3>
<p>Unlike other programming languages (grumbles at Python), R is fairly forgiving with the style of the code you write. You can have extra spaces, you can omit spaces, you can indent things however you want, etc.</p>
<p>But if you want to write readable code (you do!) and write code that others can work with (you do!), you should follow some basic style guidelines. <a href="../resource/style.html">I’ve summarized a few of the most important ones here</a>.</p>
<p>I’m never going to grade you on any of this, by the way! These are just a set of best practices that you should get into the habit of using.</p>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_general-tips.html</guid>
  <pubDate>Wed, 13 Sep 2023 00:20:00 GMT</pubDate>
</item>
<item>
  <title>Deadlines, late work, and student hours</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_deadlines-late-work.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>One quick reminder about my late work policy, since I’ve been getting a lot of Slack messages and e-mails about it.</p>
<p><a href="../syllabus.html#late-work">Recall from the syllabus</a> that with the exception of the mini projects and final project, there are no actual hard and fast deadlines in this class. If you need to turn an exercise in late, cool. I might not be able to get you feedback if stuff comes in too late, but you’ll still get full credit. <strong>There’s no penalty for late work.</strong></p>
<p>Also, remember from the syllabus that <a href="../syllabus.html#student-hours">I have really open student hours</a>. If you want to meet with me for help or for whatever reason, <a href="https://calendly.com/andrewheiss/">sign up for a time at my Calendly page</a>. You can also access that link at the <a href="../">home page of the course website</a> and <a href="../syllabus.html">at the top of the syllabus page</a></p>



 ]]></description>
  <category>advice</category>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_deadlines-late-work.html</guid>
  <pubDate>Wed, 13 Sep 2023 00:19:00 GMT</pubDate>
</item>
<item>
  <title>Week 3 FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Many of you had similar questions and I left lots of similar comments and tips on iCollege, so I’ve compiled the most common issues here. There are a bunch here, but they’re hopefully all useful.</p>
<section id="why-are-my-axis-labels-all-crowded-and-on-top-of-each-other-how-do-i-fix-that" class="level3">
<h3 class="anchored" data-anchor-id="why-are-my-axis-labels-all-crowded-and-on-top-of-each-other-how-do-i-fix-that">Why are my axis labels all crowded and on top of each other? How do I fix that?</h3>
<p>This was a common problem with the LOTR data and it will be a problem with exercise 4 (and future assignments too)—categories on the x-axis often overlap when you knit your document. That’s because there’s not enough room to fit them all comfortably in a standard image size. Fortunately there are a few quick and easy ways to fix this, such as changing the width of the image (see below), rotating the labels, dodging the labels, or (my favorite!) automatically adding line breaks to the labels so they don’t overlap. <a href="https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/">This blog post</a> (by me) has super quick examples of all these different (easy!) approaches.</p>
</section>
<section id="how-can-i-add-a-line-break-to-the-text-in-my-plot" class="level3">
<h3 class="anchored" data-anchor-id="how-can-i-add-a-line-break-to-the-text-in-my-plot">How can I add a line break to the text in my plot?</h3>
<p>If you don’t want to use the fancier techniques from <a href="https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/">the blog post about long labels</a>, a quick and easy way to deal with longer text is to manually insert a linebreak yourself. This is super easy: include a <code>\n</code> where you want a new line:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb1-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Everyone's favorite</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">example plot"</span>,</span>
<span id="cb1-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Displacement</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(proxy for car weight)"</span>,</span>
<span id="cb1-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MPG</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(highway)"</span>,</span>
<span id="cb1-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drive"</span></span>
<span id="cb1-8">  )</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/plot-line-break-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="how-can-i-control-the-dimensions-of-my-figures" class="level3">
<h3 class="anchored" data-anchor-id="how-can-i-control-the-dimensions-of-my-figures">How can I control the dimensions of my figures?</h3>
<p>By default, R creates plots that are 7″×7″ squares:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/initial-square-plot-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>Often, though, those plots are excessively large and can result in text that is too small and dimensions that feel off. You generally want to have better control over the dimensions of the figures you make. For instance, you can make them landscape when there’s lots of text involved. To do this, you can use the <code>fig.width</code> and <code>fig.height</code> chunk options to control the, um, width and height of the figures:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r landscape-plot, fig.width=5, fig.height=3}</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb3-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/landscape-plot-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>The dimensions are also reflected in RStudio itself when you’re working with inline images, so it’s easy to tinker with different values and rerun the chunk without needing to re-knit the whole document over and over again:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/img/fig-dimensions-rstudio.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="figure-caption">A 3″×5″ image in RStudio</figcaption>
</figure>
</div>
<section id="bonus-artsy-mathy-fun-golden-rectangles-and-golden-ratios" class="level4">
<h4 class="anchored" data-anchor-id="bonus-artsy-mathy-fun-golden-rectangles-and-golden-ratios">Bonus artsy mathy fun: Golden rectangles and golden ratios</h4>
<p>Because I’m a super nerd, I try to make the dimensions of all my landscape images be golden rectangles, which follow the <a href="https://en.wikipedia.org/wiki/Golden_ratio">golden ratio</a>—a <a href="https://slate.com/technology/2021/06/golden-ratio-phi-irrational-number-ellenberg-shape.html">really amazing ancient number</a> that gets used <a href="https://www.adobe.com/creativecloud/design/discover/golden-ratio.html">all the time in art and design</a>. <a href="https://www.youtube.com/watch?v=wTlw7fNcO-0">Check out this neat video</a> or <a href="https://www.youtube.com/watch?v=2tv6Ej6JVho">this one</a> to learn more.</p>
<p>Basically, a golden rectangle is a special rectangle where if you cut it at a specific point, you get a square and a smaller rectangle that is also a golden rectangle. You can then cut that smaller rectangle at the magic point and get another square and another even smaller golden rectangle, and so on.</p>
<p>More formally and mathematically, it’s a rectangle where the ratio of the height and width of the subshapes are special values. Note how here the blue square is a perfect square with side lengths <em>a</em>, while the red rectangle is another smaller golden rectangle with side lengths <em>a</em> and <em>b</em>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Ba%20+%20b%7D%7Ba%7D%20=%20%5Cfrac%7Ba%7D%7Bb%7D%20=%20%5Cphi%0A"></p>
<div class="cell" data-layout-align="center">
<pre><code>## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database</code></pre>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/golden-rectangle-1.png" class="img-fluid figure-img" style="width:40.0%"></p>
</figure>
</div>
</div>
</div>
<p>It turns out that if you do the algebra to figure out that ratio or <img src="https://latex.codecogs.com/png.latex?%5Cphi"> (the Greek letter “phi,” pronounced as either “fee” or “fie”), it’s this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cphi%20=%20%5Cfrac%7B1%20+%20%5Csqrt%7B5%7D%7D%7B2%7D%20%5Capprox%201.618%0A"></p>
<p>That’s all really mathy, but it’s really just a matter of using that 1.618 number with whatever dimensions you want. For instance, if I want my image to be 6 inches wide, I’ll divide it by <img src="https://latex.codecogs.com/png.latex?%5Cphi"> or 1.618 (or multiply it by 0.618, which is the same thing) to find the height to make a golden rectangle: <strong>6 inches × 0.618 = 3.708 = 3.7 inches</strong></p>
<p>R can even do the math for you in the chunk options:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r landscape-plot-golden, fig.width=6, fig.height=(6 / 1.618)}</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> displ, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hwy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb5-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/landscape-plot-golden-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Shortcut
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you can’t remember that the magic golden ratio <img src="https://latex.codecogs.com/png.latex?%5Cphi"> is 1.618 or the gross complicated <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%20+%20%5Csqrt%7B5%7D%7D%7B2%7D">, you can cheat a little and remember <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B5%7D%7B3%7D">, which is 1.667, which is often close enough.</p>
</div>
</div>
<p>I don’t do this with <em>all</em> my figures, and I often have to fudge the numbers a bit when there are titles and subtitles (i.e.&nbsp;making the height a little taller so that the rectangle around just the plot area still roughly follows the golden ratio), but it makes nice rectangles and <a href="https://www.youtube.com/watch?v=DrQqajtiRt4">I just think they’re neat</a>.</p>
<p>For bonus fun, if you draw a curve between the opposite corners of each square of the golden rectangles, you get something called the <a href="https://en.wikipedia.org/wiki/Golden_spiral">golden spiral or Fibonacci spiral</a>, which is replicated throughout nature and art. Graphic designers and artists often make the dimensions of their work fit in golden rectangles and will sometimes even overlay a golden spiral over their work and lay out text and images in specific squares and rectangles. See <a href="https://www.adobe.com/creativecloud/design/discover/golden-ratio.html">this</a> and <a href="https://www.canva.com/learn/what-is-the-golden-ratio/">this</a> for some examples.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/golden-rectangle-spiral-1.png" class="img-fluid figure-img" style="width:40.0%"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="whats-the-difference-between-geom_bar-and-geom_col" class="level3">
<h3 class="anchored" data-anchor-id="whats-the-difference-between-geom_bar-and-geom_col">What’s the difference between <code>geom_bar()</code> and <code>geom_col()</code>?</h3>
<p>In exercise 3, you made lots of bar charts to show the counts of words spoken in <em>The Lord of the Rings</em> movies. To do this, you used <code>geom_col()</code> to add columns to the plots. However, confusingly ggplot has another geom layer named <code>geom_bar()</code>, which you’d understandably think you could use to make a bar chart. If you tried using it, though, it probably didn’t work.</p>
<p><strong>Both <code>geom_col()</code> and <code>geom_bar()</code> make bar graphs, but there’s a subtle difference between the two: with <code>geom_col()</code>, you have to specify both an <code>x</code> and a <code>y</code> aesthetic; with <code>geom_bar()</code>, you only specify an <code>x</code> aesthetic and ggplot automatically figures out the <code>y</code> for you.</strong></p>
<p>Here’s a quick example using the <code>mpg</code> data. Let’s say you want to make a plot that shows the count of cars with different drives (front, rear, and four). With <code>geom_col()</code>, you’re in charge of calculating those totals first before plotting, typically with <code>group_by() %&gt;% summarize()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a count of cars by drive</span></span>
<span id="cb6-2">cars_by_drive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(drv) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify both x and y</span></span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cars_by_drive, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> total)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/geom-col-example-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>You can make that same plot with <code>geom_bar()</code> instead and let ggplot handle the counting:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the full dataset and only specify x, not y</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mpg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/geom-bar-example-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>It seems like you’d always want to use <code>geom_bar()</code> since the code is so much shorter and you can outsource a lot of the work to ggplot—there’s no need to use <code>group_by()</code> and <code>summarize()</code> and do extra calculations! But that’s not necessarily the case!</p>
<p>Personally, I prefer to use <code>geom_col()</code> and do my own calculations anyway because it gives me more control over what is getting calculated. For instance, if I want to plot percentages instead of counts, it’s far easier to do that in a separate dataset than somehow hack <code>geom_bar()</code> into showing percents. Or if I want to group by multiple things, it’s easier to do that with <code>group_by()</code> instead of tricking <code>geom_bar()</code> into getting it right. Plus I can look at the intermediate <code>cars_by_drive</code> data before plotting to make sure everything was calculated correctly.</p>
<p>For instance, if I want to find the proportion of car drives across the two different years in the dataset, it’s a lot easier to create my own y variable with <code>group_by() %&gt;% summarize()</code> and use <code>geom_col()</code> instead of fiddling around with the automatic settings of <code>geom_bar()</code>:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">cars_drive_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make year a categorical variable instead of a number</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(drv, year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group by year to get the proportions of drives within each year</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> total <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(total))</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify x and y and use geom_col()</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cars_drive_year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> drv)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03_files/figure-html/geom-col-fancy-example-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="whats-the-difference-between-read_csv-vs.-read.csv" class="level3">
<h3 class="anchored" data-anchor-id="whats-the-difference-between-read_csv-vs.-read.csv">What’s the difference between <code>read_csv()</code> vs.&nbsp;<code>read.csv()</code>?</h3>
<p>In all the code I’ve given you in this class, you’ve loaded CSV files using <code>read_csv()</code>, with an underscore. In lots of online examples of R code, and in lots of other peoples’ code, you’ll see <code>read.csv()</code> with a period. They both load CSV files into R, but there are subtle differences between them.</p>
<p><code>read.csv()</code> (read dot csv) is a core part of R and requires no external packages (we say that it’s part of “base R”). It loads CSV files. That’s its job. However, it can be slow with big files, and it can sometimes read text data in as categorical data, which is weird (that’s less of an issue since R 4.0; it was a <em>major</em> headache in the days before R 4.0). It also makes ugly column names when there are “illegal” columns in the CSV file—it replaces all the illegal characters with <code>.</code>s</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Legal column names
</div>
</div>
<div class="callout-body-container callout-body">
<p>R technically doesn’t allow column names that (1) have spaces in them or (2) start with numbers.</p>
<p>You can still access or use or create column names that do this if you wrap the names in backticks, like this:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(drv) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">A column with spaces</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(hwy))</span>
<span id="cb9-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## # A tibble: 3 × 2</span></span>
<span id="cb9-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   drv   `A column with spaces`</span></span>
<span id="cb9-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##   &lt;chr&gt;                  &lt;dbl&gt;</span></span>
<span id="cb9-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 1 4                       19.2</span></span>
<span id="cb9-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 2 f                       28.2</span></span>
<span id="cb9-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 3 r                       21</span></span></code></pre></div>
</div>
</div>
</div>
<p><code>read_csv()</code> (read underscore csv) comes from {readr}, which is one of the 9 packages that get loaded when you run <code>library(tidyverse)</code>. Think of it as a new and improved version of <code>read.csv()</code>. It handles big files a better, it doesn’t ever read text data in as categorical data, and it does a better job at figuring out what kinds of columns are which (if it detects something that looks like a date, it’ll treat it as a date). It also doesn’t rename any columns—if there are illegal characters like spaces, it’ll keep them for you, which is nice.</p>
<p>Moral of the story: <strong>use <code>read_csv()</code> instead of <code>read.csv()</code></strong>. It’s nicer.</p>
</section>
<section id="why-does-r-keep-yelling-at-me-with-warnings-and-messages" class="level3">
<h3 class="anchored" data-anchor-id="why-does-r-keep-yelling-at-me-with-warnings-and-messages">Why does R keep yelling at me with warnings and messages?</h3>
<p>By now you’ve seen ominous looking red text in R, like <code>'summarise()' has grouped output by 'Gender'. You can override using the '.groups' argument</code> or <code>Warning: Removed 2 rows containing missing values</code>, and so on. You might have panicked a little after seeing this and thought you were doing something wrong.</p>
<p>Never fear! You’re most likely not doing anything wrong.</p>
<p>R shows red text in the console pane in three different situations:</p>
<ul>
<li><strong>Errors</strong>: When the red text is a legitimate error, it will be prefaced with “Error in…” and will try to explain what went wrong. Generally when there’s an error, the code will not run. For example, if you see <code>Error in ggplot(...) : could not find function "ggplot"</code>, it means that the <code>ggplot()</code> function is not accessible because the package that contains the function (<code>ggplot2</code>) was not loaded with <code>library(ggplot2)</code> (or <code>library(tidyverse)</code>, which loads <code>ggplot2</code>). Thus you cannot use the <code>ggplot()</code> function without the <code>ggplot2</code> package being loaded first.</li>
<li><strong>Warnings</strong>: When the red text is a warning, it will be prefaced with “Warning:” and R will try to explain why there’s a warning. Generally your code will still work, but with some caveats. For example if you create a scatterplot based on a dataset where two of the rows of data have missing entries that would be needed to create points in the scatterplot, you will see this warning: <code>Warning: Removed 2 rows containing missing values (geom_point)</code>. R will still produce the scatterplot with all the remaining non-missing values, but it is warning you that two of the points aren’t there.</li>
<li><strong>Messages</strong>: When the red text doesn’t start with either “Error” or “Warning”, it’s just a friendly message. You’ll see these messages when you load R packages or when you read data saved in spreadsheet files with <code>read_csv()</code>. These are helpful diagnostic messages and they don’t stop your code from working. This is what <code>'summarise()' has grouped output by 'Gender'...</code> is—just a helpful note.</li>
</ul>
<p>Remember, when you see red text in the console, don’t panic. It doesn’t necessarily mean anything is wrong. Rather:</p>
<ul>
<li>If the text starts with “Error”, figure out what’s causing it. Think of errors as a red traffic light: something is wrong!</li>
<li>If the text starts with “Warning”, figure out if it’s something to worry about. For instance, if you get a warning about missing values in a scatterplot and you know there are missing values, you’re fine. If that’s surprising, look at your data and see what’s missing. Think of warnings as a yellow traffic light: everything is working fine, but watch out/pay attention.</li>
<li>Otherwise, the text is just a message. Read it, wave back at R, and thank it for talking to you. Think of messages as a green traffic light: everything is working fine and keep on going!</li>
</ul>
</section>
<section id="how-can-i-hide-warnings-and-messages" class="level3">
<h3 class="anchored" data-anchor-id="how-can-i-hide-warnings-and-messages">How can I hide warnings and messages?</h3>
<p>In general, you’ll want to try to deal with errors and warnings, often by adjusting or clarifying something in your code. In your final knitted documents, you typically want to have nice clean output without any warnings or messages. You can fix these warnings and messages in a couple ways: (1) change your code to deal with them, or (2) just hide them.</p>
<p>For instance, if you do something like this to turn off the fill legend:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Not actual code; don't try to run this</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> whatever, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> blah, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> blah, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> blah)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>You’ll get this warning:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Warning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use "none" </span></span>
<span id="cb11-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## instead as of ggplot2 3.3.4.</span></span>
<span id="cb11-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## This warning is displayed once every 8 hours.</span></span>
<span id="cb11-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was</span></span>
<span id="cb11-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## generated.</span></span></code></pre></div>
<p>You’ll still get a plot and the fill legend will be gone and that’s great, but the warning is telling you that that code has been deprecated and is getting phased out and will eventually stop working. ggplot helpfully tells you how to fix it: use <code>guides(fill = "none")</code> instead. Changing that code removes the warning and everything will work just fine:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Not actual code; don't try to run this</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> whatever, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> blah, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> blah, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> blah)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<p>In other cases, though, nothing’s wrong and R is just being talkative. For instance, when you load {tidyverse}, you get a big wall of text:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb13-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0 ──</span></span>
<span id="cb13-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ dplyr     1.1.2     ✔ readr     2.1.4</span></span>
<span id="cb13-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ forcats   1.0.0     ✔ stringr   1.5.0</span></span>
<span id="cb13-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ ggplot2   3.4.2     ✔ tibble    3.2.1</span></span>
<span id="cb13-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0</span></span>
<span id="cb13-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✔ purrr     1.0.1     </span></span>
<span id="cb13-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──</span></span>
<span id="cb13-9"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✖ dplyr::filter() masks stats::filter()</span></span>
<span id="cb13-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ✖ dplyr::lag()    masks stats::lag()</span></span>
<span id="cb13-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ℹ Use the conflicted package to force all conflicts to become errors</span></span></code></pre></div>
</div>
<p>That’s all helpful information—it tells you that R loaded 9 related packages for you ({ggplot2}, {dplyr}, etc.). But none of that needs to be in a knitted document. You can turn off those messages and warnings using chunk options:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb14-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r load-packages, warning=FALSE, message=FALSE}</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb14-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</div>
<p>The same technique works for other messages too. In exercise 3, for instance, you saw this message a lot:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## `summarise()` has grouped output by 'Gender'. </span></span>
<span id="cb15-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## You can override using the .groups` argument.</span></span></code></pre></div>
<p>That’s nothing bad and you did nothing wrong—that’s just R talking to you and telling you that it did something behind the scenes. When you use <code>group_by()</code> with one variable, like <code>group_by(Gender)</code>, once you’re done summarizing and working with the groups, R ungroups your data automatically. When you use <code>group_by()</code> with two variables, like <code>group_by(Gender, Film)</code>, once you’re done summarizing and working with the groups, R ungroups the last of the variables and gives you a data frame that is still grouped by the other variables. So with <code>group_by(Gender, Film)</code>, after you’ve summarized stuff, R stops grouping by <code>Film</code> and groups by just <code>Gender</code>. That’s all the <code>summarise() has grouped output by...</code> message is doing—it’s telling you that it’s still grouped by something. It’s no big deal.</p>
<p>So, to get rid of the message in this case, you can use <code>message=FALSE</code> in the chunk options to disable the message:</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb16-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r lotr-use-two-groups, message=FALSE}</span></span>
<span id="cb16-2">lotr_gender_film <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lotr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Gender, Film) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(Words))</span>
<span id="cb16-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-12_faqs_week-03.html</guid>
  <pubDate>Wed, 13 Sep 2023 00:14:00 GMT</pubDate>
</item>
<item>
  <title>Zeroes in the gradebook</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-05_zeroes-gradebook.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>One quick note about your grades on iCollege. A few of you have noticed that you now have 0s for assignments that you haven’t turned in yet. Don’t worry! I just had iCollege update all the missing grades to 0 for the sake of more accurate grade calculation. Before today, if you checked your grades on iCollege, you’d be failing even if you turned in everything and got 100% on everything. That’s because the denominator was 650 points—the total number of points you can get this semester. But that’s inaccurate—we’ve only done exercises 1 and 2, so if you got the maximum score on those, you’d have a 40/650, or a 6% F. That’s not useful information! There’s no use including those in the denominator for now.</p>
<p>So now you should be able to see what your current grade is with the correct denominator (i.e.&nbsp;the points for everything from the beginning of the summer up to today, which is just 40 points), meaning the percentages you see are more accurate.</p>
<p>If you have a 0, don’t worry! Once you turn in past exercises the 0 will get replaced with the actual score. <strong>My not-caring-about-late-work policy still stands.</strong> The 0 is just a mathematical quirk to get iCollege to cooperate.</p>



 ]]></description>
  <category>course details</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-05_zeroes-gradebook.html</guid>
  <pubDate>Wed, 06 Sep 2023 00:06:00 GMT</pubDate>
</item>
<item>
  <title>Week 2 FAQs</title>
  <link>https://aysps.github.io/Data-Visualization_2024/news/2023-09-05_faqs_week-02.html</link>
  <description><![CDATA[ 

<div class="back-nav"><a href="../news/">← News</a></div>



<p>Hi everyone!</p>
<p>Since exercise 2 involved no code, I don’t have much in the way of code tips or anything :)</p>
<p>In the comments for exercise 2, I went through the CRAP acronym and pointed out little things that can be changed or improved for each of your designs. <strong>You don’t have to redo your posters.</strong> I gave that feedback to show what the CRAP design tinkering process looks like in real life. For instance, a few of you had had text and graphics that were only a couple pixels misaligned—just tweaking that to make everything perfectly inline does a lot to make designs feel more put together.</p>
<p>As I mentioned in the lecture, once you know about CRAP, you’ll start using it everywhere—every billboard, poster, book, website, etc. you see, you’ll try to identify what the designed tried to align each element with, which fonts they used, why they used the colors they did, why they grouped the text and images the way they did, and so on. Or when you come across something that you intuitively feel is ugly and poorly designed, you’ll be able to say why.</p>
<p>If you want to know more about basic design skills like this, I’d highly recommend getting <a href="https://www.amazon.com/Non-Designers-Design-Book-4th/dp/0133966151"><em>The Non-Designer’s Design and Type Book</em></a>. It’s a fantastic resource and goes way more in depth into CRAP and basic typography.</p>



 ]]></description>
  <category>FAQs</category>
  <guid>https://aysps.github.io/Data-Visualization_2024/news/2023-09-05_faqs_week-02.html</guid>
  <pubDate>Tue, 05 Sep 2023 23:58:00 GMT</pubDate>
</item>
</channel>
</rss>
